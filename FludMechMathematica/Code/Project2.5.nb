(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    611147,      13244]
NotebookOptionsPosition[    583775,      12776]
NotebookOutlinePosition[    584118,      12791]
CellTagsIndexPosition[    584075,      12788]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fluid Mechanics for English Majors", "Title",
 CellChangeTimes->{{3.762079808980502*^9, 3.7620798135652404`*^9}, {
  3.7634807257557917`*^9, 3.763480730944488*^9}, {3.763480852913862*^9, 
  3.763480886470215*^9}, {3.763841469741646*^9, 3.7638414703228393`*^9}, {
  3.7642718358081255`*^9, 3.7642718547274704`*^9}, {3.764499613663574*^9, 
  3.7644996187611656`*^9}},ExpressionUUID->"9a6528a5-69c2-48a2-99a5-\
63f2f7c44a7a"],

Cell[CellGroupData[{

Cell["Patrick O\[CloseCurlyQuote]Boyle and Lukas Negron", "Chapter",
 CellChangeTimes->{{3.76207983067152*^9, 
  3.762079863381001*^9}},ExpressionUUID->"3302af0f-930a-43d3-a7cb-\
dced8d0ec453"],

Cell[CellGroupData[{

Cell["Constants and Model", "Section",
 CellChangeTimes->{{3.7647987994731035`*^9, 
  3.7647988072880106`*^9}},ExpressionUUID->"d4233cf5-2905-46ce-bf15-\
982fa25b14fa"],

Cell[CellGroupData[{

Cell["Constants Dynamic Display", "Subsection",
 CellChangeTimes->{{3.763569729914215*^9, 3.7635697385625625`*^9}, {
  3.7636543537533765`*^9, 
  3.763654354997741*^9}},ExpressionUUID->"4fdfe745-d52e-433c-bb30-\
a198d74c9f13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Testing", " ", "method"}], " ", "-", " ", 
    RowBox[{"for", " ", "initializing", " ", "resetting"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"resetGlobalConstants", "[", "]"}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.763569884279462*^9, 3.7635699030955343`*^9}, {
  3.7636535278791776`*^9, 3.763653530043767*^9}, {3.763653801406313*^9, 
  3.7636538027971487`*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"6b9d1dbe-478a-4626-93ac-dc03e6492a83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Dynamic", " ", "wrapping", " ", "of", " ", "constants", " ", "so", " ", 
    "we", " ", "can", " ", "see", " ", "changes"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Dynamic", "[", "globalConstants", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7635697440740356`*^9, 3.763569748215197*^9}, {
  3.7636535129177713`*^9, 3.7636535231937127`*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"2ffa2dfb-1aa1-4fcf-af15-6e7bdf1987f5"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`globalConstants, StandardForm],
  ImageSizeCache->{105., {3., 9.}}]], "Output",
 CellChangeTimes->{
  3.7635697506837783`*^9, 3.7635697837232904`*^9, {3.7635767401849537`*^9, 
   3.763576755980444*^9}, 3.7635787988200684`*^9, {3.7636496147138243`*^9, 
   3.763649615384533*^9}, {3.7636510892395363`*^9, 3.7636511158003955`*^9}, {
   3.7636535592700853`*^9, 3.763653589016926*^9}, 3.7636536482278943`*^9, 
   3.763653728248331*^9, 3.763653769361825*^9, 3.763653918632428*^9, 
   3.76365407696443*^9, 3.7636541722217007`*^9, 3.763654213400155*^9, 
   3.7636542933915195`*^9, 3.763726046254326*^9, 3.7637271511762643`*^9, 
   3.763727277535982*^9, {3.763736174607648*^9, 3.763736176230506*^9}, {
   3.7637636537089305`*^9, 3.7637636555163884`*^9}, 3.7637653576232634`*^9, {
   3.7638410864408402`*^9, 3.7638410884432907`*^9}, {3.7639373339994183`*^9, 
   3.7639373352203627`*^9}, {3.764007812244869*^9, 3.76400781384557*^9}, {
   3.7642607466443624`*^9, 3.7642607481479864`*^9}, {3.7642635529823103`*^9, 
   3.7642635554803*^9}, {3.7642660942513895`*^9, 3.7642661071497297`*^9}, {
   3.764355471003978*^9, 3.764355473711646*^9}, 3.7643555236364756`*^9, {
   3.7644990773643885`*^9, 3.7644990794368973`*^9}, {3.764594000825715*^9, 
   3.764594003554561*^9}, {3.764614294083846*^9, 3.7646142969623747`*^9}, 
   3.764616021447775*^9, 3.764616415503499*^9, {3.7647655299599357`*^9, 
   3.764765532707756*^9}, {3.7647974021902666`*^9, 3.7647974053301163`*^9}, {
   3.7648646036875916`*^9, 3.7648646076360188`*^9}, 3.764895890086876*^9, {
   3.765129798025278*^9, 3.7651298007305636`*^9}, {3.7654796048667784`*^9, 
   3.7654796088222313`*^9}, {3.7658155042067204`*^9, 3.76581550749934*^9}, 
   3.7658241413038836`*^9, {3.76584189356369*^9, 3.7658418970600924`*^9}, 
   3.7658428770481663`*^9, 3.765842908245392*^9, {3.76584327740615*^9, 
   3.765843282521641*^9}, {3.7658441245476093`*^9, 3.765844127250101*^9}, {
   3.765886491924654*^9, 3.765886494450013*^9}, {3.765904264336459*^9, 
   3.7659042674502115`*^9}, {3.7659044520339503`*^9, 
   3.7659044666876554`*^9}, {3.765904817092079*^9, 3.7659048206973996`*^9}, {
   3.7659055545211906`*^9, 3.765905568707088*^9}, {3.765925955770179*^9, 
   3.765925959655202*^9}, {3.7659728173977275`*^9, 3.765972822108281*^9}, {
   3.765974202987712*^9, 3.765974206724004*^9}, {3.7659745195871515`*^9, 
   3.765974533656271*^9}, {3.7659817589048624`*^9, 3.765981763117811*^9}, {
   3.7659825631989207`*^9, 3.7659825674706974`*^9}, {3.7659834621313825`*^9, 
   3.7659834665019364`*^9}, {3.765998823024129*^9, 3.765998828865876*^9}, {
   3.7660089948636155`*^9, 3.766008999676252*^9}, {3.7660133572740736`*^9, 
   3.76601336095252*^9}, {3.766016524829743*^9, 3.7660165280179853`*^9}, {
   3.766017350095537*^9, 3.7660173528761196`*^9}, {3.7660198357933593`*^9, 
   3.7660198395268574`*^9}, {3.7660243091609435`*^9, 3.766024314321183*^9}, {
   3.766025244213377*^9, 3.7660252499033375`*^9}, 3.766028182087964*^9, 
   3.7660643723946447`*^9, 3.766066069428471*^9, {3.7660694018193827`*^9, 
   3.766069426152726*^9}, 3.766076862262133*^9, {3.766084576229109*^9, 
   3.766084580779848*^9}, 3.766092489060484*^9, {3.7661082807029176`*^9, 
   3.766108285507724*^9}, 3.7661083351341944`*^9},
 CellLabel->
  "Out[555]=",ExpressionUUID->"274228f5-d75f-485c-a075-329a9a4123ed"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MasterPathList Dynamic Display + simplePaths View", "Subsection",
 CellChangeTimes->{{3.7635783205880823`*^9, 3.7635783331573997`*^9}, {
  3.7636543278745313`*^9, 3.763654328593771*^9}, {3.763654391987981*^9, 
  3.763654404638271*^9}, {3.7647975443016853`*^9, 3.764797547713024*^9}, {
  3.7648699705464363`*^9, 
  3.7648699707463226`*^9}},ExpressionUUID->"9ea2438e-bdfb-4b56-a5f8-\
b79ecb169894"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "For", " ", "initalization", " ", "of", " ", "path", " ", "list", " ", 
    "and", " ", "resetting"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"resetMasterPathList", "[", "]"}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7635783889240847`*^9, 3.7635784157754574`*^9}, {
   3.763578455625592*^9, 3.7635784559199266`*^9}, {3.7635787177530823`*^9, 
   3.763578717982974*^9}, {3.7636536093494*^9, 3.7636536154791937`*^9}, 
   3.7636537465169106`*^9, {3.764799210033042*^9, 3.764799243077422*^9}, {
   3.7658188105334187`*^9, 3.7658188116206355`*^9}, {3.765983966557399*^9, 
   3.7659839672947493`*^9}, {3.765994947417513*^9, 3.7659949481530857`*^9}, {
   3.766069961240826*^9, 3.7660699622160053`*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"044e5434-4530-46ce-8f37-f2bd3adfbd5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Dynamic", " ", "wrapping", " ", "allows", " ", "us", " ", "to", " ", 
    "observe", " ", "changes"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Dynamic", "[", "masterPathList", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7635783369133024`*^9, 3.7635783405095043`*^9}, {
  3.7636536169957314`*^9, 3.763653626211404*^9}, {3.7647985130865703`*^9, 
  3.7647985325265365`*^9}, {3.7647989560479374`*^9, 3.7647990319867153`*^9}, {
  3.764799068920763*^9, 3.764799112502583*^9}, {3.764799164704953*^9, 
  3.7647991767032013`*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"1f7ef8c8-e94a-4930-8b3d-1d7808f273f1"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`masterPathList, StandardForm],
  ImageSizeCache->{98., {0., 9.}}]], "Output",
 CellChangeTimes->{
  3.765129938289139*^9, {3.7654796049118414`*^9, 3.7654796088780346`*^9}, {
   3.7658155042394676`*^9, 3.7658155075299735`*^9}, 3.765824141362009*^9, {
   3.76584189359557*^9, 3.7658418970862093`*^9}, 3.7658428770793943`*^9, 
   3.7658432774217777`*^9, {3.76584412457885*^9, 3.7658441272813416`*^9}, {
   3.7658864919454994`*^9, 3.7658864945775433`*^9}, {3.7659042643675504`*^9, 
   3.765904267516426*^9}, {3.7659044520925455`*^9, 3.7659044667222624`*^9}, {
   3.7659048171503725`*^9, 3.7659048207498093`*^9}, {3.76590555457504*^9, 
   3.765905568728203*^9}, {3.7659259558298016`*^9, 3.765925959673004*^9}, {
   3.7659728174623404`*^9, 3.765972822150605*^9}, {3.765974203091509*^9, 
   3.7659742067824297`*^9}, {3.765974529924369*^9, 3.7659745337114515`*^9}, {
   3.7659817589873824`*^9, 3.7659817633014584`*^9}, {3.765982563291086*^9, 
   3.765982567741495*^9}, {3.7659834621955194`*^9, 3.765983466699341*^9}, {
   3.765998823062896*^9, 3.765998828934857*^9}, {3.7660089949744654`*^9, 
   3.7660089997263002`*^9}, {3.7660133573053246`*^9, 
   3.7660133609837637`*^9}, {3.766016524860997*^9, 3.7660165280336056`*^9}, {
   3.766017350111149*^9, 3.766017352907359*^9}, {3.7660198358245983`*^9, 
   3.766019839558132*^9}, {3.7660243091886387`*^9, 3.7660243144913826`*^9}, {
   3.7660252442648563`*^9, 3.766025249961329*^9}, 3.7660281821513724`*^9, 
   3.7660643724465055`*^9, 3.7660660694883113`*^9, {3.7660694018607483`*^9, 
   3.7660694261819344`*^9}, 3.766076862300994*^9, {3.7660845762915316`*^9, 
   3.7660845808070154`*^9}, 3.7660924891113467`*^9, {3.7661082807414184`*^9, 
   3.7661082855615463`*^9}, 3.7661083351891313`*^9},
 CellLabel->
  "Out[557]=",ExpressionUUID->"5691b4fa-bb34-4155-95a2-011c3895b0dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Execute", " ", "to", " ", "show", " ", "current", " ", "connection", " ", 
    "view"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"A", " ", "view", " ", "of", " ", "the", " ", "paths"}], ",", " ", 
    RowBox[{"the", " ", "prev", " ", "path"}], ",", " ", 
    RowBox[{"and", " ", "the", " ", "next", " ", "path"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"updateSimplePaths", "[", "]"}], "//", "TableForm"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764798454873287*^9, 3.764798491744898*^9}, {
   3.7647985463967743`*^9, 3.7647985740650654`*^9}, {3.764799267106685*^9, 
   3.7647992678293605`*^9}, {3.7659895232880106`*^9, 3.765989534515265*^9}, 
   3.7659955322382593`*^9, {3.7659955702940183`*^9, 3.7659955723732696`*^9}},
 CellLabel->
  "In[558]:=",ExpressionUUID->"18db6d4d-db8d-4bcc-ace8-d008fec6a757"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", "}"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7647985631541686`*^9, 3.764798930556308*^9, {3.7647991981775017`*^9, 
   3.764799223153427*^9}, {3.7648646037636585`*^9, 3.764864607707607*^9}, 
   3.7648958902075577`*^9, {3.765129798109697*^9, 3.76512980078094*^9}, {
   3.7654796049552345`*^9, 3.7654796089073296`*^9}, {3.7658155042587304`*^9, 
   3.765815507543273*^9}, 3.7658241414014397`*^9, {3.7658418936148095`*^9, 
   3.7658418971044908`*^9}, 3.76584287712626*^9, {3.7658432774530134`*^9, 
   3.765843299460292*^9}, {3.765844124594487*^9, 3.765844127296963*^9}, {
   3.7658864919620943`*^9, 3.765886494593151*^9}, {3.7659042644017415`*^9, 
   3.7659042675505605`*^9}, {3.765904463850317*^9, 3.765904466741754*^9}, {
   3.7659048171882715`*^9, 3.765904820785725*^9}, {3.7659055546064577`*^9, 
   3.765905568741647*^9}, {3.765925955877571*^9, 3.7659259596846533`*^9}, {
   3.7659728174982495`*^9, 3.765972822181884*^9}, {3.765974203122908*^9, 
   3.765974206816823*^9}, {3.76597452996179*^9, 3.765974533744401*^9}, 
   3.7659773463345723`*^9, {3.765981759023858*^9, 3.765981763334589*^9}, {
   3.76598256333072*^9, 3.7659825677727394`*^9}, {3.765983462226612*^9, 
   3.7659834667341394`*^9}, 3.765988381157467*^9, 3.7659884451918354`*^9, {
   3.765988854586155*^9, 3.765988874077466*^9}, 3.7659889419031143`*^9, 
   3.765989141427356*^9, {3.7659895238941298`*^9, 3.7659895352426033`*^9}, 
   3.7659952825239964`*^9, 3.7659955327994165`*^9, 3.7659955728775616`*^9, 
   3.7659981003758717`*^9, {3.765998823103913*^9, 3.7659988289714274`*^9}, {
   3.766008995000884*^9, 3.766008999756277*^9}, {3.766013357320936*^9, 
   3.7660133609993844`*^9}, {3.766016524876607*^9, 3.766016528049225*^9}, {
   3.766017350126809*^9, 3.7660173529229794`*^9}, {3.766019835855951*^9, 
   3.766019839573722*^9}, {3.766024309223235*^9, 3.7660243144989715`*^9}, {
   3.7660252442849317`*^9, 3.766025249993513*^9}, 3.7660281821937323`*^9, 
   3.766064372499364*^9, 3.7660660695272336`*^9, {3.7660694018898525`*^9, 
   3.766069426200884*^9}, 3.766076862320538*^9, {3.7660845763323865`*^9, 
   3.7660845808200126`*^9}, 3.766092489155259*^9, {3.7661082807613883`*^9, 
   3.7661082855929875`*^9}, 3.766108335205837*^9},
 CellLabel->
  "Out[558]//TableForm=",ExpressionUUID->"2b016d06-3e8b-4b19-b909-\
ab398c8745d4"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculations", "Section",
 CellChangeTimes->{{3.7627990720683675`*^9, 3.762799079795213*^9}, {
  3.762803949601963*^9, 
  3.7628039529386387`*^9}},ExpressionUUID->"06d25a75-90b2-41c7-a608-\
5e4d53f3d8f6"],

Cell[CellGroupData[{

Cell["Constants", "Subsection",
 CellChangeTimes->{{3.763569718309495*^9, 
  3.763569719207404*^9}},ExpressionUUID->"6ac1d491-b3db-4e86-9a26-\
cabae540e262"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"List", " ", "of", " ", "modifiable", " ", 
    RowBox[{"constants", ".", " ", "Used"}], " ", "for", " ", "various", " ", 
    "calculations"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"resetGlobalConstants", "[", "]"}], " ", ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"globalConstants", "=", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<gravity\>\"", " ", "\[Rule]", "  ", 
        RowBox[{"Quantity", "[", 
         RowBox[{"9.8", ",", 
          RowBox[{"\"\<Meters\>\"", "/", 
           SuperscriptBox[
            RowBox[{"(", "\"\<Seconds\>\"", ")"}], "2"]}]}], "]"}]}], " ", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<environmentTemp\>\"", " ", "\[Rule]", " ", 
        RowBox[{"Quantity", "[", 
         RowBox[{"4", ",", " ", "\"\<CelsiusHeatUnits\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<densityWater\>\"", " ", "\[Rule]", " ", 
        RowBox[{"Quantity", "[", 
         RowBox[{"1000", ",", 
          RowBox[{"\"\<Kilograms\>\"", "/", 
           SuperscriptBox[
            RowBox[{"(", "\"\<Meters\>\"", ")"}], "3"]}]}], "]"}]}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Note", ":", " ", 
        RowBox[{
        "can", " ", "implement", " ", "changing", " ", "density", " ", "of", 
         " ", "water", " ", "with", " ", "respect", " ", "to", " ", 
         "temperature"}]}], " ", "*)"}], "\[IndentingNewLine]", "|>"}]}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7629587105404463`*^9, 3.7629588109172707`*^9}, {
   3.7629589162028313`*^9, 3.762958917562851*^9}, 3.7629590000941567`*^9, {
   3.762959533621014*^9, 3.7629595440013723`*^9}, {3.7629596006151175`*^9, 
   3.7629596046041527`*^9}, 3.762959705484236*^9, {3.762961625876981*^9, 
   3.7629616677697177`*^9}, {3.7629619415797787`*^9, 
   3.7629620875510073`*^9}, {3.7629621860843735`*^9, 
   3.7629621862397823`*^9}, {3.763248648728403*^9, 3.763248670381753*^9}, {
   3.7635698723223715`*^9, 3.7635698793979073`*^9}, {3.763576735448409*^9, 
   3.763576736383624*^9}, {3.763653818747162*^9, 3.7636538202131243`*^9}, {
   3.766066100856435*^9, 3.7660661017151384`*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"3352ba1a-ae5f-4b4a-abd3-8a88d0e86376"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "used", " ", "so", " ", "that", " ", "the", " ", "constants", " ", "are", 
    " ", "initalized", " ", "when", " ", "running", " ", "intialization", " ",
     "cells"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"resetGlobalConstants", "[", "]"}], ";"}]}]], "Code",
 CellChangeTimes->{{3.766066091324934*^9, 3.766066135606497*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"862ed70e-4c9b-4f7b-898b-56cedc5e2571"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Returns", " ", "value", " ", "for", " ", "a", " ", 
    RowBox[{"constant", ".", " ", "Can"}], " ", "be", " ", "used", " ", "to", 
    " ", "change", " ", "a", " ", 
    RowBox[{"constant", "'"}], "s", " ", "value", " ", "as", " ", "well"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"returnConstant", "[", "constant_", "]"}], ":=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"globalConstants", "[", "constant", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7629595477369595`*^9, 3.7629595799938235`*^9}, {
  3.762959614676381*^9, 3.76295966573569*^9}, {3.762968195120392*^9, 
  3.762968195248975*^9}},
 CellLabel->
  "In[561]:=",ExpressionUUID->"078eac80-85db-498d-a99c-3cd98090f335"],

Cell["Ex : returnConstant[\"gravity\"] = newValue", "Text",
 CellChangeTimes->{{3.763248793340076*^9, 
  3.763248794901149*^9}},ExpressionUUID->"a35368ea-d5ed-461b-8161-\
8f9b64661dd7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pipe", "Subsection",
 CellChangeTimes->{{3.76280395716241*^9, 
  3.762803957756245*^9}},ExpressionUUID->"9302cb26-79bd-4ccd-9c56-\
74c873fddf72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Calculating", " ", "the", " ", "cross"}], "-", 
    RowBox[{
    "sectional", " ", "area", " ", "of", " ", "a", " ", "pipe", " ", "using", 
     " ", "its", " ", "diameter"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"diameter", " ", 
    RowBox[{"Units", ":", " ", "meters"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", " ", 
    RowBox[{"Units", ":", " ", 
     SuperscriptBox["meters", "2"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"calcCrossArea", "[", "diameter_", "]"}], ":=", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"N", "[", 
    RowBox[{
     FractionBox["Pi", "4"], "*", 
     SuperscriptBox["diameter", "2"]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7628039638127604`*^9, 3.762804011072705*^9}, {
   3.762804074270156*^9, 3.762804081423247*^9}, {3.76280412945537*^9, 
   3.762804146402631*^9}, {3.762804187194974*^9, 3.7628041991274076`*^9}, {
   3.7628042815669875`*^9, 3.7628043021298866`*^9}, {3.7628044633737946`*^9, 
   3.762804469458471*^9}, {3.762804830853233*^9, 3.762804836511303*^9}, {
   3.76280895642918*^9, 3.762808964214222*^9}, {3.762809072576369*^9, 
   3.762809142247401*^9}, {3.762957866350666*^9, 3.7629578682992077`*^9}, {
   3.7629580022035217`*^9, 3.7629580048697824`*^9}, {3.7629591394499826`*^9, 
   3.762959204786779*^9}, {3.7629593480466213`*^9, 3.762959376482605*^9}, 
   3.762959424384347*^9, {3.7629594720092597`*^9, 3.7629595023170357`*^9}, 
   3.762961437160843*^9, {3.762965535617111*^9, 3.7629655424456987`*^9}, {
   3.7629681879820595`*^9, 3.7629681883732367`*^9}},
 CellLabel->
  "In[562]:=",ExpressionUUID->"51ce04a5-1be8-44ac-82f5-710366664a9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcCrossArea", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"4", ",", " ", "\"\<Meters\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.762959817880435*^9, 3.7629598202940335`*^9}, {
  3.762965551204012*^9, 3.7629655621425257`*^9}},
 CellLabel->
  "In[563]:=",ExpressionUUID->"a527517e-44aa-4996-adec-1900074bcba1"],

Cell[BoxData[
 TemplateBox[{"12.566370614359172`",RowBox[{
     SuperscriptBox["\"m\"", "2"]}],"meters squared",SuperscriptBox[
   "\"Meters\"", "2"]},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.7629598208317165`*^9, {3.7629655472579308`*^9, 3.7629655627201757`*^9}, 
   3.763726046370207*^9, 3.763727151276863*^9, 3.7637272776788254`*^9, 
   3.763736176359043*^9, 3.763763655676637*^9, 3.763765357762265*^9, 
   3.763841088568449*^9, 3.763937335345335*^9, 3.7640078140012903`*^9, 
   3.7642607482480087`*^9, 3.7642635556519833`*^9, 3.7642661072770042`*^9, 
   3.764355473841634*^9, 3.7643555237276745`*^9, 3.7644990795422835`*^9, 
   3.7645940036750193`*^9, 3.7646142971471844`*^9, 3.7646160215760164`*^9, 
   3.7646164156404843`*^9, 3.764765532888156*^9, 3.764797405428714*^9, 
   3.7648646078431826`*^9, 3.765129800866309*^9, 3.765479609066085*^9, 
   3.765815507645547*^9, 3.7658418972209463`*^9, 3.7658441273906918`*^9, 
   3.7658864946784*^9, 3.7659042677081037`*^9, 3.7659044669701405`*^9, 
   3.7659048210081472`*^9, 3.765905568890996*^9, 3.765925959744427*^9, 
   3.7659728223593903`*^9, 3.7659742069584093`*^9, 3.765974533855362*^9, 
   3.7659817634826517`*^9, 3.7659825678905053`*^9, 3.7659834668793397`*^9, 
   3.7659988291600876`*^9, 3.766008999869171*^9, 3.766013361087849*^9, 
   3.7660165281429644`*^9, 3.7660173529878597`*^9, 3.7660198396831956`*^9, 
   3.7660243146921854`*^9, 3.766025250164319*^9, 3.7660694263764563`*^9, 
   3.766084580937066*^9, 3.7661082857569914`*^9, 3.766108335335684*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"f1c7e2aa-e8ef-43bd-b8c4-9ffd2314e404"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculating", " ", "the", " ", "velocity", " ", "of", " ", "liquid", " ", 
    "through", " ", "a", " ", "pipe", " ", "using", " ", "the", " ", 
    "flowRate", " ", "in", " ", "and", " ", "the", " ", "diameter"}], " ", 
   "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"flowRateIn", " ", "=", " ", "flowRateOut"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"flowRate", " ", "=", " ", 
    RowBox[{"Velocity", " ", "*", " ", "CrossArea"}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"flowIn", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{
      SuperscriptBox["m", "3"], "/", "sec"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"diameter", " ", 
    RowBox[{"Units", ":", " ", "m"}]}], " ", "*)"}], "\n", "   ", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{"m", "/", "sec"}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"calcPipeVelocity", "[", 
    RowBox[{"flowIn_", ",", " ", "diameter_"}], "]"}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"flowIn", "/", 
    RowBox[{"calcCrossArea", "[", "diameter", "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.762799083794979*^9, 3.7627990846629734`*^9}, {
   3.7627991912222285`*^9, 3.762799205466166*^9}, {3.762799358201953*^9, 
   3.7627993696304393`*^9}, {3.7627995184118385`*^9, 3.76279952043476*^9}, 
   3.762803330069788*^9, {3.762803861464298*^9, 3.7628039377958727`*^9}, {
   3.7628039717267294`*^9, 3.7628039737615285`*^9}, {3.76280432193956*^9, 
   3.762804324701192*^9}, {3.7628043693189764`*^9, 3.7628044970808015`*^9}, {
   3.7628045520101547`*^9, 3.7628045988434706`*^9}, {3.7628046759498963`*^9, 
   3.7628047472790966`*^9}, {3.7628048094163685`*^9, 3.762804827450237*^9}, {
   3.7628091374939756`*^9, 3.762809138425087*^9}, {3.76280917964109*^9, 
   3.7628091893319836`*^9}, {3.7629592134873075`*^9, 
   3.7629593314682665`*^9}, {3.7629593818958015`*^9, 3.762959470252347*^9}, {
   3.762960184318836*^9, 3.7629602393376055`*^9}, {3.7629605293580694`*^9, 
   3.762960563477414*^9}, {3.7629613252604656`*^9, 3.7629613358743377`*^9}, {
   3.7629614089236975`*^9, 3.7629614284984694`*^9}, {3.762965598728135*^9, 
   3.7629656103401546`*^9}, 3.762966734887967*^9, {3.7629681818090367`*^9, 
   3.7629681821423435`*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"1fbcbb7b-bb74-4956-b3b0-7a0595370d5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcPipeVelocity", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"15", ",", " ", 
     RowBox[{
      SuperscriptBox["\"\<Meters\>\"", "3"], "/", "\"\<Seconds\>\""}]}], 
    "]"}], ",", " ", 
   RowBox[{"Quantity", "[", 
    RowBox[{"4", ",", " ", "\"\<Meters\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7629597148917503`*^9, 3.7629597207916036`*^9}, {
  3.762965568582608*^9, 3.7629656210972815`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"268f54c8-81cd-4ee2-92cf-4c2b24d6a170"],

Cell[BoxData[
 TemplateBox[{
  "1.1936620731892151`",
   RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     "\"s\""}],"meters per second",FractionBox["\"Meters\"", "\"Seconds\""]},
  "Quantity"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVyk0og3EAx/FJ1hhWmHnZaLPD3KR5OaAeh5kcjNNyMWYXq3nvWY2idlpC
iLxl4yBymNK8RDPDktocVg6bRijj8Za32jC//+Hb5/IVt3Y06uJYLJYcGTce
R2oTGUrW7A3sJTHUsD+s24c211Yf0dzE87qgZP673Aftdbsp59DZm8H5hOHk
J7aUy1AD9sNOBbzyW95ccCxMq9yQKtOPHkFbqKL4FVaNG8uJmuC7qjSZoe7W
6bU2uMWVTRigQbvZ3gHdS19zxCnxon4bckL2qAdun8bO7uFPTFTbnsJQpnip
gJ+Kz0Tn7MDZjcLfY2gYfE73QHP0wh2AWU2mrlsY7GmxEB2WJQfxYyYv4478
lxHOC7SovA8JPIY6kV9Ps2G00nlAlFi7lUmwiI6tE9f4GhEXKtQrC2mwQfs3
KYAjPqkjG0bG2dW5kBaKV4nLge+QEFrNal4+VC8qzcSHgvrMEmirsfVXwNjN
Lk8JL4ae+cR/u+fI7g==
  "],
 CellLabel->
  "Out[565]=",ExpressionUUID->"70fc5ce1-f522-4145-b162-97ff7cef89c2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Pump", "Subsection",
 CellChangeTimes->{{3.762959186896059*^9, 
  3.762959187404121*^9}},ExpressionUUID->"a8432067-acd3-4be7-9d00-\
3aae96a381aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculating", " ", "the", " ", "input", " ", "flowRate", " ", "a", " ", 
    "system", " ", "with", " ", "a", " ", "pump"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    SubscriptBox["W", "elec"], "=", " ", 
    FractionBox[
     RowBox[{
     "flowRate", " ", "*", " ", "densityOfLiquid", " ", "*", " ", 
      "acclerationOfGravity", " ", "*", " ", "headValuePump"}], 
     "efficiency"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"hPump", " ", "\[Rule]", " ", 
    RowBox[{
     SubscriptBox["Z", "B"], "-", 
     RowBox[{
      SubscriptBox["Z", "A"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"distance", " ", "from", " ", "free"}], "-", 
        RowBox[{
        "surfaces", " ", "of", " ", "input", " ", "reservoir", " ", "to", " ",
          "output", " ", "reservoir"}]}], " "}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"watts", " ", 
    RowBox[{"Units", ":", " ", "watts"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"densityOfLiquid", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{"kg", "/", 
      SuperscriptBox["m", "3"]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{"efficiency", ":", " ", 
       RowBox[{"number", " ", "on", " ", 
        RowBox[{"(", 
         RowBox[{"0", ",", " ", "1"}]}]}]}], "]"}], " ", "interval"}], ",", 
    " ", 
    RowBox[{"a", " ", "percentage"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"hPump", ":", " ", "m"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{
      SuperscriptBox["m", "3"], "/", "sec"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"calcFlowRateForPump", "[", 
    RowBox[{
    "watts_", ",", " ", "densityOfLiquid_", ",", " ", "efficiency_", ",", " ",
      "hPump_"}], "]"}], ":=", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"watts", " ", "*", " ", "efficiency"}], ")"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"densityOfLiquid", "*", 
      RowBox[{"globalConstants", "[", "\"\<gravity\>\"", "]"}], "*", 
      "hPump"}], ")"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.762959979306588*^9, 3.762960181872588*^9}, {
  3.7629605218991194`*^9, 3.76296052660021*^9}, {3.762960575236264*^9, 
  3.7629605796782217`*^9}, {3.7629606184739804`*^9, 3.7629606462617984`*^9}, {
  3.762961140888716*^9, 3.7629613028550262`*^9}, {3.7629613420856533`*^9, 
  3.7629614037797785`*^9}, {3.7629614496052523`*^9, 3.7629614532446404`*^9}, {
  3.762961529803169*^9, 3.7629615327597857`*^9}, {3.7629621322820044`*^9, 
  3.762962133007536*^9}, {3.762962356859191*^9, 3.762962388371214*^9}, {
  3.762962443296122*^9, 3.7629625367359247`*^9}, {3.762965646526186*^9, 
  3.762965650840059*^9}, {3.762966803858291*^9, 3.762966875591876*^9}, {
  3.76296703443042*^9, 3.7629670702159157`*^9}, {3.7629679458387957`*^9, 
  3.762967946828124*^9}, {3.7629681768934493`*^9, 3.762968177029812*^9}},
 CellLabel->
  "In[566]:=",ExpressionUUID->"44a6559f-c089-478f-9ccf-6fef0e8e9380"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pumpFlowRateTestOut", " ", "=", " ", 
  RowBox[{"UnitSimplify", "[", 
   RowBox[{"calcFlowRateForPump", "[", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{"1000", ",", " ", "\"\<Watts\>\""}], "]"}], ",", " ", 
     RowBox[{"globalConstants", "[", "\"\<densityWater\>\"", "]"}], ",", " ", 
     "0.75", ",", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"5", ",", " ", "\"\<Meters\>\""}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.762961535441132*^9, 3.7629615456169415`*^9}, {
  3.762962117050025*^9, 3.7629621413864484`*^9}, {3.7629621959161673`*^9, 
  3.762962196004196*^9}, {3.762962550283497*^9, 3.76296260591282*^9}, {
  3.762962740154234*^9, 3.762962746120829*^9}, {3.763249069283635*^9, 
  3.763249070087032*^9}},
 CellLabel->
  "In[567]:=",ExpressionUUID->"f26d8044-eec6-4ea3-88df-462333cd8204"],

Cell[BoxData[
 TemplateBox[{
  "0.015306122448979591`",
   RowBox[{"\"W\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     "\"Pa\""}],"watts per pascal",FractionBox["\"Watts\"", "\"Pascals\""]},
  "Quantity"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVxVkow3EAB/ApWzb//Zdj5hqpaQ9CFqKk/hLjQXhSPAh7MOUMD9aWo+QI
TY6cJYQ5XrQcI9qWSLOnFZOjJuKfs4XY+P4ePn1iKuqKVT4cDicdkgqGYpR8
lgl/6pGTtfkr+jz8O3/iIpdF7Mbl4zNdSV+TgGVqN+xOE7aIv1V7eFK/30ym
KqW2Q0x3etPOcHbAgdCOJ3ylfm68S7l5Mn+WWTLY6nPwlWP07RD/aXWFZux4
bxm0YDozV/GKB940aWSL1VOYSrEMd6J9pQrPDCYO12LB7I66Ds/avZPkKuNG
zRb2LJp+jvCNiTp9wBfj8jy1kGVeS+IlYpplYst04dt43qrwWLFL9xl0hDcv
b81OTLd1N7jwXEdrL3lVtmwkny7Jg+8wL9SX/4KTBxyPXBHLyC6exni48fz4
gMwctykFWO3yWyP3c6ql/vhLuz4diKkM/ogEu20JxjCs0YuyIjA9JV8mK5ze
60gc+KwSReOoj6Iusqa8NCQFd+sNmgy8IDSLlPie+yEm/wNBQNTs
  "],
 CellLabel->
  "Out[567]=",ExpressionUUID->"1cceac98-d9c0-4111-85e3-093e52340771"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"pumpFlowRateTestOut", ",", " ", 
   RowBox[{
    SuperscriptBox["\"\<Meters\>\"", "3"], "/", "\"\<Seconds\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7629626372830944`*^9, 3.7629627199036207`*^9}, {
  3.7629627503477335`*^9, 3.762962762168844*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"49c89002-43bf-4dcc-b9bc-f83b873538c6"],

Cell[BoxData[
 TemplateBox[{"0.015306122448979591`",RowBox[{
     SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", "\"s\""}],"meters cubed per second",FractionBox[
    SuperscriptBox["\"Meters\"", "3"], "\"Seconds\""]},
  "Quantity"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzWkow3EAxvG5lm1mco25UlJrpeUaWvSnNBKLFxJvmKW2tZGUYyRWhFKE
ckR5g2grWoTZHCmtmVdeTIs2Jf1duc95fi+ePu+eb3KDrlLpx2AwcrF1zVOC
jEVTbq0zmaiV1AiJhqKC6xIomL8VlUJ/s224lU1TleFnrh1Y3/Ol3IUm8V4b
UaFOdNjgRacv5xTuG61cJ3zZSAx+haUjb8wUDk2FxDmbi6Hgd+rJBqPPeuUH
cEnYMXoI9Yuy9EcYWdGdQ8xo9cmzQ2gq09O30ghbNsXjWrig3VbpoFnvmyGm
XpnUm9CbZfk+hnm1ofYbWBwgLFFx0XlP40eFwpNewRac/cn4PYIO30fEMXzh
eA5ccNEy2OKFk9LOIaKka8VM3JEKI6/hnzGI9QA1n+e3QTyaosfvppgwLN9u
JQYOdMvYsN/IXiPec9UJHCiPMc2Fw3YWZ4IPL8vF5liYPxZRGAftM6JlosQV
cBlPfuubeEnQPV1lIJYt1EVnwaGLVb0UTioOeTJYPfEcRfwHIq7RgA==
  "],
 CellLabel->
  "Out[568]=",ExpressionUUID->"0ca28b41-04f5-4e0d-9be9-ae5481a5c2cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculates", " ", "a", " ", 
    RowBox[{"pump", "'"}], "s", " ", "capacity", " ", "to", " ", "do", " ", 
    "work"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"A", " ", "is", " ", "the", " ", "input"}], ",", " ", 
    RowBox[{"B", " ", "is", " ", "the", " ", "output"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"pressureA", "/", "B"}], " ", "is", " ", "calculated", " ", 
    "using", " ", "the", " ", "calcPressureReservoir", " ", "function"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"pressureA", "/", "B"}], " ", "is", " ", "0", " ", "if", " ", 
    "exposed", " ", "to", " ", "atmosphere"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"heightA", " ", "<", " ", "heightB"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"pressureA", "/", "B"}], " ", 
    RowBox[{"Units", ":", " ", "pascals"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"densityLiq", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{"kg", "/", 
      SuperscriptBox["m", "3"]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"heightA", "/", "B"}], " ", 
    RowBox[{"Units", ":", " ", "m"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", " ", 
    RowBox[{"Units", ":", " ", "m"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"calcPumpHead", "[", 
     RowBox[{
     "pressureA_", ",", " ", "heightA_", ",", " ", "pressureB_", ",", " ", 
      "heightB_", ",", " ", "densityLiq_"}], " ", "]"}], " ", ":=", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     FractionBox["pressureB", 
      RowBox[{"densityLiq", "*", 
       RowBox[{"globalConstants", "[", "\"\<gravity\>\"", "]"}]}]], "+", 
     "heightB", "-", 
     FractionBox["pressureA", 
      RowBox[{"densityLiq", "*", 
       RowBox[{"globalConstants", "[", "\"\<gravity\>\"", "]"}]}]], "-", 
     "heightA"}]}], "\[IndentingNewLine]", "\t"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.762967955191454*^9, 3.762967963565878*^9}, {
  3.762968056577885*^9, 3.762968126714118*^9}, {3.7629681594238443`*^9, 
  3.762968174788754*^9}, {3.7629692345420885`*^9, 3.762969386418029*^9}, {
  3.762969424321023*^9, 3.7629694524783397`*^9}, {3.762969865493022*^9, 
  3.762969944197509*^9}, {3.762970498978485*^9, 3.762970506516097*^9}, {
  3.7629707686134014`*^9, 3.7629708592862487`*^9}, {3.76297129865931*^9, 
  3.76297130860076*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"ad58b53b-036c-4be7-8e62-13a3815347bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcPumpHead", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"0", ",", " ", "\"\<Pascals\>\""}], "]"}], ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"5", ",", " ", "\"\<Meters\>\""}], "]"}], ",", " ", 
   RowBox[{"Quantity", "[", 
    RowBox[{"0", ",", " ", "\"\<Pascals\>\""}], "]"}], ",", " ", 
   RowBox[{"Quantity", "[", 
    RowBox[{"10", ",", " ", "\"\<Meters\>\""}], "]"}], ",", " ", 
   RowBox[{"globalConstants", "[", "\"\<densityWater\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7629708278282995`*^9, 3.7629709180625668`*^9}, {
  3.762971113473341*^9, 3.762971197911092*^9}, {3.762971274727648*^9, 
  3.762971275252322*^9}, {3.7629713157341337`*^9, 3.762971331258461*^9}},
 CellLabel->
  "In[570]:=",ExpressionUUID->"c86fda9e-633a-414a-8319-2240cc4248fc"],

Cell[BoxData[
 TemplateBox[{"5.`","\"m\"","meters","\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.7629708700436487`*^9, 3.7629708739636736`*^9}, {
   3.7629709190885925`*^9, 3.7629709338915186`*^9}, {3.762971007023225*^9, 
   3.762971010175132*^9}, 3.7629711440468607`*^9, {3.76297118810264*^9, 
   3.7629711983638744`*^9}, 3.7629712827237444`*^9, {3.762971324001844*^9, 
   3.7629713318014593`*^9}, 3.7637260465879736`*^9, 3.7637271520202293`*^9, 
   3.763727278046404*^9, 3.7637361770629873`*^9, 3.763763656108512*^9, 
   3.7637653580977*^9, 3.763841089119382*^9, 3.7639373358295946`*^9, 
   3.7640078146740103`*^9, 3.764260748889556*^9, 3.764263556141167*^9, 
   3.764266107939406*^9, 3.76435547441735*^9, 3.7643555239775953`*^9, 
   3.7644990801228933`*^9, 3.7645940042034607`*^9, 3.7646142976519823`*^9, 
   3.7646160219688435`*^9, 3.764616416071211*^9, 3.7647655337157917`*^9, 
   3.7647974060923014`*^9, 3.7648646086918287`*^9, 3.7651298014506645`*^9, 
   3.7654796096357183`*^9, 3.7658155081685143`*^9, 3.7658418977502346`*^9, 
   3.765844127953061*^9, 3.765886495288126*^9, 3.76590426845269*^9, 
   3.765904468089202*^9, 3.76590482145856*^9, 3.7659055694448295`*^9, 
   3.7659259603467817`*^9, 3.765972822919119*^9, 3.7659742075740337`*^9, 
   3.7659745345460033`*^9, 3.765981764095066*^9, 3.7659825685334578`*^9, 
   3.7659834675287995`*^9, 3.7659988296334953`*^9, 3.766009000525757*^9, 
   3.7660133616814623`*^9, 3.766016528736617*^9, 3.7660173534877405`*^9, 
   3.766019840245489*^9, 3.7660243154109693`*^9, 3.76602525078122*^9, 
   3.7660694270767517`*^9, 3.7660845815423393`*^9, 3.766108286263775*^9, 
   3.766108335692813*^9},
 CellLabel->
  "Out[570]=",ExpressionUUID->"102b4840-2fd1-47b8-808b-d94d5b3f2dee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reservoir", "Subsection",
 CellChangeTimes->{{3.762970001340264*^9, 
  3.7629700023372793`*^9}},ExpressionUUID->"0ccb8d8d-4dd1-4b29-90a3-\
419124eea84c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "the", " ", "pressure", " ", "exerted", " ", "on", " ", 
    "a", " ", 
    RowBox[{"reservoir", "'"}], "s", " ", "free", " ", "surface"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"densityOfUpperFluid", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{"kg", "/", 
      SuperscriptBox["m", "3"]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"ceilingDis", " ", 
    RowBox[{"Units", ":", " ", "m"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"gaugePressure", " ", 
    RowBox[{"Units", ":", " ", "pascals"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", " ", 
    RowBox[{"Units", ":", " ", "pascals"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"calcPressureReservoir", "[", 
    RowBox[{
    "densityOfUpperFluid_", ",", " ", "ceilingDis_", ",", " ", 
     "gaugePressure_"}], "]"}], ":=", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"densityOfUpperFluid", "*", 
      RowBox[{"globalConstants", "[", "\"\<gravity\>\"", "]"}], "*", 
      "ceilingDis"}], ")"}], "+", "gaugePressure"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7629700071925635`*^9, 3.762970096504387*^9}, {
  3.762970476910009*^9, 3.7629704951974277`*^9}, {3.762970572977934*^9, 
  3.762970658218747*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"86580193-954d-4b25-9f6d-48cc68b877c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcPressureReservoir", "[", 
  RowBox[{
   RowBox[{"globalConstants", "[", "\"\<densityWater\>\"", "]"}], ",", " ", 
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", " ", "\"\<Meters\>\""}], "]"}], ",", " ", 
   RowBox[{"Quantity", "[", 
    RowBox[{"1000", ",", " ", "\"\<Pascals\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762970632741685*^9, 3.762970707256112*^9}, {
  3.7651440962665234`*^9, 3.7651441013931828`*^9}},
 CellLabel->
  "In[572]:=",ExpressionUUID->"70e1eb14-6456-4f11-84c1-5b5215380fde"],

Cell[BoxData[
 TemplateBox[{"10800.`","\"Pa\"","pascals","\"Pascals\""},
  "Quantity"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVy2kog3EAx/EHWTaboc2cIV5IqSGLJfVIcmfLJEmSI1OGIiHkWMtZJNJI
ajlKTbQmRxtj0oY3ypklSjzlKFu58vu/+PZ59Y2sVMmr3SiKkqAc4717Hpuh
dY0THOJi8/n1NoehU13uNTvQoN1rIX51RZ2YYfufZ8opvC228M7gTEus1yd8
HvphRXsztBf/ojET9t/NvZuhW4O6cB+W9fWOWaCjXpbwBnXcnmRibiZLJuEy
tLJOs1IFR9ckEw3wUmtSquBwh4eWeCTfrDdCjdr6bYWhbYG2J7huE2creQz9
4GvPaILTCqlI6MPQaSZN8CbM40h/D2BpNyWwQr3qZf8abl2NNz3ABbl6kLjh
0BuIhzFiwSM8KeKxX2Hhzd2zJ5+hSxSfUyzo0p2biMPOgSwOLHYKV4n5VGuY
N4ywGGb9of1YNCmClQXJhiD44ReUHgJbQ+KXiSNXbEco+eOa+eGQ6yzvJy5l
1wYkwd2Kjc5U6Bth52fB+USXkPgPWNjFCA==
  "],
 CellLabel->
  "Out[572]=",ExpressionUUID->"e355d941-1e1b-4624-a154-4a7ed8b87776"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parallel Network", "Subsection",
 CellChangeTimes->{{3.7630464013650866`*^9, 
  3.7630464045601854`*^9}},ExpressionUUID->"cbea3d8d-fc78-42ef-bcd1-\
d2075228f8cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "the", " ", "flow", " ", "rate", " ", "for", " ", 
    "each", " ", "horizontal", " ", "component", " ", "of", " ", "a", " ", 
    "parallel", " ", "network", " ", "across", " ", "n", " ", "segments"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Also", " ", "works", " ", "for", " ", "split", " ", "series", " ", 
    "networks"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"flowIn", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{
      SuperscriptBox["m", "3"], "/", "sec"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"diameters", " ", "list", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{"m", " ", "-", 
      RowBox[{"pipe", " ", "diameters"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", " ", 
    RowBox[{"Units", ":", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["m", "3"], "/", "sec"}], " ", "-", 
      RowBox[{
      "list", " ", "of", " ", "flow", " ", "rates", " ", "for", " ", "each", 
       " ", "segment"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"NOTE", "-", " ", 
     RowBox[{
     "If", " ", "diameters", " ", "is", " ", "a", " ", "list", " ", "of", " ",
       "Nulls"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "function", " ", "will", " ", "return", " ", "data", " ", 
      "as", " ", "if", " ", "they", " ", "were", " ", "all", " ", "in", " ", 
      "a", " ", "1"}], ":", 
     RowBox[{"1", " ", 
      RowBox[{"ratio", ".", "\[IndentingNewLine]", "This"}], " ", "allows", 
      " ", "us", " ", "to", " ", "test", " ", "processing", " ", "for", " ", 
      "branches", " ", "of", " ", "undefined", " ", 
      RowBox[{"diameters", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"calcPartialFlowRates", "[", 
    RowBox[{"flowIn_", ",", " ", "diameters_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"segments", " ", "=", " ", 
        RowBox[{"Length", "[", "diameters", "]"}]}], ",", 
       "\[IndentingNewLine]", "unitFlow"}], "\[IndentingNewLine]", "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"unitFlow", " ", "=", " ", 
       RowBox[{"flowIn", "/", 
        RowBox[{"Total", "[", "diameters", "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Output", " ", "the", " ", "partial", " ", "flows", " ", "across", " ",
         "each", " ", "sequence"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"diameter", "*", "unitFlow"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"diameter", ",", " ", "diameters"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7630464075723705`*^9, 3.7630464080546303`*^9}, {
  3.763046485174499*^9, 3.7630468210638285`*^9}, {3.7630468584766245`*^9, 
  3.763046858744479*^9}, {3.763047089685677*^9, 3.763047133152152*^9}, {
  3.7630473321572094`*^9, 3.76304743287307*^9}, {3.7630476241051455`*^9, 
  3.7630476320554256`*^9}, {3.763048122650872*^9, 3.76304820259857*^9}, {
  3.763048328710849*^9, 3.7630483520937786`*^9}, {3.7637254028609915`*^9, 
  3.7637254063290606`*^9}, {3.7637255406165066`*^9, 3.763725618998393*^9}, {
  3.7643572855736027`*^9, 3.764357285843343*^9}, {3.7643573712549763`*^9, 
  3.764357416967281*^9}},
 CellLabel->
  "In[573]:=",ExpressionUUID->"9691a619-d046-4a2d-9e2c-04aea5006e42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"testDiametersList2", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Quantity", "[", 
     RowBox[{"diameter", ",", " ", "\"\<Meters\>\""}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"diameter", ",", " ", "2", ",", " ", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"calcPartialFlowRates", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"10", ",", " ", 
     RowBox[{
      SuperscriptBox["\"\<Meters\>\"", "3"], "/", "\"\<Seconds\>\""}]}], 
    "]"}], ",", " ", "testDiametersList2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.763047441263443*^9, 3.7630474820299287`*^9}, {
  3.763047595170884*^9, 3.7630476209492264`*^9}, {3.7630476611205177`*^9, 
  3.7630476734489927`*^9}, {3.76304807940895*^9, 3.763048096704116*^9}, {
  3.7630482249898834`*^9, 3.7630482501372423`*^9}},
 CellLabel->
  "In[574]:=",ExpressionUUID->"fc52a9fd-3ab6-4cc7-bce9-10e20a7b1645"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"2","\"m\"","meters","\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"3","\"m\"","meters","\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"4","\"m\"","meters","\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"5","\"m\"","meters","\"Meters\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7630474850112133`*^9, 3.763047673776614*^9, 3.763048000298829*^9, 
   3.7630480505616264`*^9, {3.76304808371025*^9, 3.7630480972067194`*^9}, 
   3.7630481283410773`*^9, {3.7630481778933992`*^9, 3.763048204797673*^9}, {
   3.763048242015478*^9, 3.763048252336686*^9}, {3.763048323108564*^9, 
   3.763048334683273*^9}, {3.7637253607427683`*^9, 3.7637253741183147`*^9}, 
   3.7637254161661744`*^9, 3.7637255944038534`*^9, 3.7637256364390535`*^9, 
   3.763725876329991*^9, 3.763726046725318*^9, 3.763727152126548*^9, 
   3.7637272781191893`*^9, 3.7637361771386895`*^9, 3.7637636562239647`*^9, 
   3.763765358171069*^9, 3.763841089525133*^9, 3.763937335938943*^9, 
   3.764007814795701*^9, 3.76426074899692*^9, 3.7642635562302895`*^9, 
   3.764266108127921*^9, 3.7643554745656977`*^9, 3.7643555240269003`*^9, 
   3.764499080282118*^9, 3.764594004283523*^9, 3.7646142977504826`*^9, 
   3.764616022066256*^9, 3.764616416171791*^9, 3.764765533822424*^9, 
   3.764797406281682*^9, 3.7648646088013206`*^9, 3.7651298015521545`*^9, 
   3.7654796098594227`*^9, 3.7658155083521743`*^9, 3.765841897859332*^9, 
   3.765844128046788*^9, 3.7658864953902693`*^9, 3.765904268640088*^9, 
   3.765904468248622*^9, 3.765904821569167*^9, 3.7659055695647206`*^9, 
   3.7659259604523993`*^9, 3.765972823053335*^9, 3.765974207717063*^9, 
   3.7659745347278757`*^9, 3.7659817642978654`*^9, 3.765982568744174*^9, 
   3.765983467746496*^9, 3.7659988298253765`*^9, 3.7660090007951484`*^9, 
   3.7660133617908106`*^9, 3.766016528814683*^9, 3.7660173535658464`*^9, 
   3.7660198403547897`*^9, 3.766024315636091*^9, 3.766025251037694*^9, 
   3.7660694272833333`*^9, 3.766084581713967*^9, 3.7661082865623183`*^9, 
   3.7661083357588787`*^9},
 CellLabel->
  "Out[574]=",ExpressionUUID->"eb194812-81f5-4e62-9592-ec4cf5543763"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{FractionBox["10", "7"],RowBox[{
       SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
       "\[InvisibleSpace]", "\"s\""}],"meters cubed per second",FractionBox[
      SuperscriptBox["\"Meters\"", "3"], "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{FractionBox["15", "7"],RowBox[{
       SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
       "\[InvisibleSpace]", "\"s\""}],"meters cubed per second",FractionBox[
      SuperscriptBox["\"Meters\"", "3"], "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{FractionBox["20", "7"],RowBox[{
       SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
       "\[InvisibleSpace]", "\"s\""}],"meters cubed per second",FractionBox[
      SuperscriptBox["\"Meters\"", "3"], "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{FractionBox["25", "7"],RowBox[{
       SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
       "\[InvisibleSpace]", "\"s\""}],"meters cubed per second",FractionBox[
      SuperscriptBox["\"Meters\"", "3"], "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7630474850112133`*^9, 3.763047673776614*^9, 3.763048000298829*^9, 
   3.7630480505616264`*^9, {3.76304808371025*^9, 3.7630480972067194`*^9}, 
   3.7630481283410773`*^9, {3.7630481778933992`*^9, 3.763048204797673*^9}, {
   3.763048242015478*^9, 3.763048252336686*^9}, {3.763048323108564*^9, 
   3.763048334683273*^9}, {3.7637253607427683`*^9, 3.7637253741183147`*^9}, 
   3.7637254161661744`*^9, 3.7637255944038534`*^9, 3.7637256364390535`*^9, 
   3.763725876329991*^9, 3.763726046725318*^9, 3.763727152126548*^9, 
   3.7637272781191893`*^9, 3.7637361771386895`*^9, 3.7637636562239647`*^9, 
   3.763765358171069*^9, 3.763841089525133*^9, 3.763937335938943*^9, 
   3.764007814795701*^9, 3.76426074899692*^9, 3.7642635562302895`*^9, 
   3.764266108127921*^9, 3.7643554745656977`*^9, 3.7643555240269003`*^9, 
   3.764499080282118*^9, 3.764594004283523*^9, 3.7646142977504826`*^9, 
   3.764616022066256*^9, 3.764616416171791*^9, 3.764765533822424*^9, 
   3.764797406281682*^9, 3.7648646088013206`*^9, 3.7651298015521545`*^9, 
   3.7654796098594227`*^9, 3.7658155083521743`*^9, 3.765841897859332*^9, 
   3.765844128046788*^9, 3.7658864953902693`*^9, 3.765904268640088*^9, 
   3.765904468248622*^9, 3.765904821569167*^9, 3.7659055695647206`*^9, 
   3.7659259604523993`*^9, 3.765972823053335*^9, 3.765974207717063*^9, 
   3.7659745347278757`*^9, 3.7659817642978654`*^9, 3.765982568744174*^9, 
   3.765983467746496*^9, 3.7659988298253765`*^9, 3.7660090007951484`*^9, 
   3.7660133617908106`*^9, 3.766016528814683*^9, 3.7660173535658464`*^9, 
   3.7660198403547897`*^9, 3.766024315636091*^9, 3.766025251037694*^9, 
   3.7660694272833333`*^9, 3.766084581713967*^9, 3.7661082865623183`*^9, 
   3.7661083357768455`*^9},
 CellLabel->
  "Out[575]=",ExpressionUUID->"c34e70bf-7a37-4bed-9517-76237d5aff84"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Differential Pressure", "Subsection",
 CellChangeTimes->{{3.764594009795263*^9, 
  3.7645940121209707`*^9}},ExpressionUUID->"918cfa37-b7e5-49ab-aeab-\
c75c743cf261"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Returns", " ", "the", " ", "deltaP"}], ",", " ", 
    RowBox[{
    "or", " ", "change", " ", "in", " ", "pressure", " ", "between", " ", 
     "two", " ", "points", " ", "with", " ", "differing", " ", "velocities", 
     " ", "and", " ", "heights"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"calcDiffPress", "[", 
    RowBox[{
    "densityLiq_", ",", " ", "vel1_", ",", " ", "vel2_", ",", " ", "h1_", ",",
      " ", "h2_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    FractionBox[
     RowBox[{"densityLiq", "*", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["vel2", "2"], "-", 
        SuperscriptBox["vel1", "2"]}], ")"}]}], "2"], "+", 
    RowBox[{"densityLiq", "*", 
     RowBox[{"globalConstants", "[", "\"\<gravity\>\"", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"h2", "-", "h1"}], ")"}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7645940204945498`*^9, 3.764594038613863*^9}, {
  3.764594129580208*^9, 3.764594158845084*^9}, {3.7645942751374884`*^9, 
  3.7645942996574936`*^9}, {3.7645949611123953`*^9, 3.7645949628546085`*^9}, {
  3.7647685482088842`*^9, 3.7647686688608446`*^9}, {3.7647687158666744`*^9, 
  3.764768718273842*^9}},
 CellLabel->
  "In[576]:=",ExpressionUUID->"860c734d-d6e6-4279-a207-19300486abc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"calcDiffPress", "[", 
    RowBox[{
     RowBox[{"globalConstants", "[", "\"\<densityWater\>\"", "]"}], ",", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"5", ",", " ", 
       RowBox[{"\"\<Meters\>\"", "/", "\"\<Seconds\>\""}]}], "]"}], ",", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"10", ",", " ", 
       RowBox[{"\"\<Meters\>\"", "/", "\"\<Seconds\>\""}]}], "]"}], ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"2", ",", " ", "\"\<Meters\>\""}], "]"}], ",", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"2", ",", " ", "\"\<Meters\>\""}], "]"}]}], "]"}], " ", ",", 
   " ", "\"\<Pascals\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.764594312366114*^9, 3.764594388313529*^9}, {
  3.7645946102880764`*^9, 3.764594610547122*^9}, {3.764768936111962*^9, 
  3.7647690213467674`*^9}, {3.764769078970175*^9, 3.7647691189727197`*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"b5cc73a7-4864-494b-bf60-51899c0ebfaf"],

Cell[BoxData[
 TemplateBox[{"37500.`","\"Pa\"","pascals","\"Pascals\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.764769024798009*^9, {3.764769080040202*^9, 3.764769119631793*^9}, 
   3.764797406389641*^9, 3.764864608921341*^9, 3.765129801651059*^9, 
   3.7654796099653826`*^9, 3.765815508451044*^9, 3.7658418980906854`*^9, 
   3.7658441281561384`*^9, 3.7658864955600767`*^9, 3.7659042688122063`*^9, 
   3.765904468364729*^9, 3.7659048219667645`*^9, 3.7659055697026353`*^9, 
   3.765925960596467*^9, 3.7659728232220416`*^9, 3.76597420790307*^9, 
   3.76597453488018*^9, 3.7659817644361544`*^9, 3.7659825688636775`*^9, 
   3.765983467897411*^9, 3.7659988299210205`*^9, 3.7660090009690127`*^9, 
   3.7660133619470234`*^9, 3.7660165289240656`*^9, 3.7660173536751986`*^9, 
   3.7660198404641547`*^9, 3.7660243157619934`*^9, 3.7660252511794744`*^9, 
   3.7660694274461546`*^9, 3.766084581923481*^9, 3.7661082868185587`*^9, 
   3.7661083358261385`*^9},
 CellLabel->
  "Out[577]=",ExpressionUUID->"12a8415e-ba24-465b-9567-8221e09a6b2c"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Components", "Section",
 CellChangeTimes->{{3.762079877692731*^9, 3.7620798801252165`*^9}, {
  3.7620800810764494`*^9, 3.762080095588626*^9}, {3.762080137786761*^9, 
  3.762080200518982*^9}},ExpressionUUID->"39aa09ac-37c0-487c-96bb-\
42b40b40825c"],

Cell[CellGroupData[{

Cell["Infinite Input Reservoir", "Subsection",
 CellChangeTimes->{{3.7630491256480527`*^9, 3.763049137406708*^9}, {
  3.764008402972427*^9, 3.764008403418128*^9}, {3.764024629672645*^9, 
  3.7640246325979977`*^9}},ExpressionUUID->"437002fe-dc48-465b-b0b4-\
a4252bb1cf2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"path", "-", " ", 
    RowBox[{
    "the", " ", "path", " ", "to", " ", "add", " ", "the", " ", "input", " ", 
     "reservoir", " ", "to", "\[IndentingNewLine]", "heightOffGround"}], "-", 
    " ", 
    RowBox[{
    "how", " ", "high", " ", "the", " ", "reservoir", " ", "is", " ", "off", 
     " ", "the", " ", "gruond", "\[IndentingNewLine]", "reservoirHeight"}], 
    "-", " ", 
    RowBox[{
    "the", " ", "height", " ", "of", " ", "the", " ", "actual", " ", 
     "reservoir", " ", 
     RowBox[{"(", 
      RowBox[{"influences", " ", "pressure", " ", "calculations"}], ")"}], 
     "\[IndentingNewLine]", "pressureGauge"}], "-", " ", 
    RowBox[{
    "whether", " ", "or", " ", "not", " ", "the", " ", "container", " ", "is",
      " ", "pressurized", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"0", " ", "if", " ", "exposed", " ", "to", " ", "atmosphere"}], 
      " ", "*)"}], "\[IndentingNewLine]", "densityOfBottomFlu"}], "-", " ", 
    RowBox[{
    "the", " ", "density", " ", "of", " ", "the", " ", "fluid", " ", "being", 
     " ", "pumped", " ", "into", " ", "the", " ", "system"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Because", " ", "this", " ", "is", " ", "an", " ", "infinite", " ", 
     "reservoir"}], ",", " ", 
    RowBox[{"the", " ", "volumes", " ", "do", " ", "not", " ", "decrease"}], 
    ",", " ", 
    RowBox[{
    "so", " ", "the", " ", "upper", " ", "liquid", " ", "and", " ", "the", 
     " ", "bottom", " ", "liquid", " ", "will", " ", "both", " ", "fill", " ",
      "half", " ", "the", " ", "container", " ", "at", " ", "all", " ", 
     RowBox[{"times", ".", " ", "This"}], " ", "is", " ", "relevant", " ", 
     "for", " ", "pressure", " ", "calculations"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mapNewInfInputReservoir", "[", 
    RowBox[{
    "path_", ",", " ", "sizeHeight_", " ", ",", "pressureGauge_", ",", " ", 
     "densityBottomFlu_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startSeq", " ", "=", " ", "path"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"reservoirList", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reservoirList", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "\"\<InfIR\>\"", ",", " ", "sizeHeight", ",", " ", "pressureGauge", 
          ",", " ", "densityBottomFlu"}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], "=", 
       "reservoirList"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7640082928268104`*^9, 3.7640083211831665`*^9}, {
   3.764008380187103*^9, 3.7640083997097526`*^9}, {3.764020138338927*^9, 
   3.7640202262451935`*^9}, {3.7640202596859818`*^9, 3.764020307612093*^9}, {
   3.764020359479624*^9, 3.7640204183978267`*^9}, {3.7640205360250607`*^9, 
   3.76402068030857*^9}, {3.764020723004052*^9, 3.764020803025923*^9}, {
   3.764020911258361*^9, 3.764021000982999*^9}, {3.7640210976345654`*^9, 
   3.764021102876438*^9}, {3.7640212194061184`*^9, 3.7640212696763697`*^9}, {
   3.7640214012003155`*^9, 3.7640214123809147`*^9}, {3.764021524767291*^9, 
   3.764021547589757*^9}, 3.7640217575514307`*^9, 3.7640219190563307`*^9, {
   3.7640219678992033`*^9, 3.7640219696197495`*^9}, {3.7640220129278107`*^9, 
   3.764022055379415*^9}, {3.764266013467102*^9, 3.764266033971623*^9}, {
   3.7651303147155223`*^9, 3.7651303199843664`*^9}, {3.7651470618600097`*^9, 
   3.765147082833803*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"c098ba04-c36d-470e-98a8-2409ab40fd09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unbounded Output Reservoir", "Subsection",
 CellChangeTimes->{{3.7640084135604677`*^9, 3.7640084217535987`*^9}, {
  3.764024634706156*^9, 
  3.7640246395340195`*^9}},ExpressionUUID->"9857389a-7692-4e4a-8178-\
f197e563f9d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Comments", " ", "for", " ", "inf", " ", "input", " ", "reservoir", " ", 
      "explain", " ", "the", " ", "parameters", "\[IndentingNewLine]", 
      "vol"}], "-", " ", 
     RowBox[{
     "monitors", " ", "how", " ", "much", " ", "water", " ", "is", " ", "in", 
      " ", "the", " ", "reservoir", "\[IndentingNewLine]", "The", " ", 
      "reservoir", " ", "is", " ", "unbounded"}]}], ",", " ", 
    RowBox[{
    "so", " ", "grad", " ", "was", " ", "put", " ", "in", " ", "so", " ", 
     "we", " ", "have", " ", "a", " ", "method", " ", "for", " ", "measuring",
      " ", "some", " ", "amount", " ", "of", " ", "water", " ", "put", " ", 
     "in"}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mapNewUnboundedOutputReservoir", "[", 
    RowBox[{
    "path_", ",", " ", "sizeHeight_", ",", " ", "pressureGauge_", ",", 
     "vol_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"endSeq", " ", "=", " ", "path"}], ",", "\[IndentingNewLine]", 
       RowBox[{"reservoirList", "=", 
        RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reservoirList", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<UnOR\>\"", ",", " ", "sizeHeight", ",", " ", "pressureGauge", 
         ",", " ", "vol"}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"endSeq", ",", " ", "\"\<end\>\""}], "]"}], "=", 
       "reservoirList"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7640221602823277`*^9, 3.764022314009362*^9}, {
  3.7640223833629484`*^9, 3.7640223837877035`*^9}, {3.764022415320633*^9, 
  3.764022448551796*^9}, {3.7640224980165386`*^9, 3.764022503993319*^9}, {
  3.7640225519733715`*^9, 3.764022598116788*^9}, {3.764022826935154*^9, 
  3.7640228480040083`*^9}, {3.7642660064158535`*^9, 3.764266071113924*^9}, {
  3.764772189427701*^9, 3.764772198648215*^9}, {3.765130269215283*^9, 
  3.7651302762520704`*^9}, {3.7654953359294186`*^9, 3.7654953386748114`*^9}},
 CellLabel->
  "In[579]:=",ExpressionUUID->"919debab-4b42-4396-95b5-06847db8cda6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infinite Pump", "Subsection",
 CellChangeTimes->{{3.764024577184389*^9, 
  3.764024625715822*^9}},ExpressionUUID->"6ee99d3d-b77b-4642-86cf-\
635b14ca88ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Prerequisite", " ", "for", " ", "adding", " ", "a", " ", "pump", " ", 
    "is", " ", "to", " ", "have", " ", "an", " ", "input", " ", "reservoir"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "the", " ", "input", " ", "flowRate", " ", "into", " ", 
    RowBox[{"system", ".", " ", "No"}], " ", "headvalue", " ", "or", " ", 
    "electricity", " ", "required"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"addInfPump", "[", 
    RowBox[{"path_", ",", " ", "flowRate_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startSeq", " ", "=", " ", "path"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"pumpList", " ", "=", " ", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pumpList", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<InfPu\>\"", ",", " ", "flowRate"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], ",", 
        "pumpList"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76402464676131*^9, 3.764024728943038*^9}, {
  3.764024809373607*^9, 3.7640249111831636`*^9}, {3.7640249612822323`*^9, 
  3.7640249759612045`*^9}},
 CellLabel->
  "In[580]:=",ExpressionUUID->"dcea5142-7a0e-491a-9a90-a820f888a272"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"modify", " ", "the", " ", 
    RowBox[{"system", "'"}], "s", " ", "starting", " ", "flow", " ", "rate"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"modifyInfPump", "[", 
    RowBox[{"path_", ",", " ", "flowRate_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startSeq", " ", "=", " ", "path"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"pumpList", " ", "=", " ", 
        RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "retrieve", " ", "pump", " ", "data", " ", "and", " ", "replace", " ", 
       "the", " ", "flow", " ", "rate", " ", "reading"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pumpList", " ", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pumpList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", "flowRate"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "remove", " ", "old", " ", "pump", " ", "data", " ", "and", " ", "add",
         " ", "the", " ", "changed", " ", "pump", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], " ", "=", " ", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], ",", 
         RowBox[{"2", "\[Rule]", "pumpList"}]}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7651323354848733`*^9, 3.765132448043112*^9}},
 CellLabel->
  "In[581]:=",ExpressionUUID->"1f90599d-1084-4b51-b59e-0e9e3ec7dfbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pipes", "Subsection",
 CellChangeTimes->{{3.762080400850168*^9, 
  3.762080405451892*^9}},ExpressionUUID->"16fef2df-09db-4e4f-a6bf-\
06f90e6c0bb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "adds", " ", "a", " ", "pipeNum", " ", "number", " ", "of", " ", "pipes", 
    " ", "with", " ", "diameter", " ", "pipeD", " ", "to", " ", "a", " ", 
    "seq"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"addPipes", "[", 
    RowBox[{"path_", ",", " ", "pipeNum_", ",", " ", "pipeD_"}], "]"}], ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pipeList", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"pipeList", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<P\>\"", ",", " ", "pipeD"}], "}"}], ",", " ", 
         "pipeNum"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", "\"\<parts\>\""}], "]"}], " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"path", ",", " ", "\"\<parts\>\""}], "]"}], ",", " ", 
         "pipeList"}], "]"}]}], ";"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.763662429744084*^9, 3.763662471739956*^9}, {
   3.763662532555197*^9, 3.7636625439125195`*^9}, {3.763662900218929*^9, 
   3.7636629408285255`*^9}, {3.76366322567597*^9, 3.7636632322345357`*^9}, {
   3.763663317771969*^9, 3.763663425024789*^9}, {3.763663523098395*^9, 
   3.7636635266229596`*^9}, {3.763663570858186*^9, 3.7636635783693266`*^9}, {
   3.763663857787693*^9, 3.7636638884845085`*^9}, 3.763725815901023*^9, {
   3.763725857343539*^9, 3.763725858270685*^9}, {3.76376367348482*^9, 
   3.7637637421954465`*^9}, 3.7639372474086127`*^9, {3.7640084497578444`*^9, 
   3.7640084574974318`*^9}, {3.76601212836204*^9, 3.766012130410522*^9}, {
   3.7660173261244793`*^9, 3.7660173275618916`*^9}},
 CellLabel->
  "In[582]:=",ExpressionUUID->"96a67372-123c-4247-a223-1fd1d89daccf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Control Systems", "Subsection",
 CellChangeTimes->{{3.762080406403344*^9, 
  3.7620804183563466`*^9}},ExpressionUUID->"9c801aaf-092a-49b4-8bab-\
3c6deeaffc0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"adds", " ", "a", " ", "valve"}], ",", " ", 
    RowBox[{
    "which", " ", "is", " ", "a", " ", "special", " ", "case", " ", "pipe"}], 
    ",", " ", 
    RowBox[{"to", " ", "a", " ", "seq"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"addValve", "[", 
    RowBox[{"seqKey_", ",", " ", "maxD_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"localSeqKey", "=", "seqKey"}], "}"}], ",", "\n", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"localSeqKey", ",", "\"\<parts\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<V\>\"", ",", " ", "maxD", ",", " ", "maxD"}], "}"}]}], 
      "]"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "second", " ", "value", " ", "in", " ", "this", " ", "list",
        " ", "is", " ", "the", " ", "current", " ", "diameter", " ", "of", 
       " ", "the", " ", "component"}], ",", " ", 
      RowBox[{
      "while", " ", "the", " ", "third", " ", "value", " ", "stays", " ", 
       "the", " ", "maximum"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7637637442131567`*^9, 3.7637637677024384`*^9}, {
  3.763763803334818*^9, 3.763763803555785*^9}, {3.7640084293632016`*^9, 
  3.764008447744791*^9}, {3.764008727831053*^9, 3.764008728863429*^9}, {
  3.764020208757306*^9, 3.7640202124104705`*^9}, {3.764020258214707*^9, 
  3.764020303270483*^9}, {3.764021777207718*^9, 3.7640218002759633`*^9}, {
  3.764021896893484*^9, 3.7640219229770613`*^9}, {3.7640929665002575`*^9, 
  3.764092973059631*^9}, {3.7642607849324527`*^9, 3.7642607854521866`*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"e82f06c5-21d1-44d5-a0ae-c278c724c417"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"changes", " ", "a", " ", 
     RowBox[{"valve", "'"}], "s", " ", "diameter", " ", "using", " ", "which",
      " ", "seqence", " ", "it", " ", "is", " ", "a", " ", "part", " ", 
     "of"}], ",", " ", 
    RowBox[{
    "which", " ", "valve", " ", "it", " ", "is", " ", "in", " ", "that", " ", 
     "sequence"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "new", " ", "diameter", " ", "you", " ", 
     "want"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"changeValveDiameter", "[", 
     RowBox[{"seqKey_", ",", " ", "valveIndex_", ",", " ", "newD_"}], "]"}], ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "newValveList", "}"}], ",", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "sets", " ", "the", " ", "diameter", " ", "to", " ", "the", " ", "new",
         " ", "diameter"}], " ", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"newD", " ", "\[LessEqual]", " ", 
          RowBox[{
           RowBox[{"masterPathList", "[", 
            RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"valveIndex", ",", "3"}], "]"}], "]"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"newValveList", " ", "=", " ", 
           RowBox[{
            RowBox[{"masterPathList", "[", 
             RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}], "[", 
            RowBox[{"[", "valveIndex", "]"}], "]"}]}], ";", "\n", "\t\t", 
          RowBox[{
           RowBox[{"newValveList", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", "newD"}], ";", 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"masterPathList", "[", 
            RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}], " ", "=", 
           " ", 
           RowBox[{"ReplacePart", "[", 
            RowBox[{
             RowBox[{"masterPathList", "[", 
              RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}], ",", " ", 
             RowBox[{"valveIndex", " ", "\[Rule]", " ", "newValveList"}]}], 
            "]"}]}]}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], 
   "\n"}]}]], "Code",
 CellChangeTimes->{{3.764020219310689*^9, 3.764020232574822*^9}, {
   3.7640203054672966`*^9, 3.7640204190399456`*^9}, {3.7640204648207345`*^9, 
   3.7640204824830756`*^9}, {3.764021105575368*^9, 3.764021146618536*^9}, {
   3.764021199752214*^9, 3.764021257154728*^9}, {3.7640213892802043`*^9, 
   3.764021464140627*^9}, {3.7640214965828*^9, 3.7640216218592415`*^9}, {
   3.7640217308118153`*^9, 3.764021870294802*^9}, {3.7640219772097692`*^9, 
   3.7640219903932524`*^9}, {3.7640221757907777`*^9, 3.764022184932078*^9}, {
   3.764022570761937*^9, 3.764022571049529*^9}, {3.764022637781513*^9, 
   3.764022639365303*^9}, {3.7640227862607546`*^9, 3.764022832428427*^9}, {
   3.7640231863894386`*^9, 3.7640231878386827`*^9}, {3.7640232204774923`*^9, 
   3.7640232643378325`*^9}, {3.764023388780599*^9, 3.764023431675618*^9}, {
   3.76402357293406*^9, 3.764023707270695*^9}, {3.764024067763015*^9, 
   3.7640240792411623`*^9}, {3.764024693888899*^9, 3.76402469660705*^9}, {
   3.7640931014249587`*^9, 3.764093109087282*^9}, {3.764687606613312*^9, 
   3.764687635317071*^9}, {3.76468768170302*^9, 3.764687686605581*^9}, {
   3.764687719994979*^9, 3.7646877296066294`*^9}, {3.7658375952757783`*^9, 
   3.765837660996002*^9}, {3.766001886156103*^9, 3.7660019343449097`*^9}, {
   3.7660019975034685`*^9, 3.766002004838358*^9}, {3.766076350542223*^9, 
   3.766076352545494*^9}, 3.7660764177745123`*^9, {3.7660764574266267`*^9, 
   3.766076475071068*^9}},
 CellLabel->
  "In[584]:=",ExpressionUUID->"77592a01-ca5c-4c79-8330-18a53cff23d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"adds", " ", "a", " ", "gate"}], ",", " ", 
    RowBox[{"another", " ", "special", " ", "case", " ", "pipe"}], ",", " ", 
    RowBox[{"to", " ", "a", " ", "sequence"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"addGate", "[", 
    RowBox[{"seqKey_", ",", "d_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"localSeqKey", "=", "seqKey"}], "}"}], ",", "\n", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"localSeqKey", ",", "\"\<parts\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<G\>\"", ",", " ", "d", ",", " ", "d"}], "}"}]}], "]"}]}],
     " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "second", " ", "value", " ", "is", " ", "the", " ", 
       "current", " ", "diameter"}], ",", " ", 
      RowBox[{
      "while", " ", "the", " ", "third", " ", "stays", " ", "the", " ", 
       "diameter", " ", "when", " ", "it", " ", "is", " ", "open"}]}], " ", 
     "*)"}], "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7640246198204126`*^9, 3.7640246748724437`*^9}, {
  3.764092962387787*^9, 3.764093023026269*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"4a41a0cc-e9c0-4e88-a055-70909ae182e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"negates", " ", "a", " ", "gate"}], ",", " ", 
    RowBox[{
    "as", " ", "in", " ", "closes", " ", "it", " ", "if", " ", "it", " ", 
     "is", " ", "open", " ", "or", " ", "opens", " ", "it", " ", "if", " ", 
     "it", " ", "is", " ", "closed"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"negateGate", "[", 
    RowBox[{"seqKey_", ",", " ", "gateIndex_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "newGateList", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"makes", " ", "a", " ", "copy", " ", "map"}], " ", "*)"}], "\n",
      "\t", 
     RowBox[{
      RowBox[{"newGateList", " ", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}], "[", 
        RowBox[{"[", "gateIndex", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "negates", " ", "the", " ", "gate", " ", "in", " ", "the", " ", "copy",
         " ", "map"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"newGateList", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "===", 
         RowBox[{"newGateList", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"(*", " ", "true", " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"newGateList", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", "0"}], ",", "\n", "\t\t", 
        RowBox[{"(*", " ", "false", " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"newGateList", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=", 
          RowBox[{"newGateList", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "maps", " ", "the", " ", "copy", " ", "map", " ", "to", " ", "the", 
        " ", "part", " ", "key"}], " ", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}], " ", "=", " ", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}], ",", " ", 
         RowBox[{"gateIndex", " ", "\[Rule]", " ", "newGateList"}]}], 
        "]"}]}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7640247280282526`*^9, 3.7640249657171593`*^9}, {
   3.764093115493478*^9, 3.764093137888971*^9}, 3.764260795352365*^9, 
   3.7646237081193037`*^9, {3.764625079722314*^9, 3.7646250838990264`*^9}, {
   3.764687693445479*^9, 3.7646876970858355`*^9}, {3.7646877418803835`*^9, 
   3.7646878024872384`*^9}, {3.7658374456609488`*^9, 
   3.7658375733933086`*^9}, {3.765903050116233*^9, 3.7659030658232007`*^9}, 
   3.766076497318108*^9, {3.7660768038917384`*^9, 3.766076815583908*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"7d3f28a7-c4a6-4bf2-bcbf-20264c40884b"]
}, Closed]],

Cell[CellGroupData[{

Cell["General Input Reservoir", "Subsection",
 CellChangeTimes->{{3.7651302426943693`*^9, 
  3.765130246524394*^9}},ExpressionUUID->"a11debde-19a9-4b2f-a50b-\
050fbc56486c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Similar", " ", "to", " ", "infinite", " ", "input", " ", "reservoir", 
     " ", "but", " ", "has", " ", "a", " ", "finite", " ", "amount", " ", 
     "of", " ", "fluid", " ", "available", " ", "to", " ", "transfer", " ", 
     "into", " ", "the", " ", "system", " ", "and", " ", "the", " ", "ratio", 
     " ", "of", " ", "the", " ", "upper", " ", "fluid", " ", "to", " ", "the",
      " ", "lower", " ", "fluid", " ", 
     RowBox[{"isn", "'"}], "t", " ", "necessarily", " ", "1"}], ":", "1"}], 
   "  ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"NOTE", "-", " ", 
    RowBox[{
    "this", " ", "component", " ", "features", " ", "a", " ", "finite", " ", 
     "amount", " ", "of", " ", "fluid", " ", "but", " ", "it", " ", 
     RowBox[{"isn", "'"}], "t", " ", "used", " ", "in", " ", "the", " ", 
     "current", " ", "setup", " ", "for", " ", "general", " ", "water", " ", 
     RowBox[{"transfer", ".", " ", "General"}], " ", "input", " ", 
     "reservoirs", " ", "are", " ", "currently", " ", "an", " ", "infinite", 
     " ", "source", " ", "but", " ", "the", " ", "pressure", " ", "and", " ", 
     "upper", " ", "fluid", " ", "comes", " ", "into", " ", "play", " ", 
     "for", " ", "calculating", " ", "required", " ", "head", " ", 
     "value"}]}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mapNewGenInputReservoir", "[", 
    RowBox[{
    "path_", ",", " ", "sizeHeight_", " ", ",", "ceilDis_", ",", " ", 
     "pressureGauge_", ",", " ", "volBottom_", ",", " ", "volTop_", ",", " ", 
     "densityBottomFlu_", ",", " ", "densityUpperFlu_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startSeq", " ", "=", " ", "path"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"reservoirList", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reservoirList", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "\"\<GenIR\>\"", ",", " ", "sizeHeight", ",", " ", "ceilDis", ",", 
          "pressureGauge", ",", " ", "volBottom", ",", "volTop", ",", " ", 
          "densityBottomFlu", ",", " ", "densityUpperFlu"}], "}"}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], "=", 
       "reservoirList"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76513029238141*^9, 3.7651304308346205`*^9}, {
  3.7651307458111763`*^9, 3.7651307463683157`*^9}, {3.7651309279684267`*^9, 
  3.765130937799618*^9}, {3.765147021556549*^9, 3.7651470376849103`*^9}, {
  3.7658263004632053`*^9, 3.7658263559820695`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"00fca269-2c5f-4255-9eff-0cf133f984a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "retrieves", " ", "the", " ", "bottomLiqDensity", " ", "from", " ", "seq1",
     " ", "for", " ", "other", " ", "operations"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getLiqDensity", "[", "isInf_", "]"}], ":=", "\[IndentingNewLine]",
    "\t", 
   RowBox[{"(*", " ", 
    RowBox[{
    "works", " ", "for", " ", "both", " ", "infinite", " ", "and", " ", 
     "general", " ", "setups"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{"If", "[", 
    RowBox[{"isInf", ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"inf", " ", "setup"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{
      RowBox[{"masterPathList", "[", 
       RowBox[{"\"\<seq1\>\"", ",", " ", "\"\<start\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"gen", " ", "setup"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{
      RowBox[{"masterPathList", "[", 
       RowBox[{"\"\<seq1\>\"", ",", " ", "\"\<start\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "7"}], "]"}], "]"}]}], "\[IndentingNewLine]", "\t", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.766008165386212*^9, 3.766008205233255*^9}, {
  3.766008254600915*^9, 3.766008420417268*^9}},
 CellLabel->
  "In[588]:=",ExpressionUUID->"2818c0d6-4cfe-480e-a8c4-f61cce29ab87"]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Output Reservoir", "Subsection",
 CellChangeTimes->{{3.7651302519521103`*^9, 
  3.7651302573349915`*^9}},ExpressionUUID->"170d49ac-250a-4480-901c-\
eb7702941196"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Similar", " ", "to", " ", "unbounded", " ", "output", " ", "reservoir", 
    " ", "but", " ", "has", " ", "a", " ", "maxVolume"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Also", " ", "features", " ", "the", " ", "ability", " ", "to", " ", "add",
     " ", "an", " ", "upper", " ", "fluid", " ", "to", " ", "the", " ", 
    "reservoir"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mapNewGenOutputReservoir", "[", 
    RowBox[{
    "path_", ",", " ", "sizeHeight_", ",", "ceilDis_", ",", " ", 
     "pressureGauge_", ",", "volBottom_", ",", "volTop_", ",", " ", "maxVol_",
      ",", " ", "densityUpperFlu_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"endSeq", " ", "=", " ", "path"}], ",", "\[IndentingNewLine]", 
       RowBox[{"reservoirList", "=", 
        RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reservoirList", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<GenOR\>\"", ",", " ", "sizeHeight", ",", " ", "ceilDis", ",", 
         "pressureGauge", ",", " ", "volBottom", ",", "volTop", ",", " ", 
         "maxVol", ",", " ", "densityUpperFlu"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"endSeq", ",", " ", "\"\<end\>\""}], "]"}], "=", 
       "reservoirList"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765130567075845*^9, 3.765130617239833*^9}, {
  3.7651307410051208`*^9, 3.76513074120819*^9}, {3.7651309447220306`*^9, 
  3.765130948925624*^9}, {3.7651469673583136`*^9, 3.7651470108154345`*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"a4d29e8d-d89f-4a13-8cd0-802007b195ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Change Gauge Pressure", "Subsection",
 CellChangeTimes->{{3.7660016362737465`*^9, 
  3.7660016393980618`*^9}},ExpressionUUID->"5226b7f3-ce51-4a00-a763-\
f01f3c8abee3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "changes", " ", "the", " ", "gauge", " ", "pressure", " ", "on", " ", "a", 
    " ", "reservoir"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "uses", " ", "helper", " ", "functions", " ", "to", " ", "automatically", 
     " ", "determine", " ", "whether", " ", 
     RowBox[{"it", "'"}], "s", " ", "changing", " ", "the", " ", "input", " ",
      "reservoir", " ", "or", " ", "an", " ", "output"}], ",", " ", 
    RowBox[{"or", " ", "if", " ", 
     RowBox[{"there", "'"}], "s", " ", "nothing", " ", "to", " ", 
     "change"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"changeGaugePressureGen", "[", 
    RowBox[{"seq_", ",", " ", "newPress_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"seqKey", " ", "=", " ", "seq"}], ",", "\[IndentingNewLine]", 
       RowBox[{"hasInput", " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{"seq", "\[Equal]", "  ", "\"\<seq1\>\""}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"hasOutput", " ", "=", " ", 
        RowBox[{"hasOutputR", "[", "seq", "]"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Replace", " ", "the", " ", "list", " ", "with", " ", "the", " ", 
       "updated", " ", 
       RowBox[{"one", ".", " ", "Pressure"}], " ", "is", " ", "at", " ", 
       "index", " ", "4", " ", "of", " ", "the", " ", "reservoirList"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"hasInput", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"is", " ", "inputRes"}], " ", "*)"}], "\[IndentingNewLine]", 
        "\t", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"seqKey", ",", " ", "\"\<start\>\""}], "]"}], " ", "=", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"masterPathList", "[", 
            RowBox[{"seqKey", ",", " ", "\"\<start\>\""}], "]"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "newPress"}]}], 
          "]"}]}], ","}], 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Parted", "[", 
          RowBox[{"1", ",", "4"}], "]"}], " ", "because", " ", "pump", " ", 
         "could", " ", "be", " ", "at", " ", "index", " ", "2"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"hasOutput", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"is", " ", "outputRes"}], "*)"}], "\[IndentingNewLine]", 
        "\t", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"seqKey", ",", " ", "\"\<end\>\""}], "]"}], " ", "=", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"masterPathList", "[", 
            RowBox[{"seqKey", ",", " ", "\"\<end\>\""}], "]"}], ",", 
           RowBox[{"4", "\[Rule]", "newPress"}]}], "]"}]}]}], " ", 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7660016585998106`*^9, 3.7660017999383783`*^9}, {
  3.7660018591803455`*^9, 3.7660018596202435`*^9}, {3.766002030140447*^9, 
  3.766002095471299*^9}, {3.766002162665692*^9, 3.7660021785269446`*^9}, {
  3.7660022154646845`*^9, 3.76600231830151*^9}, {3.7660023598798676`*^9, 
  3.7660023906067753`*^9}, {3.7660024299547987`*^9, 3.76600247098403*^9}, {
  3.7660025542882085`*^9, 3.7660026672307253`*^9}, {3.766002895899449*^9, 
  3.766002909702898*^9}, {3.7660029401597815`*^9, 3.7660029552703466`*^9}, {
  3.766002988319062*^9, 3.766003011357046*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"935eb464-264a-42cb-b605-8c80fee4d84a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "true", " ", "if", " ", "the", " ", "seq", " ", "has", " ", "an", " ", 
    "output", " ", "reservoir"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hasOutputR", "[", "seq_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"seqKey", " ", "=", " ", "seq"}], ",", "\[IndentingNewLine]", 
       "possibleOutputR"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"possibleOutputR", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"seqKey", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"ListQ", "[", "possibleOutputR", "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7660025946197076`*^9, 3.7660025969779825`*^9}, 
   3.7660026400988035`*^9, {3.766002670957016*^9, 3.766002694700633*^9}, {
   3.7660027557040997`*^9, 3.766002808333973*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"e566ffc1-11e8-4630-8035-0a833f727609"]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Pump", "Subsection",
 CellChangeTimes->{{3.7651302604765787`*^9, 
  3.765130264486539*^9}},ExpressionUUID->"d0ea7f6b-a800-45b9-a00e-\
272d00b597c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Prerequisite", " ", "for", " ", "adding", " ", "a", " ", "pump", " ", 
    "is", " ", "to", " ", "have", " ", "an", " ", "input", " ", "reservoir"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Similar", " ", "to", " ", "inf", " ", "pump", " ", "but", " ", "has", " ",
     "a", " ", "head", " ", "value", " ", "and", " ", "supplied", " ", 
    "electricity", " ", "that", " ", "changes"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Head", " ", "value", " ", "and", " ", "electricity", " ", "will", " ", 
    "determine", " ", "flow", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"addGenPump", "[", 
    RowBox[{
    "path_", ",", " ", "efficiency_", ",", " ", "watts_", ",", " ", 
     "hPump_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startSeq", " ", "=", " ", "path"}], ",", 
       "\[IndentingNewLine]", "fluDensity", ",", "\[IndentingNewLine]", 
       "flowRate", ",", "\[IndentingNewLine]", 
       RowBox[{"pumpList", " ", "=", " ", 
        RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "retrieve", " ", "fluid", " ", "density", " ", "from", " ", "the", " ", 
       "input", " ", "reservoir", " ", "and", " ", "use", " ", "it", " ", 
       "to", " ", "calculate", " ", "the", " ", 
       RowBox[{"pump", "'"}], "s", " ", "flow", " ", "rate"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fluDensity", " ", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "7"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"flowRate", "=", 
       RowBox[{"calcFlowRateForPump", "[", 
        RowBox[{
        "watts", ",", " ", "fluDensity", ",", "efficiency", ",", " ", 
         "hPump"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"flowRate", " ", "=", " ", 
       RowBox[{"UnitConvert", "[", 
        RowBox[{"flowRate", ",", " ", 
         RowBox[{
          SuperscriptBox["\"\<Meters\>\"", "3"], "/", "\"\<Seconds\>\""}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"pumpList", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<GenPu\>\"", ",", " ", "flowRate", ",", " ", "watts", ",", " ", 
         "hPump"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], ",", 
        "pumpList"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7651306322031527`*^9, 3.7651306620965586`*^9}, {
  3.7651307217727876`*^9, 3.7651307339781237`*^9}, {3.765130772924411*^9, 
  3.765130810411476*^9}, {3.765131082255533*^9, 3.7651310920213594`*^9}, {
  3.765131147615181*^9, 3.7651312067559967`*^9}, {3.765131784043154*^9, 
  3.7651318390848675`*^9}, {3.7651319097608175`*^9, 3.765131924840659*^9}, {
  3.7651425171282277`*^9, 3.7651425360032835`*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"0b65179f-a26e-4a46-853d-3f2c8d33e2af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"modify", " ", "the", " ", "pump", " ", "characteristics"}], ",", 
    " ", 
    RowBox[{
    "which", " ", "will", " ", "affect", " ", "its", " ", "flow", " ", 
     "rate"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"modifyGenPump", "[", 
    RowBox[{
    "path_", ",", " ", "efficiency_", ",", " ", "watts_", " ", ",", 
     "hPump_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startSeq", " ", "=", " ", "path"}], ",", 
       "\[IndentingNewLine]", "pumpList", ",", "\[IndentingNewLine]", 
       "fluDensity", ",", "\[IndentingNewLine]", "flowRate"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"retrieve", " ", "the", " ", "pump", " ", "component"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pumpList", " ", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "replace", " ", "the", " ", "previous", " ", "pump", " ", "data"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pumpList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "watts"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pumpList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "hPump"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fluDensity", " ", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "7"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"flowRate", " ", "=", " ", 
       RowBox[{"calcFlowRateForPump", "[", 
        RowBox[{
        "watts", ",", " ", "fluDensity", ",", " ", "efficiency", ",", " ", 
         "hPump"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pumpList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
       RowBox[{"UnitConvert", "[", 
        RowBox[{"flowRate", ",", " ", 
         RowBox[{
          SuperscriptBox["\"\<Meters\>\"", "3"], "/", "\"\<Seconds\>\""}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "remove", " ", "old", " ", "pump", " ", "data", " ", "and", " ", "add",
         " ", "the", " ", "changed", " ", "pump", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], " ", "=", " ", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"startSeq", ",", " ", "\"\<start\>\""}], "]"}], ",", 
         RowBox[{"2", "\[Rule]", "pumpList"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7651319550166264`*^9, 3.7651323134819155`*^9}, {
   3.7651425504112043`*^9, 3.7651425728532124`*^9}, 3.7651437178269444`*^9},
 CellLabel->
  "In[593]:=",ExpressionUUID->"9a1db74f-e0c6-4010-8b83-a2826ef9c066"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model", "Section",
 CellChangeTimes->{{3.7620802422114697`*^9, 3.762080245984409*^9}, {
  3.763157573576177*^9, 
  3.7631575741697836`*^9}},ExpressionUUID->"68ca5d2f-c129-4959-906c-\
c961ab57f4f5"],

Cell[CellGroupData[{

Cell["MasterPathList Functions + Keys + simplePaths", "Subsection",
 CellChangeTimes->{{3.7635633329479837`*^9, 3.7635633335075197`*^9}, {
  3.7636543308756714`*^9, 3.763654336126728*^9}, {3.763654406733416*^9, 
  3.7636544084179296`*^9}, {3.7642734034536886`*^9, 3.7642734046946354`*^9}, {
  3.764797555482497*^9, 
  3.7647975573836546`*^9}},ExpressionUUID->"70847f73-3950-49c4-82fd-\
6a0665f5da31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Holds", " ", "the", " ", "current", " ", "list", " ", "of", " ", 
      "paths"}], "-", " ", 
     RowBox[{"all", " ", "the", " ", "sequences"}]}], ",", " ", 
    RowBox[{"splits", " ", "and", " ", "merges"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"All", " ", "paths", " ", "have", " ", "attributes", " ", 
     RowBox[{"(", "\"\<attr\>\"", ")"}]}], ",", " ", 
    RowBox[{"components", " ", 
     RowBox[{"(", "\"\<parts\>\"", ")"}]}], ",", " ", 
    RowBox[{"where", " ", "they", " ", "start"}], ",", " ", 
    RowBox[{"and", " ", "where", " ", "they", " ", "end"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"resetMasterPathList", "[", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"masterPathList", " ", "=", " ", 
     RowBox[{"<|", "|>"}]}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.763563336143521*^9, 3.763563420414847*^9}, {
   3.7635635273615055`*^9, 3.763563851209691*^9}, {3.763568350908869*^9, 
   3.7635683594688077`*^9}, {3.7635684196649504`*^9, 3.763568438571683*^9}, {
   3.763568473014968*^9, 3.763568487083409*^9}, {3.7635691397538247`*^9, 
   3.763569140370165*^9}, 3.7635772327123804`*^9, {3.763578151999798*^9, 
   3.763578163165224*^9}, 3.7635782491495523`*^9, {3.7635783625408177`*^9, 
   3.7635783809323964`*^9}, {3.7636517441294355`*^9, 
   3.7636517594184465`*^9}, {3.7636547692149506`*^9, 3.763654790319182*^9}, {
   3.7636548257005763`*^9, 3.763654826492737*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"68023746-3714-4de0-96b7-6ab118e56023"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Prints", " ", "a", " ", "key", " ", "and", " ", "its", " ", 
    "corresponding", " ", 
    RowBox[{"structure", ".", " ", "Makes"}], " ", "for", " ", "an", " ", 
    "easier", " ", "reading", " ", "of", " ", "the", " ", "masterPathList"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"printMPL", "[", "]"}], ":=", "\n", "\t", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"key", ",", " ", "\"\< \>\"", ",", " ", 
         RowBox[{"masterPathList", "[", "key", "]"}]}], "]"}], ";"}], 
      "\[IndentingNewLine]", "\t", ",", 
      RowBox[{"{", 
       RowBox[{"key", ",", " ", 
        RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "\t", "]"}]}], ";"}]}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.7648706141265745`*^9, 3.764870657647306*^9}, {
  3.7648709062613683`*^9, 3.764870917352948*^9}, {3.7648710412829943`*^9, 
  3.764871046388178*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"a6e4c551-d93f-42de-bbe0-c01d05c82d99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Path", " ", "key", " ", 
    RowBox[{"creation", ".", " ", "Path"}], " ", "keys", " ", "are", " ", 
    "named", " ", "based", " ", "on", " ", "when", " ", "it", " ", "was", " ",
     "created", " ", "and", " ", "its", " ", "type"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"createPathKey", "[", 
    RowBox[{"pathType_", ",", " ", "num_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nextCompIndex", " ", "=", " ", 
       RowBox[{
        RowBox[{"getLastKeyNum", "[", "]"}], "+", "1"}]}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Find", " ", "how", " ", "many", " ", "keys", " ", "we", " ", "have", 
       " ", "and", " ", "add", " ", "1", " ", "to", " ", "generate", " ", 
       "new", " ", "key"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Return", " ", "the", " ", "type", " ", "combined", " ", "with", " ", 
        "the", " ", "#", " ", "it", " ", 
        RowBox[{"is", ".", " ", 
         RowBox[{"Ex", ":", " ", "seq2"}]}]}], ",", " ", "spl5", ",", " ", 
       "m4"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"num", ",", " ", "Null"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "True", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", "a", " ", "num", " ", 
           RowBox[{"isn", "'"}], "t", " ", "given"}], ",", " ", 
          RowBox[{"refer", " ", "to", " ", "the", " ", "masterPathList"}]}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"pathType", "<>", 
          RowBox[{"ToString", "[", "nextCompIndex", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "False", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "If", " ", "a", " ", "specific", " ", "num", " ", "is", " ", 
           "given", " ", "for", " ", "the", " ", "path", " ", "key"}], ",", 
          " ", 
          RowBox[{"use", " ", "it"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"pathType", "<>", 
          RowBox[{"ToString", "[", "num", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.763564485843649*^9, 3.763564532481199*^9}, {
   3.7635649037676888`*^9, 3.763564952104156*^9}, {3.763565008992154*^9, 
   3.763565011559559*^9}, 3.7635664548456078`*^9, {3.76356656379735*^9, 
   3.7635665657982426`*^9}, {3.763566666820182*^9, 3.763566744180626*^9}, {
   3.763569291391029*^9, 3.7635693639469643`*^9}, {3.7635777381699886`*^9, 
   3.763577851406974*^9}, {3.763579351302192*^9, 3.7635793525089664`*^9}, {
   3.763579807588188*^9, 3.763579873999114*^9}, {3.7635799128161697`*^9, 
   3.7635799330116444`*^9}, {3.763651300622256*^9, 3.7636513267461348`*^9}, {
   3.7636519637860126`*^9, 3.7636520144849415`*^9}, {3.7636520875284233`*^9, 
   3.7636520903801904`*^9}, {3.763654579573571*^9, 3.7636546167008405`*^9}, {
   3.763726963863687*^9, 3.763726966112562*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"a884dc4d-fc2c-40eb-8c29-9a0d306a592a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "number", " ", "the", " ", "last", " ", "path", " ", "key", 
    " ", "should", " ", "contain", " ", "from", " ", "the", " ", 
    "masterPathList"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getLastKeyNum", "[", "]"}], ":=", 
   RowBox[{"Return", "[", 
    RowBox[{"Length", "[", "masterPathList", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7636524209731717`*^9, 3.763652504153139*^9}, {
  3.763652545463271*^9, 3.763652549966753*^9}, {3.763652606901445*^9, 
  3.7636526814113193`*^9}, {3.7636546089500203`*^9, 3.7636547386547008`*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"e47a300e-c2ca-40c9-931f-7acbd5c64b51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Cut", " ", "the", " ", "number", " ", "off", " ", "the", " ", "base", " ",
     "string", " ", "to", " ", "get", " ", "the", " ", "type", " ", "of", " ",
     "path", " ", "it", " ", "is"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPathType", "[", "path_", "]"}], ":=", 
   RowBox[{
    RowBox[{"StringSplit", "[", 
     RowBox[{"path", ",", " ", 
      RowBox[{"RegularExpression", "[", "\"\<[0-9]\>\"", "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7648668700240684`*^9, 3.764866904080448*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"22b0e542-d87f-4534-a1fa-a9cafeafd0d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "returns", " ", "a", " ", "list", " ", "of", " ", "the", " ", "pathKey"}],
     ",", " ", 
    RowBox[{"the", " ", "prevKey", " ", "and", " ", "the", " ", 
     RowBox[{"nextKey", ".", " ", "This"}], " ", "allows", " ", "us", " ", 
     "to", " ", "view", " ", "the", " ", "connections", " ", "between", " ", 
     "paths", " ", "without", " ", "the", " ", "excess", " ", 
     "information"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"updateSimplePaths", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "pathType", ",", "\[IndentingNewLine]", "prev", ",", 
       "\[IndentingNewLine]", "next", ",", "\[IndentingNewLine]", 
       "simplePaths"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simplePaths", " ", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"pathType", " ", "=", " ", 
           RowBox[{"getPathType", "[", "key", "]"}]}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"prev", " ", "=", 
           RowBox[{"ToString", "[", 
            RowBox[{"masterPathList", "[", 
             RowBox[{"key", ",", " ", "\"\<start\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"next", " ", "=", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"masterPathList", "[", 
             RowBox[{"key", ",", " ", "\"\<end\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"for", " ", "a", " ", 
            RowBox[{"split", "'"}], "s", " ", "end", " ", "map"}], " ", 
           "*)"}], "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"pathType", " ", "\[Equal]", " ", "\"\<spl\>\""}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{"next", " ", "=", " ", "\"\<N/a\>\""}], ";"}]}], 
           "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
          "\t", "\[IndentingNewLine]", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"for", " ", 
            RowBox[{"seq", "'"}], "s", " ", "that", " ", 
            RowBox[{"aren", "'"}], "t", " ", "connected", " ", "to", " ", 
            "an", " ", "end"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"next", " ", "\[Equal]", " ", "\"\<Null\>\""}], " ", "||",
              " ", 
             RowBox[{"StringContainsQ", "[", 
              RowBox[{"next", ",", " ", "\"\<O\>\""}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{"next", " ", "=", " ", "\"\<Output\>\""}], ";"}]}], 
           "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
          "\t", "\[IndentingNewLine]", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"for", " ", "seqs", " ", "that", " ", 
            RowBox[{"aren", "'"}], "t", " ", "connected", " ", "to", " ", "a",
             " ", "start"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"prev", " ", "\[Equal]", " ", "\"\<Null\>\""}], " ", "||",
              " ", 
             RowBox[{"StringContainsQ", "[", 
              RowBox[{"prev", ",", " ", "\"\<R\>\""}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{"prev", " ", "=", " ", "\"\<Input\>\""}], ";"}]}], 
           "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"{", 
           RowBox[{"key", ",", 
            RowBox[{"\"\<prev\[Rule]\>\"", "<>", "prev"}], " ", ",", " ", 
            RowBox[{"\"\<next->\>\"", "<>", "next"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"key", ",", " ", 
           RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "simplePaths", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764797567498208*^9, 3.764797615175855*^9}, {
  3.764797656272959*^9, 3.7647977769423623`*^9}, {3.7647978437441235`*^9, 
  3.7647978977947493`*^9}, {3.7647979762045383`*^9, 3.7647983149865923`*^9}, {
  3.76486681621704*^9, 3.7648668306266303`*^9}, {3.7648670878942184`*^9, 
  3.7648671596297417`*^9}, {3.7648672704053545`*^9, 3.764867446284295*^9}, {
  3.7648675058601084`*^9, 3.764867537188324*^9}, {3.764867575902622*^9, 
  3.764867684711523*^9}, {3.764867975494399*^9, 3.7648679842493963`*^9}, {
  3.7648682853171268`*^9, 3.764868294193763*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"9c66f5a1-8a91-4e61-bd84-092b418c5a89"]
}, Closed]],

Cell[CellGroupData[{

Cell["Path Creation", "Subsection",
 CellChangeTimes->{{3.7631575778876624`*^9, 3.763157583233055*^9}, {
  3.7636544157651443`*^9, 
  3.7636544172468166`*^9}},ExpressionUUID->"54832d8d-5531-4232-affd-\
520318fd825c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "sequence"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Sequences", ":", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"The", " ", "simplest", " ", "path", " ", 
       RowBox[{"type", ".", " ", "A"}], " ", "line", " ", "of", " ", 
       "components", "\[IndentingNewLine]", "key"}], "-", " ", 
      RowBox[{"\"\<seq#\>\"", "\[IndentingNewLine]", "mappings"}], "-", " ", 
      "attributes"}]}], ",", " ", "parts", ",", " ", "start", ",", " ", 
    "end"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createSeq", "[", 
     RowBox[{"name_", ",", " ", "startKey_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqKey", " ", "=", " ", "\"\<undefinedSeqKey\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"seqMap", " ", "=", " ", "\"\<undefinedMapping\>\""}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "a", " ", "specific", " ", "keyName", " ", "was", " ", 
         "given"}], ",", " ", 
        RowBox[{"use", " ", 
         RowBox[{"it", ".", " ", "Otherwise"}]}], ",", " ", 
        RowBox[{"do", " ", "normal", " ", "key", " ", "creation"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"name", ",", " ", "Null"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "true", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"seqKey", " ", "=", " ", 
          RowBox[{"createPathKey", "[", 
           RowBox[{"\"\<seq\>\"", ",", " ", "Null"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "false", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"seqKey", " ", "=", " ", "name"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Sequence", " ", "structure"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"seqMap", "=", 
        RowBox[{"seqKey", "\[Rule]", " ", 
         RowBox[{"<|", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"instantiatePathAttributes", "[", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<parts\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", "}"}]}], ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Changed", " ", "from", " ", "empty", " ", "to", " ", "4", " ", 
             "Nulls", " ", "for", " ", "slots", " ", "in", " ", "the", " ", 
             "UI"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"\"\<start\>\"", " ", "\[Rule]", " ", "startKey"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<end\>\"", " ", "\[Rule]", " ", "Null"}]}], 
          "\[IndentingNewLine]", "|>"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Add", " ", "to", " ", "the", " ", "path", " ", "list"}], " ",
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"masterPathList", ",", " ", "seqMap"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "end", " ", "of", " ", "the", " ", "one", " ", "you", " ", 
         RowBox[{"linked", ".", " ", "Do"}], " ", "not", " ", "setEnd", " ", 
         "if", " ", "it", " ", 
         RowBox[{"isn", "'"}], "t", " ", "a", " ", "sequence"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringQ", "[", "startKey", "]"}], " ", "&&", " ", 
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"startKey", ",", " ", "\"\<seq\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"setEnd", "[", 
           RowBox[{"startKey", ",", " ", "seqKey"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7635625214355507`*^9, 3.763562534391083*^9}, {
   3.7635625994424205`*^9, 3.763562798431339*^9}, {3.763562883793317*^9, 
   3.7635628942366495`*^9}, {3.7635629939957137`*^9, 
   3.7635629940545907`*^9}, {3.7635668629595146`*^9, 
   3.7635669036231947`*^9}, {3.7635673545467215`*^9, 3.763567368701851*^9}, {
   3.763568019385765*^9, 3.7635681391506176`*^9}, {3.7635687990663366`*^9, 
   3.7635688840157824`*^9}, {3.763569035919675*^9, 3.7635690371779575`*^9}, {
   3.7635780592772813`*^9, 3.7635780743946953`*^9}, {3.763578514327429*^9, 
   3.76357856593148*^9}, {3.763578642463461*^9, 3.763578670094632*^9}, {
   3.763580471657568*^9, 3.7635804730060883`*^9}, {3.763580638049143*^9, 
   3.763580640008469*^9}, {3.763649802135024*^9, 3.7636498771825695`*^9}, {
   3.763651286913096*^9, 3.7636512938274536`*^9}, {3.7636547528379354`*^9, 
   3.763654776918063*^9}, {3.7636549724752703`*^9, 3.76365497361965*^9}, {
   3.7636550793827696`*^9, 3.7636551091937485`*^9}, {3.7636551611297235`*^9, 
   3.7636551615612574`*^9}, {3.7636628874962626`*^9, 
   3.7636628954074626`*^9}, {3.7636631580927815`*^9, 3.763663159369726*^9}, {
   3.7636651148368883`*^9, 3.7636651168412266`*^9}, {3.7637259483031397`*^9, 
   3.763725948712846*^9}, {3.7637707529650574`*^9, 3.7637707587474875`*^9}, {
   3.7637709012502794`*^9, 3.763770902351386*^9}, {3.7637710689702406`*^9, 
   3.7637710721403236`*^9}, 3.763843291610674*^9, {3.7645009768677197`*^9, 
   3.7645009777832923`*^9}, {3.76582410857821*^9, 3.765824134499668*^9}, {
   3.765824666599887*^9, 3.7658246679659004`*^9}, {3.766011385192797*^9, 
   3.76601139177927*^9}, {3.766011597695383*^9, 3.7660116383319416`*^9}, {
   3.766093869915064*^9, 3.76609389555748*^9}},
 CellLabel->
  "In[600]:=",ExpressionUUID->"84e4a7d5-72eb-4754-82f9-b05fda40925d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "split"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Splits", ":", "\[IndentingNewLine]", 
     RowBox[{
     "Allow", " ", "for", " ", "sequences", " ", "to", " ", "diverge", " ", 
      "and", " ", "possibly", " ", 
      RowBox[{"merge", ".", " ", "Branches"}], " ", "are", " ", "in", " ", 
      "the", " ", "form", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "T", "}"}], ",", " ", 
        RowBox[{"{", "M", "}"}], ",", " ", 
        RowBox[{"{", "B", "}"}]}], "}"}]}]}], ",", " ", 
    RowBox[{
    "where", " ", "T", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
     "sequences", "\[IndentingNewLine]", "above", " ", "the", " ", "middle", 
     " ", "sequence"}], ",", " ", 
    RowBox[{
    "M", " ", "is", " ", "either", " ", "empty", " ", "or", " ", "contains", 
     " ", "one", " ", "sequence", " ", "for", " ", "the", " ", "middle"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "B", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
      "sequence", " ", "below", " ", "the", " ", "middle", 
      "\[IndentingNewLine]", "key"}], "-", " ", 
     RowBox[{"\"\<spl#\>\"", "\[IndentingNewLine]", "mappings"}], "-", " ", 
     "attributes"}], ",", " ", "start", ",", " ", "branches"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"createSpl", "[", 
    RowBox[{"startKey_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t_", ",", " ", "m_", ",", " ", "b_"}], "}"}], ",", " ", 
     "mergePairs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"newSplKey", " ", "=", " ", 
        RowBox[{"createPathKey", "[", 
         RowBox[{"\"\<spl\>\"", ",", " ", "Null"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"splMap", " ", "=", " ", "\"\<undefinedMapping\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"branchKeys", " ", "=", "  ", 
        RowBox[{"createBranches", "[", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "m", ",", " ", "b"}], "}"}], "]"}]}], ",", 
       "\[IndentingNewLine]", "mergeStartKeys"}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Split", " ", "structure"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"splMap", " ", "=", " ", 
       RowBox[{"newSplKey", " ", "\[Rule]", " ", 
        RowBox[{"<|", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<start\>\"", " ", "\[Rule]", " ", "startKey"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<branches\>\"", " ", "\[Rule]", " ", "branchKeys"}]}], 
         "\[IndentingNewLine]", "|>"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Add", " ", "the", " ", "split", " ", "and", " ", "its", " ", 
        "derivate", " ", "sequences", " ", "to", " ", "the", " ", "path", " ", 
        RowBox[{"list", ".", " ", "Then"}], " ", "add", " ", "the", " ", 
        "merge", " ", "points", " ", "for", " ", "the", " ", "sequences"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"masterPathList", ",", " ", "splMap"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"appendSplitSequences", "[", "branchKeys", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SameQ", "[", 
          RowBox[{"mergePairs", ",", " ", "Null"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"true", ".", " ", "merging"}], " ", "occurs"}], ",", " ", 
          RowBox[{"so", " ", "add", " ", "the", " ", "merges"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mergeStartKeys", " ", "=", " ", 
          RowBox[{"createMergeStartKeys", "[", 
           RowBox[{"branchKeys", ",", " ", "mergePairs"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"appendMergeSequences", "[", "mergeStartKeys", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "end", " ", "of", " ", "the", " ", "one", " ", "you", " ", 
        "linked"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "startKey", "]"}], ",", "\[IndentingNewLine]",
         "\t", 
        RowBox[{
         RowBox[{"setEnd", "[", 
          RowBox[{"startKey", ",", " ", "newSplKey"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
   " "}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7635628168058395`*^9, 3.763562991854748*^9}, 
   3.763563066321489*^9, {3.763566530413933*^9, 3.7635665542333965`*^9}, {
   3.7635665865877657`*^9, 3.763566597227586*^9}, {3.763566855057295*^9, 
   3.763566888986044*^9}, {3.763567121619834*^9, 3.7635671569332237`*^9}, {
   3.7635671983936043`*^9, 3.7635672013688874`*^9}, {3.763567401343071*^9, 
   3.763567429278302*^9}, 3.7635674933317747`*^9, {3.763567734936245*^9, 
   3.763567739290942*^9}, {3.763576016659836*^9, 3.7635760195250454`*^9}, {
   3.7635794508900337`*^9, 3.7635794509888067`*^9}, {3.763579703684329*^9, 
   3.7635797062279344`*^9}, {3.7636496933244247`*^9, 
   3.7636497482684517`*^9}, {3.7636498931282883`*^9, 
   3.7636499478039865`*^9}, {3.7636500978146086`*^9, 
   3.7636500994017878`*^9}, {3.7636506817066555`*^9, 3.763650691873336*^9}, {
   3.7636507238331203`*^9, 3.7636507295836315`*^9}, {3.7636514435723658`*^9, 
   3.7636514486849995`*^9}, {3.7636547809025536`*^9, 3.763654794623028*^9}, {
   3.7636550357143583`*^9, 3.7636550364658613`*^9}, {3.7636551525000606`*^9, 
   3.7636551889483604`*^9}, {3.7636613825000377`*^9, 3.763661386476598*^9}, {
   3.7636635475676317`*^9, 3.763663548727242*^9}, {3.7636637883888435`*^9, 
   3.7636638757778144`*^9}, {3.763663915841177*^9, 3.7636639557649374`*^9}, {
   3.763664050712365*^9, 3.7636640598949027`*^9}, {3.7636641411264973`*^9, 
   3.7636641897169256`*^9}, {3.7636642488128433`*^9, 
   3.7636642535133715`*^9}, {3.7636646052912226`*^9, 3.763664664486166*^9}, {
   3.7636650510416803`*^9, 3.7636650517626085`*^9}, {3.7636652708195148`*^9, 
   3.7636652781356516`*^9}, {3.7637259543917*^9, 3.763725954685422*^9}, {
   3.763736394536908*^9, 3.7637364321397696`*^9}, {3.7637376223366375`*^9, 
   3.7637376648321314`*^9}, {3.7637706815336933`*^9, 
   3.7637706816902213`*^9}, {3.763770911211269*^9, 3.76377092140905*^9}, {
   3.7637709973921576`*^9, 3.7637710261597614`*^9}, {3.7637711215669107`*^9, 
   3.7637711222436085`*^9}, {3.7638430721246386`*^9, 3.763843089039242*^9}, {
   3.763937299986965*^9, 3.7639373062384872`*^9}, {3.764008049093071*^9, 
   3.7640080499538064`*^9}, {3.7642658260473447`*^9, 
   3.7642658262499943`*^9}, {3.7660113281328897`*^9, 3.766011334376998*^9}, {
   3.766011373900352*^9, 3.7660113794907475`*^9}, {3.766011648035611*^9, 
   3.7660116543624897`*^9}},
 CellLabel->
  "In[601]:=",ExpressionUUID->"6ee40d2c-e1ac-4a9d-b5b8-a1047415b590"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "merge"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Merges", ":", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "The", " ", "point", " ", "at", " ", "which", " ", "two", " ", "or", 
       " ", "more", " ", "sequences", " ", "come", " ", 
       RowBox[{"together", ".", " ", "Can"}], " ", "hold", " ", "multiple", 
       " ", "keys", " ", "in", " ", "its", " ", "start", " ", 
       RowBox[{"mapping", ".", "\n", "key"}]}], "-", " ", 
      RowBox[{"\"\<mer#\>\"", "\[IndentingNewLine]", "mappings"}], "-", " ", 
      "attributes"}]}], ",", " ", 
    RowBox[{"start", 
     RowBox[{"(", "multiple", ")"}]}], ",", " ", "end"}], 
   "\[IndentingNewLine]", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"createMer", "[", "startKeys_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"newMerKey", " ", "=", " ", 
        RowBox[{"createPathKey", "[", 
         RowBox[{"\"\<mer\>\"", ",", " ", "Null"}], "]"}]}], ",", "\n", 
       RowBox[{"merMap", " ", "=", " ", "\"\<undefinedMapping\>\""}], ",", 
       "\n", 
       RowBox[{"newSeqKey", " ", "=", " ", 
        RowBox[{"createPathKey", "[", 
         RowBox[{"\"\<seq\>\"", ",", " ", 
          RowBox[{
           RowBox[{"getLastKeyNum", "[", "]"}], " ", "+", " ", "2"}]}], 
         "]"}]}]}], " ", "\n", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Merge", " ", "structure"}], " ", "*)"}], "\[IndentingNewLine]",
      "\t", 
     RowBox[{
      RowBox[{"merMap", " ", "=", " ", 
       RowBox[{"newMerKey", " ", "\[Rule]", " ", 
        RowBox[{"<|", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"\"\<start\>\"", " ", "\[Rule]", " ", "startKeys"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"\"\<end\>\"", " ", "\[Rule]", " ", "newSeqKey"}]}], 
         "\[IndentingNewLine]", "\t", "|>"}]}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Links", " ", "the", " ", "merged", " ", "sequences", " ", "to", " ", 
        "the", " ", "merge", " ", "point"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"setMergedSeqsEnds", "[", 
       RowBox[{"startKeys", ",", " ", "newMerKey"}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Add", " ", "merge", " ", "to", " ", "the", " ", "path", " ", "list"}],
        " ", "*)"}], "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"masterPathList", ",", " ", "merMap"}], "]"}], ";", "\n", "\t", 
      RowBox[{"createSeq", "[", 
       RowBox[{"newSeqKey", ",", " ", "newMerKey"}], "]"}]}]}], "\n", "\t", 
    "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"IMPLEMENT", ":", " ", 
      RowBox[{
      "set", " ", "the", " ", "spl", " ", "seq", " ", "ends", " ", "to", " ", 
       "this", " ", "merge", " ", "key"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.763664332329759*^9, 3.763664343699273*^9}, {
   3.7636644087117023`*^9, 3.7636645827805243`*^9}, {3.7636646762172422`*^9, 
   3.763664793710184*^9}, {3.763664846990734*^9, 3.7636648900185175`*^9}, {
   3.763665034096253*^9, 3.763665107651568*^9}, {3.7636651385470614`*^9, 
   3.7636651417802453`*^9}, {3.763665177005309*^9, 3.763665183420378*^9}, {
   3.763665219498863*^9, 3.7636652209551477`*^9}, {3.763725960054643*^9, 
   3.7637259604454885`*^9}, 3.763726933969834*^9, {3.763726995412874*^9, 
   3.7637270037491364`*^9}, {3.763727252604602*^9, 3.763727273520362*^9}, {
   3.7637638519219866`*^9, 3.763763853728059*^9}, {3.763771196369625*^9, 
   3.763771215148987*^9}, {3.7638431080314674`*^9, 3.763843150943509*^9}, {
   3.7640080418257923`*^9, 3.764008042837691*^9}, {3.76426581935634*^9, 
   3.7642658201685114`*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"39283ed3-90b8-4217-ab02-a9633fa5b7e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Called", " ", "by", " ", "create", " ", 
     RowBox[{"split", ".", " ", "Takes"}], " ", "a", " ", "given", " ", 
     "number", " ", "of", " ", 
     RowBox[{"t", "'"}], "s"}], ",", " ", 
    RowBox[{
     RowBox[{"m", "'"}], "s"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"b", "'"}], "s", " ", "and", " ", "returns", " ", "the", " ", 
     "partitioned", " ", "list", " ", "of", " ", "seq", " ", 
     RowBox[{"keys", "."}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"createBranches", "[", 
    RowBox[{"{", 
     RowBox[{"t_", ",", " ", "m_", ",", " ", "b_"}], "}"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"seqKeys", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", "\n", 
       RowBox[{"numOfSplits", " ", "=", " ", 
        RowBox[{"t", "+", "m", "+", "b"}]}], ",", " ", "\n", 
       RowBox[{"prevKeyNum", " ", "=", " ", 
        RowBox[{
         RowBox[{"getLastKeyNum", "[", "]"}], " ", "+", " ", "1"}]}], ",", 
       "\n", 
       RowBox[{"partedSeqKeys", " ", "=", 
        RowBox[{"{", "}"}]}]}], "\n", "}"}], ",", "\t", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Builds", " ", "the", " ", "keys", " ", "for", " ", "the", " ", 
       "sequences"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"seqKeys", " ", "=", " ", 
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"i", " ", "+=", " ", "prevKeyNum"}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "each", " ", "i", " ", "to", " ", "the", " ", 
            "prevKeyNum", " ", "so", " ", "the", " ", "seq", " ", "key", " ", 
            "numbers", " ", 
            RowBox[{"aren", "'"}], "t", " ", "duplicated"}], " ", "*)"}], 
          "\n", "\t\t", 
          RowBox[{"createPathKey", "[", 
           RowBox[{"\"\<seq\>\"", ",", " ", "i"}], "]"}]}], ",", " ", "\n", 
         "\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "numOfSplits"}], "}"}]}], "]"}]}], ";", "\n",
       "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Takes", " ", "the", " ", "keys", " ", "and", " ", "partitions", " ", 
        "them"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"partedSeqKeys", " ", "=", " ", 
       RowBox[{"splitBranches", "[", 
        RowBox[{"seqKeys", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "m", ",", " ", "b"}], "}"}]}], "]"}]}], ";", 
      "\t\t\t\t\t", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Returned", " ", "partitioned", " ", "list", " ", "of", " ", "seq", 
        " ", "keys"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"Return", "[", "partedSeqKeys", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.763494114782708*^9, 3.763494122074249*^9}, {
   3.763494185365969*^9, 3.763494193504655*^9}, {3.7634942378670435`*^9, 
   3.7634942473512363`*^9}, {3.7634943059330893`*^9, 
   3.7634943643873262`*^9}, {3.7634944191256647`*^9, 
   3.7634944524018183`*^9}, {3.7634945094256744`*^9, 3.763494526172234*^9}, {
   3.7634946126329594`*^9, 3.763494680179661*^9}, {3.7634947419118924`*^9, 
   3.7634947421153955`*^9}, {3.7634948072689896`*^9, 3.763494848885271*^9}, {
   3.7634950238799515`*^9, 3.7634950893696346`*^9}, {3.763495125544248*^9, 
   3.7634953375002785`*^9}, {3.7634962946511445`*^9, 3.763496315572782*^9}, {
   3.763497205262659*^9, 3.763497394612109*^9}, {3.763564174456009*^9, 
   3.7635642042367926`*^9}, {3.7635643003786955`*^9, 3.7635643006225595`*^9}, 
   3.7635643838094144`*^9, {3.763565280105974*^9, 3.7635652839204493`*^9}, {
   3.7635662235293827`*^9, 3.76356631476239*^9}, 3.7635665620586205`*^9, {
   3.763566637589781*^9, 3.763566639872651*^9}, {3.763566715640299*^9, 
   3.7635667275596886`*^9}, {3.763566759092104*^9, 3.763566776215725*^9}, {
   3.7635669154099803`*^9, 3.763566958331829*^9}, {3.763567403456874*^9, 
   3.763567408731884*^9}, {3.7635675063776054`*^9, 3.763567519513124*^9}, {
   3.7635679381223936`*^9, 3.7635680394745936`*^9}, 3.763568354513667*^9, {
   3.763568478512387*^9, 3.7635684967794156`*^9}, {3.763568821076703*^9, 
   3.7635688539037867`*^9}, {3.763576704521006*^9, 3.763576705140521*^9}, {
   3.7635775674180784`*^9, 3.7635775854421177`*^9}, {3.7635776651093163`*^9, 
   3.76357766645176*^9}, {3.7635778002180367`*^9, 3.7635778097861414`*^9}, {
   3.7635778682361393`*^9, 3.7635778694495153`*^9}, {3.7635780113649745`*^9, 
   3.763578013397004*^9}, {3.7635780824824767`*^9, 3.7635780853454905`*^9}, {
   3.763578185611703*^9, 3.763578195735216*^9}, {3.7635786456276875`*^9, 
   3.7635786469381304`*^9}, {3.7635787551066413`*^9, 
   3.7635787967013216`*^9}, {3.7635789409666204`*^9, 
   3.7635789432824745`*^9}, {3.7635790142271366`*^9, 3.763579023958561*^9}, {
   3.763579158122656*^9, 3.7635791583461637`*^9}, {3.7635792578185625`*^9, 
   3.7635792640129724`*^9}, {3.7635800604572487`*^9, 3.7635801261482124`*^9}, 
   3.7636497110762105`*^9, {3.7636501058960896`*^9, 3.7636502999663763`*^9}, {
   3.7636503508168592`*^9, 3.763650485578827*^9}, {3.763650530619665*^9, 
   3.7636505417486277`*^9}, 3.7636507740024056`*^9, {3.7636508495739746`*^9, 
   3.7636508875443196`*^9}, {3.76365185067844*^9, 3.763651851639589*^9}, {
   3.763651952389286*^9, 3.7636519525746603`*^9}, {3.7636520647837224`*^9, 
   3.7636520669546633`*^9}, {3.7636521258668594`*^9, 
   3.7636521290644245`*^9}, {3.7636521868787766`*^9, 
   3.7636522237556863`*^9}, {3.7636522718130302`*^9, 3.763652330606637*^9}, {
   3.7636527250293355`*^9, 3.763652741172983*^9}, {3.763652820213739*^9, 
   3.7636528214053364`*^9}, {3.7636529042858887`*^9, 
   3.7636529090342064`*^9}, {3.7636552168714857`*^9, 3.763655375817291*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"16159fbe-adba-4a4d-ba72-b56edfd568ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Takes", " ", "a", " ", "list", " ", "of", " ", "seq", " ", "keys", " ", 
     "and", " ", "the", " ", "number", " ", "of", " ", "t"}], ",", " ", "m", 
    ",", " ", 
    RowBox[{
    "and", " ", "b", " ", "splits", " ", "to", " ", "return", " ", "the", " ",
      "partitioned", " ", 
     RowBox[{"list", "."}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"splitBranches", "[", 
    RowBox[{"seqKeys_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t_", ",", " ", "m_", ",", " ", "b_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"partedSeqKeys", " ", "=", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "This", " ", "takes", " ", "the", " ", "first", " ", "t", " ", "keys", 
       " ", "from", " ", "seqKeys", " ", "and", " ", "adds", " ", "it", " ", 
       "to", " ", "partedSeqKeys"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"partedSeqKeys", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"seqKeys", ",", " ", "t", ",", " ", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t",
       "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "This", " ", "takes", " ", "the", " ", "first", " ", "m", " ", "keys", 
        " ", "after", " ", "the", " ", "first", " ", "t", " ", "keys", " ", 
        "from", " ", "seqKeys", " ", "and", " ", "adds", " ", "it", " ", "to",
         " ", "partedSeqKeys"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"partedSeqKeys", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"seqKeys", ",", " ", "m", ",", " ", "1"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"t", "+", "1"}], "]"}], "]"}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "This", " ", "takes", " ", "the", " ", "last", " ", "b", " ", "keys", 
        " ", "from", " ", "seqKeys", " ", "and", " ", "adds", " ", "it", " ", 
        "to", " ", "partedSeqKeys"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"partedSeqKeys", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"seqKeys", ",", " ", "b", ",", " ", "1"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"t", "+", "m", "+", "1"}], "]"}], "]"}]}], "\n", "\t", 
       "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Returns", " ", "the", " ", "partitioned", " ", "list"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"Return", "[", "partedSeqKeys", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.763497525711254*^9, 3.7634975670654182`*^9}, {
   3.763564111183779*^9, 3.7635641899206347`*^9}, {3.7635667839658504`*^9, 
   3.763566793966997*^9}, {3.7635802001094947`*^9, 3.7635802016933994`*^9}, 
   3.763649702476617*^9, {3.763649953511573*^9, 3.763650051755438*^9}, {
   3.763650499529191*^9, 3.7636505272048273`*^9}, {3.7636508955102687`*^9, 
   3.763650911492911*^9}, {3.7636553803948493`*^9, 3.7636554017250175`*^9}, 
   3.7637592034424534`*^9},
 CellLabel->
  "In[604]:=",ExpressionUUID->"559b037e-a9fd-461e-9e65-eb8ab973f761"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Is", " ", "called", " ", "by", " ", "create", " ", 
    RowBox[{"split", ".", " ", "Takes"}], " ", "each", " ", "branch", " ", 
    "key", " ", "and", " ", "creates", " ", "sequences", " ", "for", " ", 
    "it"}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"appendSplitSequences", "[", "partedSeqKeys_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"splitName", " ", "=", " ", 
        RowBox[{"Last", "[", 
         RowBox[{"Keys", "[", "masterPathList", "]"}], "]"}]}], ",", "\n", 
       RowBox[{"unpartedSeqKeys", " ", "=", " ", 
        RowBox[{"Flatten", "[", "partedSeqKeys", "]"}]}]}], "\n", "}"}], ",", 
     "\n", "\t", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"createSeq", "[", 
        RowBox[{"seqName", ",", " ", "splitName"}], "]"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Uses", " ", "the", " ", "split", " ", "key", " ", "that", " ", 
         "called", " ", "it", " ", "for", " ", "the", " ", "startKey"}], " ", 
        "*)"}], "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"seqName", ",", " ", "unpartedSeqKeys"}], "}"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Runs", " ", "for", " ", "each", " ", "seqName"}], " ", "*)"}],
       "\n", "\t", "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7635682169368544`*^9, 3.7635683390648026`*^9}, {
   3.763578207902425*^9, 3.7635782161033616`*^9}, {3.7635788210871162`*^9, 
   3.7635788215169077`*^9}, {3.7635797202163424`*^9, 
   3.7635797656655703`*^9}, {3.7635802987793665`*^9, 
   3.7635803206547914`*^9}, {3.7635803513510427`*^9, 3.7635803915310493`*^9}, 
   3.763649705834666*^9, {3.7636505528236713`*^9, 3.7636506706397696`*^9}, {
   3.7636507389989586`*^9, 3.7636507584798203`*^9}, {3.7636515342281575`*^9, 
   3.7636515460060434`*^9}, 3.7636519017232304`*^9, {3.763652971280217*^9, 
   3.763652997313433*^9}, {3.7636531067517133`*^9, 3.7636531099677105`*^9}, {
   3.7636531512702074`*^9, 3.763653181194642*^9}, {3.763655436643013*^9, 
   3.76365550039555*^9}, {3.7636641981181803`*^9, 3.7636642034569817`*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"d8c90e41-14a9-4e4f-a614-b9e3ee66e54f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"branchKeys", "-", " ", 
    RowBox[{"list", " ", "of", " ", "a", " ", 
     RowBox[{"split", "'"}], "s", " ", "derivative", " ", "sequences", " ", 
     RowBox[{"(", 
      RowBox[{"size", " ", "n"}], ")"}], "\[IndentingNewLine]", 
     "mergePairs"}], "-", " ", 
    RowBox[{
    "list", " ", "of", " ", "truth", " ", "values", " ", "that", " ", "tell", 
     " ", "if", " ", "a", " ", "pair", " ", "of", " ", "sequences", " ", 
     "merge", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"size", " ", "n"}], "-", "1"}], ")"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "Uses", " ", "both", " ", "pieces", " ", "of", 
     " ", "information", " ", "to", " ", "output", " ", "partitioned", " ", 
     "lists", " ", "that", " ", "hold", " ", "the", " ", 
     RowBox[{"sequences", ".", "\[IndentingNewLine]", "These"}], " ", 
     "partitioned", " ", "lists", " ", "are", " ", "used", " ", "in", " ", 
     "merge", " ", "creation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"createMergeStartKeys", "[", 
    RowBox[{"branchKeys_", ",", " ", "mergePairs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"partitionedMerges", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "set", " ", "of", " ", "partitioned", " ", "sequences", 
         " ", "for", " ", "multiple", " ", "merges", " ", "from", " ", "a", 
         " ", "split"}], " ", "*)"}], "\[IndentingNewLine]", 
       "currentPartition", ",", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "set", " ", "of", " ", "merging", " ", "sequences", " ", 
         "we", " ", "are", " ", "building"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"unpartedKeys", " ", "=", " ", 
        RowBox[{"Flatten", "[", "branchKeys", "]"}]}], ",", 
       "\[IndentingNewLine]", "firstSeq", ",", "\[IndentingNewLine]", 
       "secondSeq", ",", "\[IndentingNewLine]", "alreadyAdded"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "if", " ", "it", " ", "is", " ", "already", " ", "in", " ", "the", " ",
         "sequence"}], " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"currentPartition", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"firstSeq", " ", "=", " ", 
          RowBox[{"unpartedKeys", "[", 
           RowBox[{"[", "mergeCount", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"secondSeq", " ", "=", " ", 
          RowBox[{"unpartedKeys", "[", 
           RowBox[{"[", 
            RowBox[{"mergeCount", "+", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"alreadyAdded", " ", "=", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"currentPartition", ",", " ", "firstSeq"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mergePairs", "[", 
            RowBox[{"[", "mergeCount", "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", "true", "*)"}], "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", "alreadyAdded"}], ",", "\[IndentingNewLine]", "\t", 
              RowBox[{"(*", "true", "*)"}], "\[IndentingNewLine]", "\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"currentPartition", ",", " ", "firstSeq"}], "]"}]}], 
             " ", "\[IndentingNewLine]", "\t", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"currentPartition", ",", " ", "secondSeq"}], "]"}]}], 
           ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", "false", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"partitionedMerges", ",", " ", "currentPartition"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"currentPartition", " ", "=", " ", 
             RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"mergeCount", ",", " ", 
          RowBox[{"Length", "[", "mergePairs", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Building", " ", "has", " ", "now", " ", "stopped", " ", "because", 
        " ", "all", " ", "the", " ", "merge", " ", "truth", " ", "values", 
        " ", "have", " ", "been", " ", "iterated", " ", 
        RowBox[{"through", ".", " ", "So"}], " ", "append", " ", "the", " ", 
        "last", " ", "built", " ", "partition"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"partitionedMerges", ",", " ", "currentPartition"}], "]"}], 
      ";", " ", "\[IndentingNewLine]", 
      RowBox[{"partitionedMerges", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"partitionedMerges", ",", " ", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"{", "}"}]}], "]"}]}], " ", "&"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Filter", " ", "out", " ", "empty", " ", "sets"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "partitionedMerges", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.763736364700308*^9, 3.763736380780841*^9}, {
   3.763736484535386*^9, 3.7637365015607543`*^9}, {3.7637365464152718`*^9, 
   3.763736569388771*^9}, {3.763736689764978*^9, 3.7637366910645847`*^9}, {
   3.763736753494833*^9, 3.7637367824275565`*^9}, {3.7637368127866507`*^9, 
   3.7637368150253286`*^9}, {3.763736938903078*^9, 3.763736989461184*^9}, {
   3.7637370574723277`*^9, 3.7637371785015764`*^9}, 3.7637372208523903`*^9, {
   3.7637372802453175`*^9, 3.76373728834112*^9}, {3.763737333855588*^9, 
   3.7637374224926*^9}, 3.763737673572052*^9, {3.763764013668296*^9, 
   3.763764281188838*^9}, {3.763764373152596*^9, 3.7637644244750547`*^9}, {
   3.7637645149312134`*^9, 3.7637645360381927`*^9}, {3.7637646658851204`*^9, 
   3.7637646891639338`*^9}, {3.7637647376587934`*^9, 
   3.7637648301333876`*^9}, {3.7637649072714624`*^9, 3.763764989044964*^9}, {
   3.7637650442721205`*^9, 3.763765197444183*^9}},
 CellLabel->
  "In[606]:=",ExpressionUUID->"56948f5a-4e4c-4010-96e8-66fa32c4ce79"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Is", " ", "called", " ", "by", " ", "create", " ", 
    RowBox[{"split", ".", " ", "Takes"}], " ", "each", " ", "branch", " ", 
    "key", " ", "and", " ", "creates", " ", "sequences", " ", "for", " ", 
    "it"}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"appendMergeSequences", "[", "mergeStartKeys_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"createMer", "[", "startKeyList", "]"}], "\t", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"startKeyList", ",", " ", "mergeStartKeys"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7636641760794163`*^9, 3.763664178857217*^9}, {
  3.7636642215510464`*^9, 3.7636642428144107`*^9}, {3.763726037737139*^9, 
  3.7637260390092535`*^9}, {3.763726091756831*^9, 3.763726203376465*^9}, {
  3.7637262812791104`*^9, 3.7637265170756683`*^9}, {3.763726644633212*^9, 
  3.763726814444166*^9}, {3.7637268531340055`*^9, 3.763726889231408*^9}, {
  3.7637270664254146`*^9, 3.763727139590684*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"fccb44b7-0c3a-43f9-aa8e-830bd7c48c09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setMergedSeqsEnds", "[", 
    RowBox[{"startKeys_", ",", " ", "merKeyP_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"merKey", " ", "=", " ", "merKeyP"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"setEnd", "[", 
          RowBox[{"startKey", ",", " ", "merKey"}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"startKey", ",", " ", "startKeys"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7638431777320476`*^9, 3.7638432429771442`*^9}, {
  3.7638433876144705`*^9, 3.763843413686407*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"88b059af-ecb3-4aa3-9f1d-aa1e98cf88c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "method", " ", "for", " ", 
    RowBox[{"paths", ".", " ", "Allows"}], " ", "us", " ", "to", " ", "come", 
    " ", "back", " ", "and", " ", 
    RowBox[{"change", "/", "add"}], " ", "to", " ", "the", " ", "attributes", 
    " ", "later", " ", "and", " ", "not", " ", "have", " ", "to", " ", 
    "change", " ", "a", " ", "lot", " ", "of", " ", "code"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"instantiatePathAttributes", "[", "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"\"\<attr\>\"", " ", "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<flowRate\>\"", " ", "\[Rule]", " ", "Null"}], ",", " ", 
      RowBox[{"\"\<avgVelocity\>\"", " ", "\[Rule]", " ", "Null"}], ",", 
      RowBox[{"\"\<avgDiameter\>\"", "\[Rule]", " ", "Null"}], ",", 
      RowBox[{"\"\<height\>\"", " ", "\[Rule]", " ", "Null"}]}], 
     "|>"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7635039773868856`*^9, 3.763504001251496*^9}, {
   3.76350410094168*^9, 3.7635041012696304`*^9}, {3.763504431222807*^9, 
   3.7635044408487415`*^9}, {3.7635048585994844`*^9, 
   3.7635049408755345`*^9}, {3.7635049907302485`*^9, 3.763504999032819*^9}, {
   3.763505183733591*^9, 3.7635052048803053`*^9}, 3.7635631083971677`*^9, {
   3.763655505111185*^9, 3.763655523676426*^9}, {3.7636634883270917`*^9, 
   3.763663517828199*^9}, {3.7637259292263203`*^9, 3.763725929580373*^9}, 
   3.764358486169734*^9, {3.764500984018609*^9, 3.7645009882877607`*^9}, {
   3.7645010340439525`*^9, 3.764501035548295*^9}, {3.7658419162667704`*^9, 
   3.7658419318584146`*^9}},
 FontWeight->"Bold",
 CellLabel->
  "In[609]:=",ExpressionUUID->"e8fc2bbe-8bbc-4b57-aea6-c15910f25b80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Path Modification", "Subsection",
 CellChangeTimes->{{3.7642658521798325`*^9, 
  3.7642658544993925`*^9}},ExpressionUUID->"532bd56e-96b9-4d7e-a990-\
eb6de6a3a335"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "a", " ", 
    RowBox[{"path", "'"}], "s", " ", "end", " ", "to", " ", "a", " ", 
    "desired", " ", "endKey"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setEnd", "[", 
    RowBox[{"givenPath_", ",", " ", "desired_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", " ", "=", " ", "givenPath"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<end\>\""}], "]"}], " ", "=", " ", 
       "desired"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7638412044239244`*^9, 3.7638412568754897`*^9}, {
  3.763841330945755*^9, 3.7638413438038425`*^9}, {3.7638413903271008`*^9, 
  3.7638414058428173`*^9}},
 CellLabel->
  "In[610]:=",ExpressionUUID->"3a79404d-b67a-4959-8a57-1be774ea8d74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "a", " ", 
    RowBox[{"path", "'"}], "s", " ", "end", " ", "to", " ", "a", " ", 
    "desired", " ", "startKey"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setStart", "[", 
    RowBox[{"givenPath_", ",", " ", "desired_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", " ", "=", " ", "givenPath"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<start\>\""}], "]"}], " ", "=", " ", 
       "desired"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764008140206564*^9, 3.7640081598989472`*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"b6253844-f1bd-489a-9cce-1c7989c483d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "a", " ", 
    RowBox[{"seq", "'"}], "s", " ", "height"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setHeight", "[", 
    RowBox[{"seqKey_", ",", " ", "height_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"seq", "=", " ", "seqKey"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"seq", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}],
         "]"}], "=", "height"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7642658612044415`*^9, 3.764265924475049*^9}},
 CellLabel->
  "In[612]:=",ExpressionUUID->"9ff67c7b-d2c1-4bf6-a44d-49cd58df0eed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Remove", " ", "a", " ", "path", " ", "from", " ", "the", " ", "model"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"removePath", "[", "pathKey_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", " ", "=", " ", "pathKey"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"masterPathList", " ", "=", " ", 
       RowBox[{"Delete", "[", 
        RowBox[{"masterPathList", ",", " ", "path"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7651298225198803`*^9, 3.765129863040852*^9}, {
  3.765130015530846*^9, 3.765130018428356*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"6c2ea50e-65d8-41d3-82f6-6cdcdf7d6393"]
}, Closed]],

Cell[CellGroupData[{

Cell["Processing - Main", "Subsection",
 CellChangeTimes->{{3.764358384873708*^9, 3.76435839335069*^9}, {
  3.765143973145073*^9, 
  3.765143973754306*^9}},ExpressionUUID->"b911819c-e3e8-4e48-8dbd-\
36b1c9a4b58d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "main", " ", "function", " ", "that", " ", "calls", " ", "the",
     " ", "processing", " ", "methods"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Handles", " ", "the", " ", "distribution", " ", "of", " ", "flowRate"}], 
    ",", " ", "temperature", ",", " ", 
    RowBox[{
    "etc", " ", "and", " ", "processing", " ", "of", " ", "attributes", " ", 
     "like", " ", "avgDiameter", " ", "and", " ", "avgVelocity"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"processSysMain", "[", "]"}], " ", ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"processSysDiam", "[", "]"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"processSysFR", "[", "]"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"processSysVels", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7645990654125633`*^9, 3.7645991633058414`*^9}, 
   3.7646144870787125`*^9},
 CellLabel->
  "In[614]:=",ExpressionUUID->"02f64730-b676-4233-951f-456f6b812322"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Goes", " ", "through", " ", "the", " ", "linked", " ", "branches", " ", 
    "to", " ", "process", " ", "the", " ", "flowRate", " ", "across", " ", 
    "members", " ", "using", " ", "established", " ", "rules"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "System", " ", "must", " ", "be", " ", "built", " ", "before", " ", "this",
     " ", "is", " ", "executed"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"seq", "/", "mer"}], "\[Rule]", 
      RowBox[{"seq", " ", "-", "flowIn"}]}], "=", "flowOut"}], ",", " ", 
    RowBox[{
     RowBox[{"so", " ", 
      RowBox[{"it", "'"}], "ll", " ", "be", " ", "the", " ", "same", 
      "\[IndentingNewLine]", "seq"}], "\[Rule]", 
     RowBox[{"split", " ", "-", 
      RowBox[{
      "proportions", " ", "are", " ", "used", "\[IndentingNewLine]", "mer"}], 
      " ", "-", 
      RowBox[{"sum", " ", "of", " ", "incoming", " ", 
       RowBox[{"seq", "'"}], "s", " ", "flowRates"}]}]}]}], " ", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"processSysFR", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"originPath", " ", "=", " ", 
        RowBox[{
         RowBox[{"Keys", "[", "masterPathList", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "hasPump", ",", "\[IndentingNewLine]", "pathType", ",", 
       "\[IndentingNewLine]", "flowRate", ",", "\[IndentingNewLine]", 
       "prevKey", ",", "\[IndentingNewLine]", "prevKeyType"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hasPump", " ", "=", " ", 
       RowBox[{"containsPump", "[", "originPath", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Flow", " ", "rate", " ", "based", " ", "on", " ", "origin", " ", 
        "seq", " ", "is", " ", "set"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"The", " ", "origin", " ", 
         RowBox[{"seq", "'"}], "s", " ", "pipe"}], ",", " ", "pump", ",", " ", 
        RowBox[{
        "and", " ", "reservoir", " ", "affect", " ", "this", " ", "value"}]}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"hasPump", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", "true", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"setOriginFRPump", "[", "originPath", "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", "false", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"setOriginFRGrav", "[", "originPath", "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Sets", " ", "flow", " ", "rates", " ", "for", " ", "the", " ", 
        "sequences", " ", "on", " ", "the", " ", "masterPathList"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "pathType", " ", "is", " ", "\"\<mer\>\"", " ", "or", " ", 
         "\"\<seq\>\"", " ", "or", " ", "\"\<spl\>\""}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"pathType", " ", "=", " ", 
          RowBox[{"getPathType", "[", "key", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prevKey", " ", "=", " ", 
          RowBox[{"masterPathList", "[", 
           RowBox[{"key", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Skips", " ", "the", " ", "first", " ", "seq", " ", "so", " ", "an",
            " ", "error", " ", 
           RowBox[{"isn", "'"}], "t", " ", "thrown", " ", "when", " ", "the", 
           " ", "prev", " ", "info", " ", "is", " ", "retrieved"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringQ", "[", "prevKey", "]"}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"prevKeyType", " ", "=", " ", 
          RowBox[{"getPathType", "[", "prevKey", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"-", "SPL"}]}]}]}]}]}]}], " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"CHECK", "--"}], "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"If", " ", 
            RowBox[{"it", "'"}], "s", " ", "a", " ", "spl"}], ",", " ", 
           RowBox[{
           "process", " ", "it", " ", "and", " ", "move", " ", "to", " ", 
            "the", " ", "next", " ", "key"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pathType", "\[Equal]", "\"\<spl\>\""}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"setFRspl", "[", "key", "]"}], ";", "\[IndentingNewLine]",
             "\t", 
            RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"flowRate", " ", "=", " ", 
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "key", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"-", "SEQ"}]}]}]}]}]}]}]}], " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"CHECKS", "--"}], "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"check", " ", "for", " ", 
           RowBox[{"gate", "/", "valve"}], " ", "closings"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"masterPathList", "[", 
             RowBox[{
             "key", ",", " ", "\"\<attr\>\"", ",", " ", 
              "\"\<avgDiameter\>\""}], "]"}], "\[Equal]", "0"}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{"masterPathList", "[", 
              RowBox[{
              "key", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}],
               "]"}], " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "If", " ", "the", " ", "path", " ", "is", " ", "a", " ", "seq", 
            " ", "that", " ", "starts", " ", "from", " ", "a", " ", "merge", 
            " ", "execute", " ", "the", " ", "flowRate", " ", "process", " ", 
            "for", " ", "a", " ", "merge", " ", "lead"}], "-", "in"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pathType", " ", "\[Equal]", " ", "\"\<seq\>\""}], " ", "&&", 
            RowBox[{"prevKeyType", " ", "\[Equal]", "\"\<mer\>\""}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"setFRmerLeadIn", "[", "key", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "If", " ", "the", " ", "path", " ", "is", " ", "a", " ", "seq", 
            " ", "that", " ", "starts", " ", "from", " ", "a", " ", "seq"}], 
           ",", " ", 
           RowBox[{
            RowBox[{
            "execute", " ", "the", " ", "flowRate", " ", "process", " ", 
             "for", " ", "a", " ", "seq", " ", "lead"}], "-", "in"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pathType", " ", "\[Equal]", " ", "\"\<seq\>\""}], " ", "&&",
             " ", 
            RowBox[{"prevKeyType", " ", "\[Equal]", " ", "\"\<seq\>\""}]}], 
           ",", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"setFRseqLeadIn", "[", "key", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"key", ",", " ", 
          RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764267183874176*^9, 3.7642674235585375`*^9}, {
   3.764267461223852*^9, 3.7642675109344344`*^9}, {3.7642675472882786`*^9, 
   3.764267555609873*^9}, {3.76426763471707*^9, 3.764267697837973*^9}, {
   3.764267735307644*^9, 3.764267897328429*^9}, {3.764270518220115*^9, 
   3.7642706335737915`*^9}, {3.7642707534896197`*^9, 3.7642707614824257`*^9}, 
   3.7642710566400375`*^9, {3.7642713985283155`*^9, 3.7642714523291655`*^9}, {
   3.7642715148885336`*^9, 3.7642715681428385`*^9}, {3.7642716520140944`*^9, 
   3.764271656473852*^9}, {3.764271708558956*^9, 3.764271751880508*^9}, {
   3.76427187629572*^9, 3.76427190279587*^9}, {3.764271998608781*^9, 
   3.764272068453247*^9}, {3.7642730851280556`*^9, 3.7642730947818975`*^9}, {
   3.764274471087992*^9, 3.7642744749142447`*^9}, {3.7643577526120386`*^9, 
   3.7643577566665106`*^9}, {3.7643579290674615`*^9, 
   3.7643579903357368`*^9}, {3.764358496351548*^9, 3.7643586787881575`*^9}, {
   3.7643587389382257`*^9, 3.764358913399502*^9}, {3.76435898192179*^9, 
   3.764359085720201*^9}, {3.7643593762232075`*^9, 3.764359383785367*^9}, {
   3.764359424305724*^9, 3.7643594825326242`*^9}, {3.7643596318156385`*^9, 
   3.76435965337671*^9}, {3.7643597819288797`*^9, 3.764359784623457*^9}, {
   3.7643598190477896`*^9, 3.7643598213293357`*^9}, {3.7643598550976653`*^9, 
   3.7643598788068895`*^9}, {3.7643600325057573`*^9, 
   3.7643600333592253`*^9}, {3.7643609656482587`*^9, 
   3.7643609925839877`*^9}, {3.764361203038162*^9, 3.764361288515887*^9}, {
   3.7643613470888004`*^9, 3.764361488147126*^9}, {3.7643615210530744`*^9, 
   3.76436155705133*^9}, {3.7643615982886677`*^9, 3.7643616334113975`*^9}, {
   3.7643616781926003`*^9, 3.764361700257519*^9}, {3.7643618033065214`*^9, 
   3.764361874313916*^9}, {3.7645955564909163`*^9, 3.7645955933349752`*^9}, {
   3.764596578048893*^9, 3.7645965783417435`*^9}, {3.764597083457469*^9, 
   3.7645970889015503`*^9}, {3.7645971959093094`*^9, 
   3.7645971961725307`*^9}, {3.7646168236782513`*^9, 
   3.7646168478071547`*^9}, {3.7646168958138294`*^9, 3.764616962351427*^9}, {
   3.764866948780806*^9, 3.764866966442035*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"2b4e9af7-3a74-4833-9fd5-060c5912a1d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Prerequisite", ":", " ", 
    RowBox[{
    "flow", " ", "rates", " ", "have", " ", "to", " ", "be", " ", "processed",
      " ", "and", " ", "parts", " ", "have", " ", "to", " ", "be", " ", 
     "added"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Updates", " ", "the", " ", "avgDiameter", " ", "for", " ", "the", " ", 
    "sequences", " ", "in", " ", "the", " ", "network"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"processSysDiam", "[", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "pathType", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "runs", " ", "through", " ", "the", " ", "masterPathList", " ", "and", 
        " ", "processes", " ", "the", " ", "diameter", " ", "if", " ", 
        RowBox[{"it", "'"}], "s", " ", "a", " ", "seq"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pathType", " ", "=", " ", 
           RowBox[{"getPathType", "[", "key", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"pathType", ",", " ", "\"\<seq\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"if", " ", 
              RowBox[{"it", "'"}], "s", " ", "a", " ", "seq"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"updateAvgDiameter", "[", "key", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"key", ",", " ", 
           RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764595321217998*^9, 3.7645955194279838`*^9}, {
  3.7645965862130136`*^9, 3.764596630708426*^9}, {3.764599450792664*^9, 
  3.764599452264782*^9}, {3.7648669851447897`*^9, 3.764866989369459*^9}},
 CellLabel->
  "In[616]:=",ExpressionUUID->"69f6946e-617e-415e-9f69-0f95788a304f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Prerequisite", ":", " ", 
    RowBox[{
    "flow", " ", "rates", " ", "have", " ", "to", " ", "be", " ", "processed",
      " ", "and", " ", "parts", " ", "have", " ", "to", " ", "be", " ", 
     RowBox[{"added", ".", " ", "Avg"}], " ", "Diameter", " ", "also", " ", 
     "has", " ", "to", " ", "be", " ", "updated"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Updates", " ", "the", " ", "velocity", " ", "values", " ", "for", " ", 
    "the", " ", "sequences", " ", "in", " ", "the", " ", "network"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"processSysVels", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "pathType", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "runs", " ", "through", " ", "the", " ", "masterPathList", " ", "and", 
       " ", "processes", " ", "the", " ", "velocity", " ", "if", " ", 
       RowBox[{"it", "'"}], "s", " ", "a", " ", "seq"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"pathType", " ", "=", " ", 
          RowBox[{"getPathType", "[", "key", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"pathType", ",", " ", "\"\<seq\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"if", " ", 
             RowBox[{"it", "'"}], "s", " ", "a", " ", "seq"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"updateAvgVelocity", "[", "key", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"key", ",", " ", 
          RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7645966074336233`*^9, 3.7645966495685406`*^9}, {
  3.7645994455417747`*^9, 3.764599447026388*^9}, {3.7648669979141655`*^9, 
  3.7648670005497446`*^9}},
 CellLabel->
  "In[617]:=",ExpressionUUID->"ef8d3a8f-c80f-4949-b2a1-311870e683ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "true", " ", "if", " ", "all", " ", "the", " ", 
    "sequences", " ", "have", " ", "atleast", " ", "a", " ", "part", " ", 
    "in", " ", "them"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "checks", " ", "the", " ", "seq", " ", "end", " ", "references", " ", "to",
     " ", "make", " ", "sure", " ", "there", " ", "are", " ", "no", " ", 
    "Null", " ", 
    RowBox[{"maps", ".", " ", "Each"}], " ", "must", " ", "lead", " ", "in", 
    " ", "or", " ", "have", " ", "an", " ", "outputRes"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"allSeqsComplete", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"seqKeys", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "masterPathList", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<seq\>\""}], "]"}], "&"}]}], "]"}]}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"get", " ", "the", " ", "seq", " ", "names"}], " ", "*)"}], 
       "\[IndentingNewLine]", "hasOutputOrConnection", ",", 
       "\[IndentingNewLine]", "hasPart", ",", "\[IndentingNewLine]", 
       RowBox[{"fullyComplete", " ", "=", " ", "True"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"the", " ", "boolean", " ", "return", " ", "value"}], " ", 
       "*)"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"run", " ", "through", " ", "the", " ", 
       RowBox[{"sequences", ".", " ", "Make"}], " ", "sure", " ", "they", " ",
        "have", " ", "an", " ", "end", " ", "mapping", " ", "and", " ", 
       "parts"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"hasOutputOrConnection", " ", "=", " ", 
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"Null", ",", 
             RowBox[{"masterPathList", "[", 
              RowBox[{"seqKey", ",", " ", "\"\<end\>\""}], "]"}]}], "]"}]}]}],
          ";", "\[IndentingNewLine]", "\t", 
         RowBox[{"hasPart", " ", "=", " ", 
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"masterPathList", "[", 
              RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{"hasOutputOrConnection", " ", "&&", " ", "hasPart"}], 
             ")"}]}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{"fullyComplete", " ", "=", " ", "False"}], ";"}]}], 
          "\[IndentingNewLine]", "\t", "]"}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"seqKey", ",", " ", "seqKeys"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Note", "-", " ", 
        RowBox[{
        "will", " ", "return", " ", "true", " ", "if", " ", "masterPathList", 
         " ", "is", " ", 
         RowBox[{"empty", ".", " ", "This"}], " ", 
         RowBox[{"doesn", "'"}], "t", " ", "matter", " ", "because", " ", 
         "seq1", " ", "will", " ", "be", " ", "present", " ", "when", " ", 
         "this", " ", "is", " ", "ran"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "fullyComplete", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7660270499208727`*^9, 3.7660273071733246`*^9}, {
  3.766027349689352*^9, 3.766027494775016*^9}, {3.7660275509133606`*^9, 
  3.7660277523816576`*^9}, {3.7660278287908983`*^9, 3.7660278789127293`*^9}, {
  3.766027955452132*^9, 3.7660279797023516`*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"942dca84-f24d-493e-990d-48d2ac810ca6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing - Flow Rate Functions", "Subsection",
 CellChangeTimes->{{3.7636617048010864`*^9, 3.7636617257711306`*^9}, {
  3.7642734440566015`*^9, 3.7642734635727468`*^9}, {3.7643583810465136`*^9, 
  3.7643583822099504`*^9}, {3.7651439758319907`*^9, 
  3.7651439763943663`*^9}},ExpressionUUID->"b57b25cf-e902-419a-8bbc-\
21c709fb7218"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Checks", " ", "to", " ", "see", " ", "if", " ", "the", " ", "defined", 
    " ", "originPath", " ", "contains", " ", "a", " ", "pump"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"containsPump", "[", "originPath_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startPath", " ", "=", " ", "originPath"}], ",", 
       "\[IndentingNewLine]", "reservoirList"}], "\[IndentingNewLine]", "}"}],
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"checks", " ", "the", " ", "size", " ", "of", " ", "the", " ", 
       RowBox[{"startSeq", "'"}], "s", " ", "start", " ", 
       RowBox[{"reference", ".", " ", "It"}], " ", "will", " ", "have", " ", 
       "two", " ", "elements", " ", "if", " ", "a", " ", "pump", " ", "is", 
       " ", "present"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reservoirList", " ", "=", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"startPath", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"Length", "@", "reservoirList"}], " ", ">", " ", "1"}], "]"}],
       ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764359686645114*^9, 3.764359793068678*^9}, {
  3.7643598276640043`*^9, 3.7643598436613293`*^9}, {3.7643599056130266`*^9, 
  3.7643599301311626`*^9}, {3.7645993874784575`*^9, 3.76459942089367*^9}},
 CellLabel->
  "In[619]:=",ExpressionUUID->"eedcd152-6f80-4524-84d3-81b8ea7f5cb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Retrieves", " ", "the", " ", 
    RowBox[{"pump", "'"}], "s", " ", "flowRate", " ", "and", " ", "sets", " ",
     "the", " ", 
    RowBox[{"seq", "'"}], "s", " ", "flowRate", " ", "attribute"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setOriginFRPump", "[", "originPath_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "originPath"}], ",", 
       "\[IndentingNewLine]", "flowRate"}], "}"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "gets", " ", "the", " ", "flowRate", " ", "from", " ", "the", " ", 
       "pump", " ", "in", " ", "the", " ", "beginning", " ", "path"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "the", " ", "pump", " ", "is", " ", "the", " ", "second", " ", 
       "element", " ", "in", " ", "the", " ", "originSeq", " ", "if", " ", 
       RowBox[{"present", ".", " ", "Then"}], " ", "the", " ", "flowRate", 
       " ", "for", " ", "the", " ", "pump", " ", "is", " ", "the", " ", 
       RowBox[{"pump", "'"}], "s", " ", "second", " ", "element"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"flowRate", " ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"path", ",", " ", "\"\<start\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "the", " ", "flowRate"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}], " ", "=", " ", "flowRate"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7642650204403353`*^9, 3.764265232726187*^9}, {
   3.764265284196475*^9, 3.764265284263005*^9}, {3.76426538099018*^9, 
   3.7642653919000874`*^9}, 3.764265742078642*^9, {3.7643578029262247`*^9, 
   3.7643578252259054`*^9}, {3.764599372798296*^9, 3.7645993810915756`*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"e0804fe8-34ff-429d-93e4-ea27e2351661"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Retrieves", " ", "the", " ", "flowRate", " ", "based", " ", "on", " ", 
    "gravity", " ", "and", " ", "starting", " ", "pipe", " ", "diameter", " ",
     "and", " ", "sets", " ", "the", " ", 
    RowBox[{"seq", "'"}], "s", " ", "flowRate", " ", "attribute"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setOriginFRGrav", "[", "originPath_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "originPath"}], ",", 
       "\[IndentingNewLine]", "startingPipeD", ",", "\[IndentingNewLine]", 
       "height", ",", "\[IndentingNewLine]", "waterVelocity", ",", 
       "\[IndentingNewLine]", "flowRate"}], "}"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "retrieves", " ", "the", " ", "pipe", " ", "diameter", " ", "and", " ", 
       "height", " ", "from", " ", "the", " ", "pipe", " ", "in", " ", "the", 
       " ", "origin", " ", "seq"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"startingPipeD", " ", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"path", ",", " ", "\"\<parts\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "retrieves", " ", "the", " ", "height", " ", "of", " ", "the", " ", 
         "input", " ", "reservoir"}], ",", " ", 
        RowBox[{
        "located", " ", "at", " ", "index", " ", "1", " ", "of", " ", "the", 
         " ", "start", " ", "link", " ", "and", " ", "index", " ", "2", " ", 
         "in", " ", "the", " ", "inputR", " ", "list"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"height", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"path", ",", " ", "\"\<start\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "calculation", " ", "for", " ", "velocity", " ", "of", " ", "water", 
        " ", "exiting", " ", "the", " ", "reservoir", " ", "through", " ", 
        "a", " ", "pipe"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"waterVelocity", " ", "=", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", 
         RowBox[{"globalConstants", "[", "\"\<gravity\>\"", "]"}], "*", 
         "height"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"flowRate", " ", "=", " ", 
       RowBox[{"waterVelocity", " ", "*", " ", 
        RowBox[{"calcCrossArea", "[", "startingPipeD", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "the", " ", "flowRate"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}], " ", "=", " ", "flowRate"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764265138531623*^9, 3.764265153298813*^9}, {
  3.764265493270052*^9, 3.7642657400846825`*^9}, {3.7643578332148113`*^9, 
  3.7643578400016994`*^9}, {3.7645993475307584`*^9, 3.764599370872987*^9}, {
  3.7646141398152514`*^9, 3.7646142849741726`*^9}, {3.7646145639581537`*^9, 
  3.764614572393828*^9}, {3.7646147298801384`*^9, 3.7646148203738*^9}, {
  3.7660831604044414`*^9, 3.7660831844754*^9}, {3.7660858713245115`*^9, 
  3.7660858714409204`*^9}},
 CellLabel->
  "In[621]:=",ExpressionUUID->"5b88818b-c6ae-40f1-aad2-daa833087662"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "the", " ", "flowRate", " ", "for", " ", "a", " ", "given", 
    " ", "seq", " ", "based", " ", "on", " ", "the", " ", "merge", " ", 
    "that", " ", "came", " ", "before"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setFRmerLeadIn", "[", "seqKey_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "seqKey"}], ",", "\[IndentingNewLine]", 
       "mergeKey", ",", "\[IndentingNewLine]", "prevKeys", ",", 
       "\[IndentingNewLine]", "prevFR", ",", "\[IndentingNewLine]", 
       "flowRates"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"retrieving", "-", " ", 
       RowBox[{
       "get", " ", "the", " ", "merge", " ", "it", " ", "came", " ", "from", 
        " ", "and", " ", "then", " ", "get", " ", "that", " ", 
        RowBox[{"merges", "'"}], " ", "startKeys", " ", 
        RowBox[{"(", 
         RowBox[{
         "the", " ", "branches", " ", "that", " ", "lead", " ", "in", " ", 
          "to", " ", "it"}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mergeKey", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"prevKeys", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"mergeKey", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculating", " ", "and", " ", "setting"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"flowRates", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{
          "key", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"key", ",", " ", "prevKeys"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}], " ", "=", " ", 
       RowBox[{"Total", "@", "flowRates"}]}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7642721392229724`*^9, 3.764272142093096*^9}, {
  3.7642723085619583`*^9, 3.7642724179911036`*^9}, {3.764272547359817*^9, 
  3.7642725804469585`*^9}, {3.7642726483461566`*^9, 3.764272648611891*^9}, {
  3.7642727098966036`*^9, 3.764272733824277*^9}, {3.7642727680263386`*^9, 
  3.7642727895622454`*^9}, {3.764273244628516*^9, 3.764273262058307*^9}, {
  3.764273480834403*^9, 3.7642735195222282`*^9}, {3.7642735519944334`*^9, 
  3.7642735905737915`*^9}, {3.7642736474814434`*^9, 3.764273674733218*^9}, {
  3.764275916194912*^9, 3.764275922396783*^9}, {3.7643568507345057`*^9, 
  3.7643569055028267`*^9}, {3.7646155393776855`*^9, 3.764615539529454*^9}, {
  3.7646159265495515`*^9, 3.7646159292042*^9}},
 CellLabel->
  "In[622]:=",ExpressionUUID->"bbb556f5-afda-41cf-b02d-c529748a85e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "the", " ", "flowRate", " ", "for", " ", "a", " ", "given", 
    " ", "seq", " ", "based", " ", "on", " ", "the", " ", "seq", " ", "that", 
    " ", "came", " ", "before"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setFRseqLeadIn", "[", "seqKey_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "seqKey"}], ",", "\[IndentingNewLine]", 
       "prevKey", ",", "\[IndentingNewLine]", "prevFR"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "retrieving", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prevKey", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"prevFR", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "prevKey", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "setting", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}], " ", "=", " ", "prevFR"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7642723639603124`*^9, 3.7642724241323204`*^9}, {
   3.764272583140764*^9, 3.7642725981338425`*^9}, {3.7642726458107834`*^9, 
   3.7642726460796924`*^9}, {3.7642727194715195`*^9, 3.7642727207689095`*^9}, 
   3.764272804471155*^9, {3.76427284224399*^9, 3.7642729125228677`*^9}, {
   3.7646153913601365`*^9, 3.7646154564941864`*^9}, {3.764615502844761*^9, 
   3.764615521202536*^9}, {3.7646158343231096`*^9, 3.7646158961278033`*^9}, {
   3.7646163415273857`*^9, 3.7646163432397614`*^9}, {3.764616795002494*^9, 
   3.7646167955750756`*^9}, 3.7647987282815657`*^9},
 CellLabel->
  "In[623]:=",ExpressionUUID->"b75eb24c-ef66-4967-94e2-0a0b0bca36e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "the", " ", "flowRate", " ", "for", " ", "a", " ", 
    RowBox[{"split", "'"}], "s", " ", "sequences", " ", "based", " ", "on", 
    " ", "the", " ", "flowRate", " ", "of", " ", "the", " ", "prev", " ", 
    "seq"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setFRspl", "[", "splKey_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "splKey"}], ",", "\[IndentingNewLine]", 
       "prevSeq", ",", "\[IndentingNewLine]", "prevFR", ",", 
       "\[IndentingNewLine]", "avgDiameters", ",", "\[IndentingNewLine]", 
       "branchKeys", ",", "\[IndentingNewLine]", "partialFlows", ",", 
       "\[IndentingNewLine]", "seq", ",", "\[IndentingNewLine]", 
       "currentFlow", ",", "\[IndentingNewLine]", "currentBranch"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "retrieving", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prevSeq", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"prevFR", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "prevSeq", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"branchKeys", " ", "=", " ", 
       RowBox[{"Flatten", "@", 
        RowBox[{"masterPathList", "[", 
         RowBox[{"path", ",", " ", "\"\<branches\>\""}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"avgDiameters", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{
          "branch", ",", " ", "\"\<attr\>\"", ",", " ", 
           "\"\<avgDiameter\>\""}], "]"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"branch", ",", " ", "branchKeys"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculating", " ", "and", " ", "setting"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"partialFlows", " ", "=", 
       RowBox[{"calcPartialFlowRates", "[", 
        RowBox[{"prevFR", ",", " ", "avgDiameters"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "the", " ", 
        RowBox[{"seq", "'"}], "s", " ", "new", " ", "flow", " ", "rate"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"seq", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"seq", " ", "\[LessEqual]", "  ", 
         RowBox[{"Length", "@", "partialFlows"}]}], ",", " ", 
        RowBox[{"seq", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"currentBranch", " ", "=", " ", 
          RowBox[{"branchKeys", "[", 
           RowBox[{"[", "seq", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"currentFlow", " ", "=", " ", 
          RowBox[{"partialFlows", "[", 
           RowBox[{"[", "seq", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "currentBranch", ",", " ", "\"\<attr\>\"", ",", " ", 
            "\"\<flowRate\>\""}], "]"}], " ", "=", " ", "currentFlow"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7642723703594637`*^9, 3.764272429708435*^9}, {
   3.764272599896431*^9, 3.764272612399437*^9}, {3.764272650602987*^9, 
   3.7642726596443467`*^9}, {3.764272722425644*^9, 3.7642727238680754`*^9}, 
   3.7642737895918665`*^9, {3.7642744210231943`*^9, 3.7642744540342817`*^9}, {
   3.764275508703302*^9, 3.7642755753478146`*^9}, {3.7642756168083878`*^9, 
   3.7642758049223633`*^9}, {3.764275870525454*^9, 3.7642759052870007`*^9}, {
   3.7642760342580643`*^9, 3.7642762276271276`*^9}, {3.7643555202710066`*^9, 
   3.7643555204865227`*^9}, {3.764357167023649*^9, 3.764357176943307*^9}, 
   3.764357229229492*^9, {3.764615608348213*^9, 3.7646156333480787`*^9}, 
   3.764615676151871*^9},
 CellLabel->
  "In[624]:=",ExpressionUUID->"a9b56e85-2c90-43f4-bd62-acc582a9f332"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"checks", " ", "a", " ", 
    RowBox[{"sequence", "'"}], "s", " ", "parts", " ", "for", " ", "closed", 
    " ", 
    RowBox[{"gates", "/", 
     RowBox[{"valves", ".", " ", "The"}]}], " ", "function", " ", "will", " ",
     "return", " ", "true", " ", "if", " ", "there", " ", "is", " ", "a", " ",
     "closing"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"closedGatesValves", "[", "seqKey_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "seqKey"}], ",", "\[IndentingNewLine]", 
       "partsList", ",", "\[IndentingNewLine]", 
       RowBox[{"closing", " ", "=", " ", "False"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"partsList", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<parts\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"loop", " ", "through", " ", "each", " ", "part"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"check", " ", "the", " ", 
         RowBox[{"part", "'"}], "s", " ", "diameter", " ", "value"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"QuantityMagnitude", "[", 
             RowBox[{"part", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "==", " ", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"closing", " ", "=", " ", "True"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"part", ",", " ", "partsList"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "closing", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764615117032277*^9, 3.764615257895624*^9}, {
  3.7646153129393673`*^9, 3.764615351693963*^9}, {3.7646165844101067`*^9, 
  3.764616626461072*^9}, {3.764616728497029*^9, 3.7646167380097694`*^9}, {
  3.7647731596108413`*^9, 3.7647731940525455`*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"023778c0-327c-4b88-97d3-884d386f3637"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing - Updates for avgDia/velocity and return function for diff pressure\
\>", "Subsection",
 CellChangeTimes->{{3.764499530663436*^9, 3.764499573033671*^9}, {
  3.7645947576454167`*^9, 3.7645947743848457`*^9}, {3.765143979255125*^9, 
  3.7651439798175*^9}},ExpressionUUID->"824bac71-d392-4a07-b3ea-fa6980fca50a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Looks", " ", "at", " ", "a", " ", 
    RowBox[{"seq", "'"}], "s", " ", "partsList", " ", "to", " ", "determine", 
    " ", "the", " ", "average", " ", "diameter"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"updateAvgDiameter", "[", "seqKey_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "seqKey"}], ",", "\[IndentingNewLine]", 
       "partsList", ",", "\[IndentingNewLine]", "avgDiameter", ",", 
       "\[IndentingNewLine]", "diameters", ",", "\[IndentingNewLine]", 
       "diameter"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"check", " ", "for", " ", 
       RowBox[{"gate", "/", "valve"}], " ", "closings"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"closedGatesValves", "[", "path", "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "path", ",", " ", "\"\<attr\>\"", ",", " ", 
            "\"\<avgDiameter\>\""}], "]"}], " ", "=", " ", "0"}], ";", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"retrieve", " ", "the", " ", "parts"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"partsList", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<parts\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "get", " ", "diameters", " ", "for", " ", "the", " ", "parts"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"diameters", " ", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"diameter", " ", "=", " ", 
          RowBox[{"part", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], " ", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"part", ",", " ", "partsList"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "update", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<avgDiameter\>\""}], 
        "]"}], " ", "=", " ", 
       RowBox[{"Mean", "[", "diameters", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7644995766269016`*^9, 3.764499677317249*^9}, {
   3.764499745449994*^9, 3.7644998236102667`*^9}, {3.764499899600343*^9, 
   3.764500060398718*^9}, {3.764500112121519*^9, 3.76450016576289*^9}, {
   3.764500236533264*^9, 3.764500335685465*^9}, 3.764500387990757*^9, {
   3.7645004928606424`*^9, 3.764500530377493*^9}, {3.764500580740176*^9, 
   3.764500608990053*^9}, {3.764501195995984*^9, 3.7645011980882187`*^9}, {
   3.7646157335303993`*^9, 3.764615758360684*^9}, {3.764616492925129*^9, 
   3.764616535594227*^9}, {3.76461667823221*^9, 3.764616707150297*^9}},
 CellLabel->
  "In[626]:=",ExpressionUUID->"42973efc-eb04-4e50-be33-438430346904"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Uses", " ", "the", " ", 
    RowBox[{"seq", "'"}], "s", " ", "flowRate", " ", "and", " ", "the", " ", 
    "avg", " ", "Diameter", " ", "to", " ", "update", " ", "the", " ", "avg", 
    " ", "velocity", " ", "through", " ", "the", " ", "sequence"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"updateAvgVelocity", "[", "seqKey_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "seqKey"}], ",", "\[IndentingNewLine]", 
       "flowRate", ",", "\[IndentingNewLine]", "avgDiameter", ",", 
       "\[IndentingNewLine]", "crossArea", ",", "\[IndentingNewLine]", 
       "velocity"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "retrieving", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"flowRate", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"avgDiameter", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<avgDiameter\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"crossArea", " ", "=", " ", 
       RowBox[{"calcCrossArea", "[", "avgDiameter", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Handles", " ", "the", " ", "division", " ", "by", " ", "0", " ", 
        "error"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avgDiameter", "===", " ", "0"}], " ", "||", " ", 
         RowBox[{"flowRate", "===", " ", "0"}]}], ",", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"(*", " ", "true", " ", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"velocity", " ", "=", " ", "0"}], ",", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"(*", " ", "false", " ", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"velocity", " ", "=", " ", 
          RowBox[{"flowRate", "/", "crossArea"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "update", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<avgVelocity\>\""}], 
        "]"}], " ", "=", " ", "velocity"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764501323531293*^9, 3.764501366726365*^9}, {
  3.7645014572136126`*^9, 3.7645015538229485`*^9}, {3.764501598618245*^9, 
  3.764501661526424*^9}, {3.7646170887229133`*^9, 3.7646171334752283`*^9}, {
  3.7646171837771626`*^9, 3.764617239257655*^9}, {3.7646172823917007`*^9, 
  3.7646172850770445`*^9}, {3.7646240030081472`*^9, 3.7646240480218115`*^9}, {
  3.7646240881322794`*^9, 3.76462412420794*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"69ca5f1c-18c2-4463-a19a-4ddf7ca1f51f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "finds", " ", "the", " ", "differential", " ", "pressure", " ", "between", 
    " ", "two", " ", "sequences", " ", "in", " ", "the", " ", "system"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"findDiffPress", "[", 
     RowBox[{"densityLiq_", ",", " ", "seq1_", ",", " ", "seq2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"path1", " ", "=", " ", "seq1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"path2", " ", "=", " ", "seq2"}], ",", "\[IndentingNewLine]", 
        "vel1", ",", "\[IndentingNewLine]", "vel2", ",", 
        "\[IndentingNewLine]", "h1", ",", "\[IndentingNewLine]", "h2", ",", 
        "\[IndentingNewLine]", "diffPress"}], "\[IndentingNewLine]", "}"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"retrieve", " ", "velocities", " ", "and", " ", "heights"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vel1", " ", "=", " ", 
        RowBox[{"masterPathList", "[", 
         RowBox[{
         "path1", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<avgVelocity\>\""}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vel2", " ", "=", " ", 
        RowBox[{"masterPathList", "[", 
         RowBox[{
         "path2", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<avgVelocity\>\""}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h1", " ", "=", " ", 
        RowBox[{"masterPathList", "[", 
         RowBox[{
         "path1", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h2", " ", "=", " ", 
        RowBox[{"masterPathList", "[", 
         RowBox[{
         "path2", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"return", " ", "the", " ", "differential", " ", "pressure"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"diffPress", " ", "=", 
        RowBox[{"calcDiffPress", "[", 
         RowBox[{
         "densityLiq", ",", " ", "vel1", ",", " ", "vel2", ",", " ", "h1", 
          ",", " ", "h2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "diffPress", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764594779053815*^9, 3.7645949844139843`*^9}, {
  3.7645977456953115`*^9, 3.7645977491870294`*^9}, {3.7645993031833096`*^9, 
  3.76459932671229*^9}, {3.7647688272659655`*^9, 3.7647688776594324`*^9}, {
  3.7647691883684635`*^9, 3.764769188791035*^9}},
 CellLabel->
  "In[628]:=",ExpressionUUID->"83627e50-707a-46de-811a-32beeffd7bc3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Processing- Water Transfer using inf reservoirs and inf pump", \
"Subsection",
 CellChangeTimes->{{3.7647655193116198`*^9, 3.764765524627117*^9}, {
  3.7647713849272366`*^9, 3.764771387336378*^9}, {3.765130852282241*^9, 
  3.765130857751958*^9}, {3.7651439820847225`*^9, 
  3.7651439826939125`*^9}},ExpressionUUID->"9d1c49a8-3c91-45e7-9d88-\
32c1f9365a17"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "fills", " ", "the", " ", "outputs", " ", "in", " ", "the", " ", "system", 
    " ", "using", " ", "fillUnOutput", " ", "as", " ", "a", " ", "helper"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fillUnOutputs", "[", "seconds_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "endVal", "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"if", " ", 
        RowBox[{"it", "'"}], "s", " ", "a", " ", "sequence", " ", "with", " ",
         "an", " ", "unbounded", " ", "output", " ", "reservoir"}], ",", " ", 
       RowBox[{
       "fill", " ", "it", " ", "for", " ", "the", " ", "given", " ", 
        "time"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"endVal", "=", 
          RowBox[{"masterPathList", "[", 
           RowBox[{"key", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "endVal", "]"}], ",", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"fillUnOutput", "[", 
             RowBox[{"key", ",", " ", "seconds"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"key", ",", " ", 
          RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7654831219497375`*^9, 3.7654832687189126`*^9}, {
   3.765483312862897*^9, 3.7654833384051437`*^9}, 3.765816793011808*^9},
 CellLabel->
  "In[629]:=",ExpressionUUID->"d4fab6dc-df49-4001-ad3b-176d1c45d1ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "fills", " ", "an", " ", "output", " ", "on", " ", "a", " ", "given", " ", 
    "sequence", " ", "based", " ", "on", " ", "the", " ", "amount", " ", "of",
     " ", "water", " ", "coming", " ", "in", " ", "and", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fillUnOutput", "[", 
    RowBox[{"seqKey_", ",", " ", "seconds_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "seqKey"}], ",", "\[IndentingNewLine]", 
       "flowOut", ",", "\[IndentingNewLine]", "outputR", ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"output", " ", "reservoir"}], " ", "*)"}], 
       "\[IndentingNewLine]", "currentVol", ",", "\[IndentingNewLine]", 
       "addedAmount"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "retrieving", " ", "the", " ", "flow", " ", "into", " ", "the", " ", 
       "output", " ", "and", " ", "information", " ", "for", " ", "the", " ", 
       "output", " ", "reservoir"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"flowOut", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputR", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"currentVol", " ", "=", " ", 
       RowBox[{"outputR", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"addedAmount", " ", "=", " ", 
       RowBox[{"seconds", "*", "flowOut"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Dealing", " ", "with", " ", "case", " ", "where", " ", "flowOut", " ",
         "is", " ", "0", " ", "and", " ", "unit", " ", "conflict", " ", 
        "happens"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"flowOut", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"addedAmount", " ", "=", "0"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<end\>\""}], "]"}], " ", "=", " ", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"path", ",", " ", "\"\<end\>\""}], "]"}], ",", 
         RowBox[{"4", "\[Rule]", " ", 
          RowBox[{"(", 
           RowBox[{"currentVol", " ", "+", " ", "addedAmount"}], ")"}]}]}], 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.764771027196146*^9, 3.76477108367424*^9}, {
  3.7647715251327243`*^9, 3.764771624144252*^9}, {3.764771780015842*^9, 
  3.7647718102314296`*^9}, {3.764771852415372*^9, 3.764771883603631*^9}, {
  3.764771919157834*^9, 3.7647720175858974`*^9}, {3.7647724138619366`*^9, 
  3.7647724203604727`*^9}, {3.7647728261719685`*^9, 3.764772890603955*^9}, {
  3.764773254894229*^9, 3.7647732597919636`*^9}, {3.7647733407233334`*^9, 
  3.76477338474541*^9}, {3.7651461263823767`*^9, 3.765146126538329*^9}, {
  3.7654957985113287`*^9, 3.765495798574527*^9}, {3.765495925194481*^9, 
  3.7654959262171097`*^9}},
 CellLabel->
  "In[630]:=",ExpressionUUID->"c2754904-da0e-45eb-928b-0f56a246084a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Processing- Gen Pumps", "Subsection",
 CellChangeTimes->{{3.765130840248776*^9, 3.765130845435129*^9}, {
  3.765143984880992*^9, 3.7651439854899654`*^9}, {3.765146103952652*^9, 
  3.765146106488633*^9}, {3.7651493952223167`*^9, 
  3.7651493955191393`*^9}},ExpressionUUID->"b56dc7cf-61db-4484-9828-\
98842ab6148d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Go", " ", "through", " ", "the", " ", "structure", " ", "to", " ", 
    "determine", " ", "the", " ", "required", " ", "head", " ", "value", " ", 
    "to", " ", "be", " ", "able", " ", "to", " ", "pump", " ", "water", " ", 
    "throughout", " ", "the", " ", "network"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "uses", " ", "the", " ", "findMaxHeight", " ", "and", " ", 
    "findMaxRHeadVal", " ", "helper", " ", "functions", " ", "to", " ", 
    "determine", " ", "what", " ", "the", " ", "required", " ", "head", " ", 
    "value", " ", "is", " ", "for", " ", "a", " ", "pump"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"findHeadVal", "[", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"findMaxHeight", "[", "]"}], ",", " ", 
        RowBox[{"findMaxRHeadVal", "[", "]"}]}], "}"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76548225044139*^9, 3.765482434694909*^9}},
 CellLabel->
  "In[631]:=",ExpressionUUID->"6b444968-092a-484d-83ca-c97037d71510"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "uses", " ", "the", " ", "height", " ", "of", " ", "each", 
    " ", "sequence", " ", "to", " ", "determine", " ", "head", " ", 
    RowBox[{"value", ".", " ", "Another"}], " ", "approach", " ", "must", " ",
     "be", " ", "used", " ", "in", " ", "addition", " ", "to", " ", "factor", 
    " ", "in", " ", "output", " ", "reservoirs"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findMaxHeight", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"originHeight", " ", "=", " ", 
        RowBox[{"masterPathList", "[", 
         RowBox[{
         "\"\<seq1\>\"", ",", " ", "\"\<attr\>\"", ",", " ", 
          "\"\<height\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
       "heights"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "build", " ", "list", " ", "of", " ", "all", " ", "differences", " ", 
       "in", " ", "height", " ", "from", " ", "the", " ", "inputR", " ", "to",
        " ", "each", " ", "sequence"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"heights", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "key", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}], 
           "]"}], " ", "-", " ", "originHeight"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"key", ",", " ", 
           RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "filter", " ", "the", " ", "results", " ", "from", " ", "splits", " ",
          "and", " ", "merges"}], " ", "-", 
        RowBox[{"they", " ", 
         RowBox[{"don", "'"}], "t", " ", "have", " ", "a", " ", "height"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"heights", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"heights", ",", " ", 
         RowBox[{
          RowBox[{"QuantityQ", "[", "#", "]"}], " ", "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"return", " ", "max", " ", "height", " ", "difference"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Max", "[", "heights", "]"}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765145567266097*^9, 3.7651458446453004`*^9}, {
   3.7651458991986675`*^9, 3.7651459711312895`*^9}, {3.7651460162525487`*^9, 
   3.765146043430928*^9}, {3.7651507476531816`*^9, 3.765150779391094*^9}, {
   3.76515081105367*^9, 3.765150822400013*^9}, 3.765150893425542*^9, {
   3.765150929744172*^9, 3.7651509539026337`*^9}, {3.765150992841149*^9, 
   3.7651511685303845`*^9}, {3.7651512207728333`*^9, 3.765151223569089*^9}, {
   3.7654823155113106`*^9, 3.7654823403213005`*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"2b86fbbc-01f4-478d-903f-1a1dd1eca77e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Uses", " ", "pressure", " ", "exerted", " ", "on", " ", "reservoirs", " ",
     "in", " ", "addition", " ", "to", " ", "height", " ", "to", " ", 
    "determine", " ", "the", " ", "head", " ", "value", " ", "a", " ", "pump",
     " ", "would", " ", "need"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findMaxRHeadVal", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "endVal", ",", "\[IndentingNewLine]", "originR", ",", 
       "\[IndentingNewLine]", "densityUpperFluO", ",", "ceilingDisO", ",", 
       "gaugePressureO", ",", "heightO", ",", 
       RowBox[{"(*", " ", 
        RowBox[{"calculation", " ", "variables"}], " ", "*)"}], 
       "\[IndentingNewLine]", "densityLiq", ",", "\[IndentingNewLine]", 
       "pressureOriginR", ",", "\[IndentingNewLine]", 
       RowBox[{"headVals", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "pressureB", ",", 
       "densityUpperFluB", ",", " ", "ceilingDisB", ",", " ", 
       "guagePressureB", ",", "heightB", ",", " ", "gaugePressureB", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"calculation", " ", "variables"}], " ", "*)"}], ","}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "calc", " ", "pressure", " ", "on", " ", "origin", " ", "reservoir", 
       " ", "free", " ", "surface"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"originR", " ", "=", " ", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"\"\<seq1\>\"", ",", " ", "\"\<start\>\""}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"densityUpperFluO", "=", 
       RowBox[{"originR", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ceilingDisO", "=", 
       RowBox[{"originR", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gaugePressureO", "=", 
       RowBox[{"originR", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pressureOriginR", " ", "=", " ", 
       RowBox[{"calcPressureReservoir", "[", 
        RowBox[{
        "densityUpperFluO", ",", "ceilingDisO", ",", "gaugePressureO"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "retrieve", " ", "other", " ", "values", " ", "needed", " ", "for", 
        " ", "calculating", " ", "the", " ", "head", " ", "value", " ", 
        "between", " ", "the", " ", "input", " ", "and", " ", "each", " ", 
        "output", " ", "reservoir"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"heightO", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "\"\<seq1\>\"", ",", " ", "\"\<attr\>\"", ",", " ", 
         "\"\<height\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"densityLiq", " ", "=", 
       RowBox[{
        RowBox[{"masterPathList", "[", 
         RowBox[{"\"\<seq1\>\"", ",", " ", "\"\<start\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "7"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"build", " ", "list", " ", "of", " ", "head", " ", "values"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"headVals", " ", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"endVal", " ", "=", " ", 
           RowBox[{"masterPathList", "[", 
            RowBox[{"key", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"if", " ", 
            RowBox[{"it", "'"}], "s", " ", "a", " ", "seq", " ", "with", " ", 
            "an", " ", "output", " ", "reservoir"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "[", "endVal", "]"}], ",", "\[IndentingNewLine]",
             "\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "retrieve", " ", "values", " ", "for", " ", "calculating", " ", 
              "pressure", " ", "on", " ", "reservoirB"}], " ", "*)"}], 
            "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{"densityUpperFluB", " ", "=", " ", 
              RowBox[{"endVal", "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\t", 
             RowBox[{"ceilingDisB", " ", "=", " ", 
              RowBox[{"endVal", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\t", 
             RowBox[{"gaugePressureB", " ", "=", " ", 
              RowBox[{"endVal", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\t", "\[IndentingNewLine]", "\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"calculate", " ", "pressure", " ", "on", " ", "B"}], 
               ",", " ", 
               RowBox[{"retrieve", " ", "its", " ", "height"}], ",", " ", 
               RowBox[{
               "and", " ", "then", " ", "use", " ", "the", " ", "data", " ", 
                "from", " ", "the", " ", "origin", " ", "reservoir", " ", 
                "along", " ", "with", " ", "the", " ", "data", " ", "for", 
                " ", "the", " ", "given", " ", "output", " ", "reservoir", 
                " ", "to", " ", "calculate", " ", "the", " ", "required", " ",
                 "head", " ", "value", " ", "for", " ", "a", " ", "pump"}]}], 
              " ", "*)"}], "\[IndentingNewLine]", "\t", 
             RowBox[{"pressureB", " ", "=", " ", 
              RowBox[{"calcPressureReservoir", "[", 
               RowBox[{
               "densityUpperFluB", ",", " ", "ceilingDisB", ",", " ", 
                "gaugePressureB"}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
             RowBox[{"heightB", " ", "=", " ", 
              RowBox[{"masterPathList", "[", 
               RowBox[{
               "key", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}], 
               "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\t", 
             RowBox[{"calcPumpHead", "[", 
              RowBox[{
              "pressureOriginR", ",", " ", "heightO", ",", " ", "pressureB", 
               ",", " ", "heightB", ",", " ", "densityLiq"}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"key", ",", " ", 
           RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "filter", " ", "the", " ", "null", " ", "results", " ", "out"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"headVals", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"headVals", ",", " ", 
         RowBox[{
          RowBox[{"QuantityQ", "[", "#", "]"}], " ", "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Max", "[", "headVals", "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIw7XLJvIj3jWPYk122IHr69xfVINo9fXoXmG69PAlE
vxH5MxlEv0v/dhFEi3TfvgqiJVKe3QbRMc1r74HoFkH7lyDa7Pe+zyD6Uska
zmIgzcfrwwOiYwzCPUD087W1YLqEYWkZiFZ74DAVRF8UuTATRK+aKHwIRL/Q
Dz4Goj/MnHQcREc9Tr0KoiVesV0D0TV1RUdLgDTT380Q+qXxaRCdw2p3DkTv
SdwtJ8r3xjHj2y8TEH1HO90eRM+5/sIFRN9wv+0BotOaQ/xA9LIHcWEgesJP
tUIQXXJz/UoQzd95Ckzz9c+UFgPSSVsWg2mOc/O0QbTDhFpdEM191s8GRO+T
b3AB0XaGhcEg+kLg/FgQHbHR6BFYX2HxExANANzdrA0=
  "],
 CellLabel->
  "In[633]:=",ExpressionUUID->"151950d9-f6bf-415b-8b50-3cdea288c263"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing- Generalized water transfer", "Subsection",
 CellChangeTimes->{{3.765146108612983*^9, 
  3.765146118085433*^9}},ExpressionUUID->"1473b6ac-091b-435d-a56e-\
dc3abdc76cf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "returns", " ", "true", " ", "if", " ", "water", " ", "can", " ", "be", 
     " ", "distributed"}], ",", " ", 
    RowBox[{"false", " ", "if", " ", "it", " ", 
     RowBox[{"can", "'"}], "t"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "water", " ", "can", " ", "be", " ", "distributed", " ", "if", " ", "the", 
    " ", 
    RowBox[{"pump", "'"}], "s", " ", "head", " ", "value", " ", 
    RowBox[{"(", 
     RowBox[{"capacity", " ", "to", " ", "do", " ", "work"}], ")"}], " ", 
    "is", " ", "appropriate", " ", "for", " ", "the", " ", "constructed", " ",
     "network"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"if", " ", "no", " ", "pump", " ", "is", " ", "present"}], ",", 
    " ", 
    RowBox[{
    "head", " ", "value", " ", "requirement", " ", "must", " ", "be", " ", 
     "0", " ", "or", " ", "less"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"headValCheck", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "neededHV", ",", " ", "\[IndentingNewLine]", "pumpHV", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"hasPump", " ", "=", " ", 
        RowBox[{"containsPump", "[", "\"\<seq1\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"passed", " ", "=", " ", "False"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"neededHV", " ", "=", 
       RowBox[{"findHeadVal", "[", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"finds", " ", "required", " ", "headVal"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"hasPump", ",", "\t", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"pumpHV", " ", "=", " ", 
          RowBox[{
           RowBox[{"masterPathList", "[", 
            RowBox[{"\"\<seq1\>\"", ",", " ", "\"\<start\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "4"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"retrieve", " ", 
           RowBox[{"pump", "'"}], "s", " ", "actual", " ", "head", " ", 
           "value"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
         RowBox[{"passed", " ", "=", " ", 
          RowBox[{"pumpHV", " ", "\[GreaterEqual]", " ", "neededHV"}]}]}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"no", " ", "pump", " ", "present"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"passed", " ", "=", " ", 
          RowBox[{"neededHV", " ", "\[LessEqual]", " ", 
           RowBox[{"Quantity", "[", 
            RowBox[{"0", ",", "\"\<Meters\>\""}], "]"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"compares", " ", "head", " ", 
         RowBox[{"values", ".", " ", "The"}], " ", "actual", " ", "must", " ",
          "be", " ", "equal", " ", "to", " ", "or", " ", "bigger", " ", 
         "than", " ", "what", " ", "we", " ", 
         RowBox[{"need", ".", " ", "If"}], " ", "a", " ", "pump", " ", 
         RowBox[{"isn", "'"}], "t", " ", "present"}], ",", " ", 
        RowBox[{
         RowBox[{"the", " ", "required", " ", "must", " ", "be"}], " ", 
         "\[LessEqual]", " ", "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "passed", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7658162784109373`*^9, 3.7658163921261024`*^9}, {
  3.7658164312150087`*^9, 3.7658165539000874`*^9}, {3.766084277624941*^9, 
  3.766084403188178*^9}, {3.766085041305826*^9, 3.7660850471290636`*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"323ea9d7-de1a-4e15-a09b-a60737e8f45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "fills", " ", "an", " ", "output", " ", "on", " ", "a", " ", "given", " ", 
    "sequence", " ", "based", " ", "on", " ", "the", " ", "amount", " ", "of",
     " ", "water", " ", "coming", " ", "in", " ", "and", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"also", " ", "factors", " ", "in", " ", "the", " ", 
    RowBox[{"pump", "'"}], "s", " ", "head", " ", "value", " ", "to", " ", 
    "determine", " ", "if", " ", "the", " ", "water", " ", "can", " ", "be", 
    " ", "distributed"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fillGenOutput", "[", 
    RowBox[{"seqKey_", ",", " ", "seconds_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", "seqKey"}], ",", "\[IndentingNewLine]", 
       "pumpData", ",", "\[IndentingNewLine]", "outputR", ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"output", " ", "reservoir"}], " ", "*)"}], 
       "\[IndentingNewLine]", "flowOut", ",", "\[IndentingNewLine]", 
       "currentVol", ",", "\[IndentingNewLine]", "maxVol", ",", 
       "\[IndentingNewLine]", "addedAmount", ",", "\[IndentingNewLine]", 
       "newVol"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "retrieving", " ", "the", " ", "flow", " ", "into", " ", "the", " ", 
       "output", " ", "and", " ", "information", " ", "for", " ", "the", " ", 
       "output", " ", "reservoir"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"flowOut", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{
        "path", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputR", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"currentVol", " ", "=", " ", 
       RowBox[{"outputR", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxVol", " ", "=", " ", 
       RowBox[{"outputR", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"addedAmount", " ", "=", " ", 
       RowBox[{"seconds", "*", "flowOut"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"can", "'"}], "t", " ", "fill", " ", "up", " ", "beyond", " ",
         "the", " ", "max", " ", "volume"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"currentVol", " ", "+", " ", "addedAmount"}], " ", ">", " ", 
         "maxVol"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", "true", " ", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"newVol", " ", "=", " ", "maxVol"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", "false", " ", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"newVol", " ", "=", " ", 
         RowBox[{"currentVol", " ", "+", "addedAmount"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Dealing", " ", "with", " ", "case", " ", "where", " ", "flowOut", " ",
         "is", " ", "0", " ", "and", " ", "unit", " ", "conflict", " ", 
        "happens"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"flowOut", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"addedAmount", " ", "=", "0"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "assuming", " ", "pump", " ", "is", " ", "powerful", " ", "enough"}], 
        ",", " ", 
        RowBox[{"move", " ", "water"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"path", ",", " ", "\"\<end\>\""}], "]"}], " ", "=", " ", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"masterPathList", "[", 
          RowBox[{"path", ",", " ", "\"\<end\>\""}], "]"}], ",", 
         RowBox[{"5", "\[Rule]", " ", 
          RowBox[{"(", "newVol", ")"}]}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfcUtTWo3zxvHhMmliiDa3X5JBIjeNpclFUQfb2yo
ANH3091rQPQur95GEP0poLgVRP/iedoJotfsN5oGov9M2X0cRP/r6D4Boo80
uP4G0TODg5n3AOm2uXcMQPSR8EpDEN2jOt0aRKfdEncE0Xk2ZxyLeIH6LS+C
6XMxF/7J8AH1JV0C0waWy/hkgfSET8fAtKP+Lp2dQHpF5HkDEB2SzGIKojd9
7DUD0Z5fHVJAtFODVhGI7s8qKAfRF/+rVYHofVWtS0G01PsPq0B0wbcvG0G0
iG/WJhAd777VZReQ/lET7AqiA3fmBoHo2hmFYBoAObydfg==
  "],
 CellLabel->
  "In[635]:=",ExpressionUUID->"dbbf1502-5030-4143-a411-13a8fa78aba6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "fills", " ", "the", " ", "gen", " ", "outputs", " ", "in", " ", "the", 
    " ", "system", " ", "using", " ", "fillGenOutput", " ", "as", " ", "a", 
    " ", "helper"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fillGenOutputs", "[", "seconds_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "endVal", "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"if", " ", 
        RowBox[{"it", "'"}], "s", " ", "a", " ", "sequence", " ", "with", " ",
         "a", " ", "generalized", " ", "output", " ", "reservoir"}], ",", " ", 
       RowBox[{
       "fill", " ", "it", " ", "for", " ", "the", " ", "given", " ", 
        "time"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"endVal", "=", 
          RowBox[{"masterPathList", "[", 
           RowBox[{"key", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "endVal", "]"}], ",", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"fillGenOutput", "[", 
             RowBox[{"key", ",", " ", "seconds"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"key", ",", " ", 
          RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7658168163692303`*^9, 3.7658168594457054`*^9}},
 CellLabel->
  "In[636]:=",ExpressionUUID->"fc94485c-5c93-4d72-a2cf-e9571b0e7cff"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Setup and Runtime", "Section",
 CellChangeTimes->{{3.7636542238776684`*^9, 
  3.7636542374078426`*^9}},ExpressionUUID->"ca647bd2-74da-4f66-b605-\
1d6126990a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Initializes", " ", "the", " ", "global", " ", "constants", " ", "for", 
    " ", "calculations", " ", "and", " ", "the", " ", "masterPathList", " ", 
    "for", " ", "our", " ", "model"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"initializeLists", "[", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"resetGlobalConstants", "[", "]"}]}], ";", "\t", 
   RowBox[{"resetMasterPathList", "[", "]"}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7636540113868256`*^9, 3.763654046063589*^9}, {
  3.763654120582677*^9, 3.7636541376673574`*^9}, {3.7647988739619584`*^9, 
  3.7647988977390633`*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"ffd9cbfc-913b-4198-a012-e3f02cfc018e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Controller/Graphics Creation", "Section",
 CellChangeTimes->{{3.7658298687446012`*^9, 3.7658298700967026`*^9}, {
  3.765886580556613*^9, 3.7658865828194375`*^9}, {3.7659989641767607`*^9, 
  3.7659989685881104`*^9}},ExpressionUUID->"7a292ed6-432b-4a3a-bcfb-\
b2ce3fc4514f"],

Cell[CellGroupData[{

Cell["Seq Positions + Points", "Subsection",
 CellChangeTimes->{{3.7659062801807375`*^9, 3.765906286114354*^9}, {
  3.765926906766943*^9, 3.7659269078885283`*^9}, {3.7659777726002665`*^9, 
  3.7659777734163055`*^9}},ExpressionUUID->"30de62f8-dc45-44ee-a8e7-\
7a40f8292a6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"takes", " ", "a", " ", 
     RowBox[{"{", 
      RowBox[{
      "pathName", ",", " ", "xStart", ",", " ", "yStart", ",", " ", "xEnd", 
       ",", " ", "yEnd"}], "}"}], " ", "sublist", " ", "and", " ", "only", 
     " ", "returns", " ", "the", " ", "x"}], ",", 
    RowBox[{"y", " ", "of", " ", "each"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getStartAndEndPts", "[", 
    RowBox[{"pathName_", ",", " ", "seqLocs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "loc", ",", "\[IndentingNewLine]", "pathAndPos", ",", 
       "\[IndentingNewLine]", "startPt", ",", "\[IndentingNewLine]", 
       "endPt"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "find", " ", "where", " ", "the", " ", "path", " ", "info", " ", "is", 
       " ", "in", " ", "the", " ", "list", " ", "and", " ", "pull", " ", 
       "its", " ", "info"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"loc", "=", 
       RowBox[{"getSeqPos", "[", 
        RowBox[{"seqLocs", ",", "pathName"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pathAndPos", "=", " ", 
       RowBox[{"seqLocs", "[", 
        RowBox[{"[", "loc", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "retrieve", " ", "start", " ", "and", " ", "ending", " ", 
        "locations"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"startPt", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pathAndPos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"pathAndPos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"endPt", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pathAndPos", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"pathAndPos", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"startPt", ",", " ", "endPt"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765905463799042*^9, 3.765905513394644*^9}, {
  3.7659122458155737`*^9, 3.765912286608452*^9}, {3.7659123238136034`*^9, 
  3.7659126390314207`*^9}, {3.765916057329702*^9, 3.765916063278137*^9}, {
  3.765919809694408*^9, 3.765919822538951*^9}, {3.765925758323477*^9, 
  3.7659257630505705`*^9}, {3.765926006797577*^9, 3.765926006919809*^9}, {
  3.7659740165993037`*^9, 3.765974021234577*^9}},
 CellLabel->
  "In[638]:=",ExpressionUUID->"7822a400-f117-4888-b2dd-a698d327aa08"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "a", " ", "list", " ", "of", " ", "sequences", " ", "with",
     " ", 
    RowBox[{"{", 
     RowBox[{"start", ",", " ", "end"}], "}"}], " ", "points", " ", "where", 
    " ", "each", " ", 
    RowBox[{"path", "'"}], "s", " ", "position", " ", "and", " ", "length", 
    " ", "is", " ", "based", " ", "off", " ", "of", " ", "height", " ", "and",
     " ", "layer", " ", "length"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"unit", " ", "should", " ", "be", " ", "in", " ", "string", " ", 
    RowBox[{"form", ".", " ", "Typically"}], " ", "units", " ", "will", " ", 
    "be", " ", "\"\<Meters\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "height", " ", "scale", " ", "is", " ", "a", " ", "multiplier", " ", "on", 
    " ", "each", " ", "coords", " ", "yPos"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"seqNameAndPos", "[", 
    RowBox[{"layerLength_", ",", "heightScale_", ",", " ", "units_"}], "]"}], 
   ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"layerList", " ", "=", " ", 
        RowBox[{"layerList", "[", "]"}]}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"determines", " ", "every", " ", 
         RowBox[{"path", "'"}], "s", " ", "layer", " ", 
         RowBox[{"(", 
          RowBox[{"dis", " ", "from", " ", "origin"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "posList", ",", " ", 
       RowBox[{"(*", " ", "positions", " ", "*)"}], "\[IndentingNewLine]", 
       "key", ",", "\[IndentingNewLine]", "layer", ",", "\[IndentingNewLine]",
        "height", ",", "\[IndentingNewLine]", "xPos", ",", 
       "\[IndentingNewLine]", "yPos", ",", "\[IndentingNewLine]", "endX"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"filter", " ", "out", " ", "non"}], "-", "sequences"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"layerList", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"layerList", ",", " ", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<seq\>\""}], " ", "]"}],
           " ", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"posList", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"key", " ", "=", " ", 
           RowBox[{"keyLayer", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"layer", " ", "=", " ", 
           RowBox[{"keyLayer", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "determine", " ", "yPos", " ", "using", " ", "the", " ", 
            "appropriate", " ", 
            RowBox[{"seq", "'"}], "s", " ", "height"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"height", " ", "=", " ", 
           RowBox[{"UnitConvert", "[", 
            RowBox[{
             RowBox[{"masterPathList", "[", 
              RowBox[{
              "key", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}], 
              "]"}], ",", " ", "units"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"yPos", " ", "=", " ", 
           RowBox[{
            RowBox[{"QuantityMagnitude", "[", "height", "]"}], " ", "*", 
            "heightScale"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"determine", " ", 
            RowBox[{"xPos", ".", " ", "each"}], " ", "layer", " ", "is", " ", 
            "of", " ", "equal", " ", "length"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"xPos", "=", 
           RowBox[{"layer", "*", "layerLength"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "determine", " ", "where", " ", "the", " ", "path", " ", "ends"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"endX", " ", "=", " ", 
           RowBox[{"xPos", " ", "+", "layerLength"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "output", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"yPos", " ", 
            RowBox[{"won", "'"}], "t", " ", "change", " ", "between", " ", 
            "the", " ", "path", " ", "start", " ", "and", " ", "end"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
           "key", ",", " ", "xPos", ",", " ", "yPos", ",", " ", "endX", ",", 
            " ", "yPos"}], "}"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"keyLayer", ",", " ", "layerList"}], "}"}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"run", " ", "for", " ", "each", " ", "key"}], "-", 
          RowBox[{"layer", " ", "pair"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "posList", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765844150030238*^9, 3.765844338017583*^9}, {
  3.765844453279232*^9, 3.76584501908696*^9}, {3.765845061776884*^9, 
  3.76584521646922*^9}, {3.7658883144631033`*^9, 3.765888343952298*^9}, {
  3.7659111830633965`*^9, 3.7659113551995354`*^9}, {3.765916658244048*^9, 
  3.7659168073221903`*^9}, {3.765916969197213*^9, 3.765917097749688*^9}, {
  3.765917146008027*^9, 3.7659171473634176`*^9}, {3.765917196913702*^9, 
  3.7659172205102005`*^9}},
 CellLabel->
  "In[639]:=",ExpressionUUID->"f64ebceb-6934-4f61-8307-f1c88fb7d70a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"looks", " ", "through", " ", "the", " ", "list", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{
     "seqName", ",", " ", "xStart", ",", " ", "yStart", ",", " ", "xEnd", ",",
       " ", "yEnd"}], "}"}], " ", "subsets", " ", "and", " ", "returns", " ", 
    "the", " ", "loc", " ", "of", " ", "the", " ", "one", " ", 
    RowBox[{"you", "'"}], "re", " ", "searching", " ", "for"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getSeqPos", "[", 
    RowBox[{"seqLocs_", ",", " ", "seqName_"}], "]"}], ":=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"seqLocs", ",", " ", "seqName"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659197182014155`*^9, 3.7659197977741632`*^9}, {
  3.7659740236346054`*^9, 3.765974026058451*^9}},
 CellLabel->
  "In[640]:=",ExpressionUUID->"caf7da32-df2f-47ea-9541-9a4b732f813a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "the", " ", "a", " ", "list", " ", "of", " ", "each", " ", 
    "sequence", " ", "and", " ", "the", " ", "layer", " ", "of", " ", "the", 
    " ", "build", " ", "that", " ", 
    RowBox[{"it", "'"}], "s", " ", "in"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Layer", " ", "is", " ", "determined", " ", "by", " ", "the", " ", 
    "distance", " ", "to", " ", "the", " ", "starting", " ", "sequence"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"layerList", "[", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"key", ",", " ", 
       RowBox[{"distanceToOrigin", "[", "key", "]"}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"key", ",", " ", 
       RowBox[{"Keys", "[", "masterPathList", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765829874973688*^9, 3.7658298902542453`*^9}, {
  3.765841945643388*^9, 3.765842061557906*^9}, {3.7658432698743887`*^9, 
  3.765843274047561*^9}, {3.7658433594682016`*^9, 3.765843368251109*^9}, {
  3.7658433989488955`*^9, 3.765843407623271*^9}},
 CellLabel->
  "In[641]:=",ExpressionUUID->"48d32707-ef7d-4623-b07e-b712ad31c6b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "determine", " ", "a", " ", "sequences", " ", "distance", " ", "to", " ", 
    "the", " ", "origin"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"distanceToOrigin", "[", "seq_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"currentPath", "=", " ", "seq"}], ",", "\[IndentingNewLine]", 
       RowBox[{"dis", " ", "=", " ", "1"}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "keep", " ", "looping", " ", "until", " ", "arrival", " ", "at", " ", 
       "seq1"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SameQ", "[", 
          RowBox[{"currentPath", ",", " ", "\"\<seq1\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"go", " ", "to", " ", "prev", " ", "sequence"}], " ", "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"currentPath", " ", "=", " ", 
          RowBox[{"masterPathList", "[", 
           RowBox[{"currentPath", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"if", " ", 
            RowBox[{"it", "'"}], "s", " ", "a", " ", "merge"}], ",", " ", 
           RowBox[{
           "just", " ", "choose", " ", "the", " ", "first", " ", "sequence", 
            " ", "because", " ", "they", " ", "all", " ", "come", " ", "from",
             " ", "the", " ", "same", " ", "split"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "merges", " ", "have", " ", "lists", " ", "of", " ", "sequences", 
           " ", "for", " ", "the", " ", "start", " ", "value"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "currentPath", "]"}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"currentPath", " ", "=", " ", 
             RowBox[{"currentPath", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "if", " ", "the", " ", "previous", " ", "path", " ", "is", " ", "a",
            " ", "sequence"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "splits", " ", "and", " ", "merges", " ", "are", " ", "in", " ", 
            "the", " ", "same", " ", "layer"}], ",", " ", 
           RowBox[{"we", " ", 
            RowBox[{"don", "'"}], "t", " ", "want", " ", "to", " ", 
            "increase", " ", "distance", " ", "for", " ", "those"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"currentPath", ",", " ", "\"\<seq\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"dis", "++"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "dis", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765842133057377*^9, 3.7658422688848996`*^9}, {
  3.7658425705118227`*^9, 3.7658426143133874`*^9}, {3.7658426818886757`*^9, 
  3.765842720259657*^9}, {3.7658428219790983`*^9, 3.7658428651619797`*^9}, {
  3.765842927731287*^9, 3.765843021781087*^9}},
 CellLabel->
  "In[642]:=",ExpressionUUID->"f98ccce9-4659-4d41-858b-8ff37f057eb2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.765842866366252*^9, 3.7658428686938233`*^9}},
 CellLabel->
  "In[643]:=",ExpressionUUID->"0d2d1fdf-e557-4b99-8edd-3f3f7145094a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spl/Mer Locations", "Subsection",
 CellChangeTimes->{{3.7659777783573756`*^9, 3.765977782250404*^9}, {
  3.76598063052699*^9, 3.7659806324978013`*^9}, {3.765981089945665*^9, 
  3.7659810906640387`*^9}},ExpressionUUID->"e7df732d-c906-4458-9d91-\
825210c5c90c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"uses", " ", "the", " ", "sequence", " ", "that", " ", "leads"}], 
    "-", 
    RowBox[{
    "in", " ", "to", " ", "a", " ", "split", " ", "to", " ", "determine", " ",
      "the", " ", 
     RowBox[{"split", "'"}], "s", " ", 
     RowBox[{"coordinates", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getSplNameLoc", "[", 
    RowBox[{"seqLocs_", ",", " ", "splName_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"splKey", " ", "=", " ", "splName"}], ",", 
       "\[IndentingNewLine]", "prevSeq"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prevSeq", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"splKey", ",", " ", "\"\<start\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "return", " ", "the", " ", "name", " ", "with", " ", "the", " ", 
        "prev", " ", 
        RowBox[{"seq", "'"}], "s", " ", "end", " ", "coordinate"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"splKey", ",", " ", 
         RowBox[{
          RowBox[{"getStartAndEndPts", "[", 
           RowBox[{"prevSeq", ",", " ", "seqLocs"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659778272429476`*^9, 3.765977844949629*^9}, {
  3.765978078766608*^9, 3.7659781145240197`*^9}, {3.765978146199874*^9, 
  3.765978266791617*^9}, {3.7659813992861032`*^9, 3.765981477493067*^9}, {
  3.7659816185424557`*^9, 3.7659816201509953`*^9}},
 CellLabel->
  "In[644]:=",ExpressionUUID->"815be079-7c9e-4ff1-9772-a189047c39bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"uses", " ", "the", " ", "sequence", " ", "that", " ", "leads"}], 
    "-", 
    RowBox[{
    "in", " ", "to", " ", "a", " ", "split", " ", "to", " ", "determine", " ",
      "the", " ", 
     RowBox[{"split", "'"}], "s", " ", 
     RowBox[{"coordinates", ".", " ", "outputs"}], " ", "without", " ", 
     RowBox[{"name", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findSplLoc", "[", 
    RowBox[{"seqLocs_", ",", " ", "splName_"}], "]"}], ":=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"getSplNameLoc", "[", 
     RowBox[{"seqLocs", ",", " ", "splName"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659814688491597`*^9, 3.7659815017110033`*^9}, 
   3.7659816616646214`*^9, {3.7659817256991167`*^9, 3.765981726589904*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"7a2f89c7-f337-4d6c-af90-e1c157b2c2ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "uses", " ", "the", " ", "sequence", " ", "that", " ", "the", " ", 
     "merge", " ", "leads"}], "-", 
    RowBox[{
    "in", " ", "to", " ", "in", " ", "order", " ", "to", " ", "determine", 
     " ", "the", " ", 
     RowBox[{"merge", "'"}], "s", " ", 
     RowBox[{"coordinates", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getMerNameLoc", "[", 
    RowBox[{"seqLocs_", ",", " ", "merName_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"merKey", " ", "=", " ", "merName"}], ",", 
       "\[IndentingNewLine]", "nextSeq"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nextSeq", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"merKey", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "return", " ", "the", " ", "name", " ", "with", " ", "the", " ", 
        "next", " ", 
        RowBox[{"seq", "'"}], "s", " ", "start", " ", "coordinate"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"merKey", ",", " ", 
         RowBox[{
          RowBox[{"getStartAndEndPts", "[", 
           RowBox[{"nextSeq", ",", " ", "seqLocs"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765977851488921*^9, 3.7659778524280787`*^9}, {
  3.7659782998048134`*^9, 3.7659783667471147`*^9}, {3.7659813506810865`*^9, 
  3.7659813924083176`*^9}, {3.7659815056100063`*^9, 3.7659815962830973`*^9}},
 CellLabel->
  "In[646]:=",ExpressionUUID->"6ebc2ae7-8308-4264-9d98-d199742b3735"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "uses", " ", "the", " ", "sequence", " ", "that", " ", "the", " ", 
     "merge", " ", "leads"}], "-", 
    RowBox[{
    "in", " ", "to", " ", "in", " ", "order", " ", "to", " ", "determine", 
     " ", "the", " ", 
     RowBox[{"merge", "'"}], "s", " ", 
     RowBox[{"coordinates", ".", " ", "outputs"}], " ", "without", " ", 
     RowBox[{"name", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findMerLoc", "[", 
    RowBox[{"seqLocs_", ",", " ", "merName_"}], "]"}], ":=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"getMerNameLoc", "[", 
     RowBox[{"seqLocs", ",", " ", "merName"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659816530496693`*^9, 3.76598167603824*^9}, {
  3.7659817218892145`*^9, 3.765981723515732*^9}, {3.765994549062952*^9, 
  3.76599455234161*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"93dbea41-4c26-4038-b0aa-005546223afa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "list", " ", "of", " ", "where", " ", "all", " ", "the", 
    " ", "splits", " ", "are", " ", "located"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"allSplNameLocs", "[", "seqLocs_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "splKeys", "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"get", " ", "the", " ", "split", " ", "keys"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"splKeys", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "masterPathList", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", " ", "\"\<spl\>\""}], "]"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"find", " ", "their", " ", "locations"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"getSplNameLoc", "[", 
         RowBox[{"seqLocs", ",", " ", "splKey"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"splKey", ",", " ", "splKeys"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659778559915957`*^9, 3.7659778810023594`*^9}, {
  3.7659780891515503`*^9, 3.76597809407619*^9}, {3.7659784019617157`*^9, 
  3.765978432476742*^9}, {3.765978482742819*^9, 3.7659785229805984`*^9}, {
  3.7659785707459545`*^9, 3.7659785809449496`*^9}, {3.765982330803545*^9, 
  3.765982335684081*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"c054b1f5-3438-4ca6-b110-c9a4414afc4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "list", " ", "of", " ", "where", " ", "all", " ", "the", 
    " ", "merges", " ", "are", " ", "located"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"allMerNameLocs", "[", "seqLocs_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "merKeys", "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"get", " ", "the", " ", "merge", " ", "keys"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"merKeys", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "masterPathList", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", " ", "\"\<mer\>\""}], "]"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"find", " ", "their", " ", "locations"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"getMerNameLoc", "[", 
         RowBox[{"seqLocs", ",", " ", "merKey"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"merKey", ",", " ", "merKeys"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659778851641407`*^9, 3.765977886960359*^9}, {
  3.7659784367030125`*^9, 3.765978441427087*^9}, {3.765978532641799*^9, 
  3.7659786098626337`*^9}, {3.765982341526473*^9, 3.7659823463126063`*^9}},
 CellLabel->
  "In[649]:=",ExpressionUUID->"25e6d696-6dd2-44cb-aff2-574a93736382"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spl/Mer Rectangles + Labels", "Subsection",
 CellChangeTimes->{{3.7659810482114367`*^9, 
  3.7659810534447117`*^9}},ExpressionUUID->"61e3e6f2-7c88-46d6-92c6-\
7dc2b3325a18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "colored", " ", "rectangles", " ", "at", " ", "the", " ", 
    "correct", " ", "positions", " ", "to", " ", "designate", " ", "each", 
    " ", "split"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getSplRects", "[", 
    RowBox[{"seqLocs_", ",", " ", "layerLength_", ",", " ", "rectColor_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"splNameLocs", " ", "=", " ", 
        RowBox[{"allSplNameLocs", "[", "seqLocs", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"width", " ", "=", " ", 
        RowBox[{"layerLength", "/", "3"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"height", "=", 
        RowBox[{"layerLength", "/", "7"}]}], ",", "\[IndentingNewLine]", 
       "xVal", ",", "\[IndentingNewLine]", "yVal"}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"xVal", "=", 
         RowBox[{"splSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"yVal", "=", 
         RowBox[{"splSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"create", " ", "rectangle"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"rectColor", ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xVal", "-", 
               RowBox[{"width", "/", "2"}]}], ",", " ", 
              RowBox[{"yVal", "-", 
               RowBox[{"height", "/", "2"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xVal", "+", 
               RowBox[{"width", "/", "2"}]}], ",", " ", 
              RowBox[{"yVal", "+", 
               RowBox[{"height", "/", "2"}]}]}], "}"}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"splSet", ",", " ", "splNameLocs"}], "}"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "run", " ", "for", " ", "each", " ", "set", " ", "of", " ", 
        "coordiantes", " ", "that", " ", "designates", " ", "a", " ", 
        "split"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765977890450926*^9, 3.765977938929875*^9}, {
  3.765978626771889*^9, 3.7659786906817904`*^9}, {3.765979919472618*^9, 
  3.765979954000777*^9}, {3.76598004163093*^9, 3.765980145670163*^9}, {
  3.7659802582086697`*^9, 3.765980326364741*^9}, {3.7659804104409056`*^9, 
  3.765980445592366*^9}, {3.765980646011786*^9, 3.76598064766426*^9}, {
  3.7659807276428275`*^9, 3.765980767775383*^9}, {3.7659808266072874`*^9, 
  3.7659809330289073`*^9}, {3.765980972264616*^9, 3.765980995849491*^9}, {
  3.7659823675620394`*^9, 3.765982403187853*^9}, {3.765983858935772*^9, 
  3.765983859032442*^9}},
 CellLabel->
  "In[650]:=",ExpressionUUID->"2ad52438-be7d-459c-ba80-7e54616be3cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "colored", " ", "rectangles", " ", "at", " ", "the", " ", 
    "correct", " ", "positions", " ", "to", " ", "designate", " ", "each", 
    " ", "merge"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getMerRects", "[", 
    RowBox[{"seqLocs_", ",", " ", "layerLength_", ",", " ", "rectColor_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"merNameLocs", " ", "=", " ", 
        RowBox[{"allMerNameLocs", "[", "seqLocs", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"width", " ", "=", " ", 
        RowBox[{"layerLength", "/", "3"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"height", "=", 
        RowBox[{"layerLength", "/", "7"}]}], ",", "\[IndentingNewLine]", 
       "xVal", ",", "\[IndentingNewLine]", "yVal"}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"xVal", "=", 
         RowBox[{"merSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"yVal", "=", 
         RowBox[{"merSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"create", " ", "rectangle"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"rectColor", ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xVal", "-", 
               RowBox[{"width", "/", "2"}]}], ",", " ", 
              RowBox[{"yVal", "-", 
               RowBox[{"height", "/", "2"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xVal", "+", 
               RowBox[{"width", "/", "2"}]}], ",", " ", 
              RowBox[{"yVal", "+", 
               RowBox[{"height", "/", "2"}]}]}], "}"}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"merSet", ",", " ", "merNameLocs"}], "}"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "run", " ", "for", " ", "each", " ", "set", " ", "of", " ", 
        "coordiantes", " ", "that", " ", "designates", " ", "a", " ", 
        "merge"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659779443405275`*^9, 3.7659779450259295`*^9}, {
  3.7659786675394487`*^9, 3.7659786725922832`*^9}, {3.7659804006339765`*^9, 
  3.7659804669467955`*^9}, {3.765980641084868*^9, 3.765980642247605*^9}, {
  3.765980704820115*^9, 3.7659807216771574`*^9}, {3.7659810034461675`*^9, 
  3.7659810237451267`*^9}, {3.7659823626281233`*^9, 3.7659824295167093`*^9}, {
  3.765983853507481*^9, 3.7659838536964254`*^9}},
 CellLabel->
  "In[651]:=",ExpressionUUID->"e670c627-4188-42cc-8393-c34b9e52ee68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "puts", " ", "customizable", " ", "labels", " ", "at", " ", "the", " ", 
    "correct", " ", "positions", " ", "for", " ", "splits"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getSplLabels", "[", 
    RowBox[{
    "seqLocs_", ",", " ", "layerLength_", ",", " ", "labelColor_", ",", " ", 
     "fontType_", ",", " ", "fontSize_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"splNameLocs", " ", "=", " ", 
        RowBox[{"allSplNameLocs", "[", "seqLocs", "]"}]}], ",", 
       "\[IndentingNewLine]", "xVal", ",", "\[IndentingNewLine]", "yVal"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"xVal", "=", 
         RowBox[{"splSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"yVal", "=", 
         RowBox[{"splSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"create", " ", "label"}], " ", "*)"}], "\[IndentingNewLine]",
         "\t", 
        RowBox[{"{", 
         RowBox[{"labelColor", ",", " ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"splSet", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"xVal", ",", " ", "yVal"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", " ", "fontSize"}], ",", " ", 
            RowBox[{"FontFamily", "\[Rule]", " ", "fontType"}]}], "]"}]}], 
         "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"splSet", ",", " ", "splNameLocs"}], "}"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "run", " ", "for", " ", "each", " ", "set", " ", "of", " ", 
        "coordiantes", " ", "that", " ", "designates", " ", "a", " ", "spl"}],
        " ", "*)"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659811086963415`*^9, 3.7659811182946224`*^9}, {
  3.7659827595242796`*^9, 3.765982792511782*^9}, {3.7659828416320925`*^9, 
  3.765982842669038*^9}, {3.7659831377305737`*^9, 3.7659831424732914`*^9}, {
  3.7659832085703373`*^9, 3.765983216993572*^9}},
 CellLabel->
  "In[652]:=",ExpressionUUID->"2ffbc420-8625-4d6f-87f3-061dfe8ab1f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "puts", " ", "customizable", " ", "labels", " ", "at", " ", "the", " ", 
    "correct", " ", "positions", " ", "for", " ", "merges"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getMerLabels", "[", 
    RowBox[{
    "seqLocs_", ",", " ", "layerLength_", ",", " ", "labelColor_", ",", " ", 
     "fontType_", ",", " ", "fontSize_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"merNameLocs", " ", "=", " ", 
        RowBox[{"allMerNameLocs", "[", "seqLocs", "]"}]}], ",", 
       "\[IndentingNewLine]", "xVal", ",", "\[IndentingNewLine]", "yVal"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"xVal", "=", 
         RowBox[{"merSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"yVal", "=", 
         RowBox[{"merSet", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"create", " ", "label"}], " ", "*)"}], "\[IndentingNewLine]",
         "\t", 
        RowBox[{"{", 
         RowBox[{"labelColor", ",", " ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"merSet", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"xVal", ",", " ", "yVal"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", " ", "fontSize"}], ",", " ", 
            RowBox[{"FontFamily", "\[Rule]", " ", "fontType"}]}], "]"}]}], 
         "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"merSet", ",", " ", "merNameLocs"}], "}"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "run", " ", "for", " ", "each", " ", "set", " ", "of", " ", 
        "coordiantes", " ", "that", " ", "designates", " ", "a", " ", 
        "merge"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659811205884895`*^9, 3.765981242084919*^9}, {
  3.7659825815992274`*^9, 3.7659825818981*^9}, {3.7659826348237133`*^9, 
  3.7659826611846776`*^9}, {3.76598270870673*^9, 3.765982713023331*^9}, {
  3.7659831501046734`*^9, 3.7659832249436827`*^9}},
 CellLabel->
  "In[653]:=",ExpressionUUID->"e4ec3967-7340-476f-9170-ab39079766d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Seq Buttons", "Subsection",
 CellChangeTimes->{{3.7659269100596857`*^9, 3.765926911209592*^9}, {
  3.765977260496029*^9, 
  3.765977261826747*^9}},ExpressionUUID->"93e5e4f0-2033-4b86-afca-\
f2a01611e0a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "outputs", " ", "a", " ", "list", " ", "of", " ", "text", " ", "graphics", 
    " ", "at", " ", "a", " ", "position", " ", "centered", " ", "above", " ", 
    "each", " ", "sequence"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"When", " ", "buttons", " ", "are", " ", "pressed"}], ",", " ", 
    RowBox[{
    "the", " ", "sequence", " ", "will", " ", "be", " ", "selected", " ", 
     "in", " ", "the", " ", "UI"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getSeqButtons", "[", 
    RowBox[{
    "seqLocs_", ",", " ", "fontSize_", ",", " ", "fontType_", ",", 
     "layerLength_", ",", " ", "height_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"seqStartPos", ","}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"With", " ", "command"}], "-", " ", 
        RowBox[{"used", " ", "for", " ", "substituting", " ", 
         RowBox[{"values", ".", " ", "We"}], " ", "needed", " ", "it", " ", 
         "to", " ", "solve", " ", "a", " ", "bug", " ", "where", " ", "our", 
         " ", "button", " ", "actions", " ", 
         RowBox[{"weren", "'"}], "t", " ", "working"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"seqName", "=", 
             RowBox[{"seq", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"seqName", ",", 
               RowBox[{"FontSize", "\[Rule]", " ", "fontSize"}], ",", " ", 
               RowBox[{"FontFamily", "\[Rule]", "fontType"}]}], " ", "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"selected", "=", "seqName"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "will", " ", "set", " ", "global", " ", "variable", " ", "for",
                 " ", "\"\<selected\>\"", " ", "to", " ", "the", " ", 
                "selected", " ", "sequence"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "isDone"}], ",", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "creates", " ", "the", " ", "build", " ", "options", " ", 
                  "if", " ", "they", " ", "user", " ", 
                  RowBox[{"hasn", "'"}], "t", " ", "locked", " ", "the", " ", 
                  "building"}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"createBuildOptions", "[", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
            "]"}]}], "]"}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"(*", " ", "Position", " ", "*)"}], " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"seq", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
            RowBox[{"layerLength", "/", "2"}]}], ",", " ", 
           RowBox[{
            RowBox[{"seq", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", "height"}]}], 
          "}"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"seq", ",", " ", "seqLocs"}], "}"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"run", " ", "for", " ", "every", " ", "sequence"}], " ", 
       "*)"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659269143232293`*^9, 3.7659270272578063`*^9}, {
   3.7659270673806543`*^9, 3.765927092426116*^9}, {3.765927140044877*^9, 
   3.7659272278854623`*^9}, {3.7659740280991993`*^9, 
   3.7659740300479527`*^9}, {3.765975024490964*^9, 3.765975029334193*^9}, {
   3.765975085587481*^9, 3.765975106538848*^9}, {3.765975197500763*^9, 
   3.7659752797249517`*^9}, {3.765975316541526*^9, 3.765975325203121*^9}, {
   3.7659754551223335`*^9, 3.7659754819237394`*^9}, 3.765975527846381*^9, {
   3.765975592341339*^9, 3.76597560510709*^9}, {3.7659756880210996`*^9, 
   3.765975727275427*^9}, {3.765975805216013*^9, 3.7659758053240957`*^9}, {
   3.765975912181345*^9, 3.765975937782735*^9}, {3.765975970032575*^9, 
   3.7659759945752726`*^9}, {3.765976028691286*^9, 3.765976094592476*^9}, {
   3.765976130364242*^9, 3.765976160219947*^9}, {3.765976243406616*^9, 
   3.7659763160034943`*^9}, {3.7659763699712257`*^9, 
   3.7659764787886353`*^9}, {3.7659765506286306`*^9, 3.765976581010499*^9}, {
   3.765977226785204*^9, 3.765977249847858*^9}, {3.766025249601183*^9, 
   3.7660252666625795`*^9}, {3.7660746507745943`*^9, 3.7660746883306446`*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"0e9906ad-616f-4c18-a6c4-203e42c53335"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7659759876485243`*^9, 3.765975988483762*^9}},
 CellLabel->
  "In[655]:=",ExpressionUUID->"8cba4554-abbe-4f6d-b1b7-b6a1ea000f4e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Point Output for Seq/Spl/Mer", "Subsection",
 CellChangeTimes->{{3.7659062927789335`*^9, 3.7659063365028677`*^9}, {
  3.7659260626284876`*^9, 3.765926062731947*^9}, {3.7659267573227396`*^9, 
  3.7659267634399214`*^9}, {3.7659268841234055`*^9, 
  3.765926894258151*^9}},ExpressionUUID->"1873e5c6-f79c-4367-a931-\
a6f9495382ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "determines", " ", "the", " ", "set", " ", "of", " ", "3", " ", "points", 
    " ", "for", " ", "each", " ", "seq", " ", "that", " ", "leads", " ", "in",
     " ", "to", " ", "another", " ", "seq"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"if", " ", "a", " ", "seq", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "lead", " ", "to", " ", "another", " ",
      "seq"}], ",", " ", 
    RowBox[{
    "a", " ", "set", " ", "of", " ", "only", " ", "2", " ", "points", " ", 
     "is", " ", "returned", " ", 
     RowBox[{"(", 
      RowBox[{"the", " ", 
       RowBox[{"seq", "'"}], "s", " ", "start", " ", "and", " ", "end"}], 
      ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "these", " ", "are", " ", "needed", " ", "for", " ", "making", " ", 
    "lines", " ", "to", " ", "connect", " ", "sequences"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "these", " ", "subsets", " ", "of", " ", "points", " ", "will", " ", 
    "later", " ", "be", " ", "used", " ", "with", " ", 
    RowBox[{"Line", "[", "]"}], " ", "to", " ", "connect", " ", "sequences"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"allSeqPoints", "[", "seqLocs_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "currentKey", ",", "\[IndentingNewLine]", "next", ",", 
       "\[IndentingNewLine]", "connectionPoints"}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"connectionPoints", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"currentKey", " ", "=", " ", 
           RowBox[{"pathLoc", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"next", " ", "=", 
           RowBox[{"masterPathList", "[", 
            RowBox[{"currentKey", ",", " ", "\"\<end\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", 
             RowBox[{"it", "'"}], "s", " ", "a", " ", "seq"}], ",", " ", 
            RowBox[{"process", " ", 
             RowBox[{"it", "'"}], "s", " ", "coordinate", " ", "data"}]}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{"currentKey", ",", " ", "\"\<seq\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringQ", "[", "next", "]"}], " ", "&&", " ", 
               RowBox[{"StringContainsQ", "[", 
                RowBox[{"next", ",", " ", "\"\<seq\>\""}], "]"}]}], ",", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"true", ".", " ", "there"}], " ", "is", " ", "a", " ",
                 "next", " ", "path"}], " ", "*)"}], "\[IndentingNewLine]", 
              "\t\t", 
              RowBox[{"seqConnectPts", "[", 
               RowBox[{"seqLocs", ",", " ", "currentKey", ",", " ", "next"}], 
               "]"}], ",", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"false", ",", " ", 
                RowBox[{
                "there", " ", "is", " ", "no", " ", "other", " ", "path", " ",
                  "to", " ", "lead", " ", "in", " ", "to"}]}], " ", "*)"}], 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"getStartAndEndPts", "[", 
               RowBox[{"currentKey", ",", "seqLocs"}], "]"}]}], 
             "\[IndentingNewLine]", "\t", "]"}]}], "\t", 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"pathLoc", ",", " ", "seqLocs"}], "}"}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{"run", " ", "for", " ", "each", " ", 
          RowBox[{"{", 
           RowBox[{
           "pathName", ",", " ", "xStart", ",", " ", "yStart", ",", " ", 
            "xEnd", ",", " ", "yEnd"}], "}"}], " ", "sublist"}], " ", "*)"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"filter", " ", "out", " ", "null", " ", "results"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"connectionPoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"connectionPoints", ",", " ", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", " ", "Null"}], "]"}]}], " ", "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"return", " ", "list", " ", "of", " ", "connections"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "connectionPoints", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdz0sowwEAx/FRW3m0jT812mEeqy1htDI2MtRSanmUPIpmiMJsE5ZFc9k4
isOUUEvDYSlLiBmJVmSJ7MBB7FmT1jya8v/9D98+52+eaqylP5lGo3HJ4EiM
eHhjRuQDxfJXqJwuYr+TVnWpM+BcWpwPd7kaKSxZESmgaVJGaVbnzsKvW50D
0s/v9mHW4+kh5LReuaGv0XIJE4TVA12cm3uo6ZE9wfcuiQ+qcleH/KRWIjAK
/cYJA5Tw3JQMInoAG9J/KJfFfzUB0vvKj3po1C05g6T6zKRjyK9TeGHtINcH
t4Q7QehRhiLwZKGZHiJtD/dlw2iMmw8/rfQC6BU9C6CrUFAKy1zDrDC+tXpK
7UV1J+w42qNsYk71wui2RQXLx+0aGLcrJuH3b+o83GxLmKEgz7AGxdaRDSg8
k9rgzLXNDnmLOQ7Iful2woq3FBODFZGvl4oo/wGmjuHv
  "],
 CellLabel->
  "In[656]:=",ExpressionUUID->"6a039f0a-9a70-4f5a-88a1-c2b6808661d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "uses", " ", "the", " ", "x", " ", "of", " ", "the", " ", "second", " ", 
    "path", " ", "and", " ", "the", " ", "y", " ", "of", " ", "the", " ", 
    "first", " ", "path", " ", "to", " ", "figure", " ", "out", " ", "the", 
    " ", "\"\<intersection\>\"", " ", "point"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "intersection", " ", "is", " ", "where", " ", "the", " ", 
    "first", " ", "path", " ", "connects", " ", "to", " ", "the", " ", 
    "second", " ", "path", " ", "OR", "\[IndentingNewLine]", "where", " ", 
    "the", " ", "first", " ", "path", " ", "goes", " ", 
    RowBox[{"up", "/", "down"}], " ", "to", " ", "connect", " ", "to", " ", 
    "the", " ", "second", " ", "path"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "intersection", " ", "is", " ", "returned", " ", "with", " ", 
    "the", " ", "first", " ", "and", " ", "last", " ", 
    RowBox[{"points", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"seqConnectPts", "[", 
    RowBox[{"seqLocs_", ",", " ", "path1_", ",", " ", "path2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "seq1Loc", ",", "\[IndentingNewLine]", "seq2Loc", ",", 
       "\[IndentingNewLine]", "seq1Data", ",", "\[IndentingNewLine]", 
       "seq2Data", ",", "\[IndentingNewLine]", "seq1Start", ",", 
       "\[IndentingNewLine]", "seq1End", ",", "\[IndentingNewLine]", 
       "seq2Start"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"retrieve", " ", "seq1", " ", "location", " ", "data"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"seq1Loc", " ", "=", 
       RowBox[{"getSeqPos", "[", 
        RowBox[{"seqLocs", ",", " ", "path1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"seq1Data", " ", "=", " ", 
       RowBox[{"seqLocs", "[", 
        RowBox[{"[", "seq1Loc", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"seq1Start", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"seq1Data", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"seq1Data", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"seq1End", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"seq1Data", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"seq1Data", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"retrieve", " ", "seq2", " ", "location", " ", "data"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"seq2Loc", " ", "=", " ", 
       RowBox[{"getSeqPos", "[", 
        RowBox[{"seqLocs", ",", " ", "path2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"seq2Data", " ", "=", " ", 
       RowBox[{"seqLocs", "[", 
        RowBox[{"[", "seq2Loc", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"seq2Start", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"seq2Data", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"seq2Data", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "the", " ", "intersection", " ", "point", " ", "is", " ", "the", " ", 
        "middle", " ", 
        RowBox[{"one", ".", " ", "The"}], " ", "first", " ", "2", " ", 
        "elements", " ", "are", " ", "the", " ", "bottom", " ", "left", " ", 
        RowBox[{"corner", ".", " ", "last"}], " ", "2", " ", "are", " ", 
        "the", " ", "top", " ", "right", " ", "corner"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "the", " ", "first", " ", "point", " ", "is", " ", "the", " ", "first",
         " ", 
        RowBox[{"seq", "'"}], "s", " ", 
        RowBox[{"loc", ".", " ", "The"}], " ", "third", " ", "point", " ", 
        "is", " ", "the", " ", "last", " ", 
        RowBox[{"seq", "'"}], "s", " ", "loc"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"seq1Start", ",", "seq1End", ",", "seq2Start"}], "}"}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659066234252496`*^9, 3.765906624543847*^9}, {
  3.76590803680803*^9, 3.76590809726027*^9}, {3.7659081385859528`*^9, 
  3.765908238852974*^9}, {3.7659098826220975`*^9, 3.7659099119044533`*^9}, {
  3.7659099433768253`*^9, 3.7659100523114133`*^9}, {3.7659106459470263`*^9, 
  3.7659106468926425`*^9}, {3.765910970568899*^9, 3.765910975092195*^9}, {
  3.7659117279498563`*^9, 3.765911740182582*^9}, {3.765911779362957*^9, 
  3.7659118610139427`*^9}, {3.7659118917931623`*^9, 3.7659119444233437`*^9}, {
  3.765911983262041*^9, 3.765911990521145*^9}, {3.7659193146200495`*^9, 
  3.7659193202962*^9}, {3.7659198513545566`*^9, 3.765919869811184*^9}, {
  3.7659740335104165`*^9, 3.765974033549433*^9}},
 CellLabel->
  "In[657]:=",ExpressionUUID->"b10bf9d2-822c-4c21-9fd7-36a4b52f85b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "uses", " ", "splPoints", " ", "to", " ", "find", " ", "all", " ", "the", 
    " ", "point", " ", "sets", " ", "for", " ", "all", " ", "the", " ", 
    "vertical", " ", "lines", " ", "that", " ", "connect", " ", "sequences", 
    " ", "in", " ", "the", " ", "various", " ", "splits"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"splPtsAll", "[", "seqLocs_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"splKeys", ",", "\[IndentingNewLine]", "allSplPoints", ","}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"splKeys", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "masterPathList", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", " ", "\"\<spl\>\""}], "]"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Process", " ", "all", " ", "splits"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"allSplPoints", " ", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"splPoints", "[", 
          RowBox[{"seqLocs", ",", " ", "splKey"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"splKey", ",", " ", "splKeys"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765973637750079*^9, 3.7659737148738976`*^9}, {
  3.7659737814626784`*^9, 3.765973975013941*^9}, {3.7659740598917284`*^9, 
  3.7659741000408163`*^9}, {3.765974148378832*^9, 3.765974160817191*^9}, {
  3.76597439156723*^9, 3.7659743916786675`*^9}},
 CellLabel->
  "In[658]:=",ExpressionUUID->"9d4d8862-a06b-4104-9322-a8ac84997d9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "uses", " ", "merPoints", " ", "to", " ", "find", " ", "all", " ", "the", 
    " ", "point", " ", "sets", " ", "for", " ", "all", " ", "the", " ", 
    "vertical", " ", "lines", " ", "that", " ", "connect", " ", "sequences", 
    " ", "in", " ", "the", " ", "various", " ", "merges"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"merPtsAll", "[", "seqLocs_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"merKeys", ",", "\[IndentingNewLine]", "allMerPoints", ","}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"merKeys", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "masterPathList", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", " ", "\"\<mer\>\""}], "]"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Process", " ", "all", " ", "splits"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"allMerPoints", " ", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"merPoints", "[", 
          RowBox[{"seqLocs", ",", " ", "merKey"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"merKey", ",", " ", "merKeys"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659738390221195`*^9, 3.7659738408976965`*^9}, {
  3.7659743550023026`*^9, 3.765974411502657*^9}, {3.7659744436632414`*^9, 
  3.765974469946701*^9}, {3.765974628309508*^9, 3.765974649344488*^9}},
 CellLabel->
  "In[659]:=",ExpressionUUID->"65a740fc-6397-42e8-9dc3-aaeb2cdbb77d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "a", " ", "list", " ", "of", " ", "points", " ", "from", 
    " ", "top", " ", "to", " ", "bottom", " ", "for", " ", "all", " ", "the", 
    " ", "branches", " ", "of", " ", "a", " ", "split"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"used", " ", "later", " ", "with", " ", 
    RowBox[{"Line", "[", "]"}], " ", "to", " ", "make", " ", "a", " ", 
    "vertical", " ", "line", " ", "connecting", " ", "the", " ", 
    RowBox[{"split", "'"}], "s", " ", "sequences"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"splPoints", "[", 
    RowBox[{"seqLocs_", ",", "spl_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts", ",", "\[IndentingNewLine]", 
       RowBox[{"splKey", " ", "=", " ", "spl"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pts", " ", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"getStartAndEndPts", "[", 
           RowBox[{"branchKey", ",", " ", "seqLocs"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "pick", " ", "only", " ", "the", " ", "starting", " ", "point"}], 
          " ", "*)"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"branchKey", ",", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{"masterPathList", "[", 
             RowBox[{"splKey", ",", " ", "\"\<branches\>\""}], "]"}], "]"}]}],
           "}"}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "run", " ", "for", " ", "each", " ", "seq", " ", "on", " ", "the", 
          " ", "split"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"add", " ", "the", " ", "merge", " ", "start", " ", 
        RowBox[{"point", ".", " ", "This"}], " ", "allows", " ", "the", " ", 
        "vertical", " ", "line", " ", "to", " ", "extend", " ", "above", " ", 
        "and", " ", "below", " ", "the", " ", "merging", " ", "sequences"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"pts", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"pts", ",", " ", 
         RowBox[{"{", 
          RowBox[{"findSplLoc", "[", 
           RowBox[{"seqLocs", ",", " ", "splKey"}], "]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "pts", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765910654752554*^9, 3.7659106883952436`*^9}, {
   3.7659108500875797`*^9, 3.7659108602970686`*^9}, {3.7659193386309*^9, 
   3.765919394634754*^9}, {3.7659194523635397`*^9, 3.7659194674161406`*^9}, {
   3.765919501843239*^9, 3.765919619901732*^9}, {3.76591966782631*^9, 
   3.765919697150846*^9}, {3.7659223441284723`*^9, 3.7659223882783103`*^9}, 
   3.765922664725246*^9, {3.765922776180179*^9, 3.765922886355172*^9}, {
   3.7659229781326084`*^9, 3.765922978640232*^9}, {3.7659230542193527`*^9, 
   3.765923119943245*^9}, {3.765923182782959*^9, 3.765923195429119*^9}, {
   3.7659233136430407`*^9, 3.7659233247264686`*^9}, {3.7659237160466776`*^9, 
   3.765923719058159*^9}, {3.7659255682541103`*^9, 3.7659255748546033`*^9}, {
   3.7659739924361105`*^9, 3.76597400595632*^9}, {3.766026708882907*^9, 
   3.76602672716298*^9}},
 CellLabel->
  "In[660]:=",ExpressionUUID->"964303b6-9bcd-48f7-a202-aff5c757d9dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"similar", " ", "to", " ", 
    RowBox[{"splPoints", ".", " ", "Returns"}], " ", "a", " ", "list", " ", 
    "of", " ", "points", " ", "from", " ", "top", " ", "to", " ", "bottom", 
    " ", "for", " ", "all", " ", "converging", " ", "splits"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"used", " ", "with", " ", 
    RowBox[{"Line", "[", "]"}], " ", "to", " ", "connect", " ", "them", " ", 
    "visually"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"merPoints", "[", 
    RowBox[{"seqLocs_", ",", " ", "mer_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts", ",", "\[IndentingNewLine]", 
       RowBox[{"merKey", " ", "=", " ", "mer"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pts", " ", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"getStartAndEndPts", "[", 
           RowBox[{"branchKey", ",", " ", "seqLocs"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{"pick", " ", "only", " ", "the", " ", "end", " ", "point"}],
           " ", "*)"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"branchKey", ",", " ", 
           RowBox[{"masterPathList", "[", 
            RowBox[{"merKey", ",", " ", "\"\<start\>\""}], "]"}]}], "}"}]}], 
        " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "run", " ", "for", " ", "each", " ", "seq", " ", "on", " ", "the", 
          " ", "split"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"add", " ", "the", " ", "merge", " ", "start", " ", 
        RowBox[{"point", ".", " ", "This"}], " ", "allows", " ", "the", " ", 
        "vertical", " ", "line", " ", "to", " ", "extend", " ", "above", " ", 
        "and", " ", "below", " ", "the", " ", "merging", " ", "sequences"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"pts", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"pts", ",", " ", 
         RowBox[{"{", 
          RowBox[{"findMerLoc", "[", 
           RowBox[{"seqLocs", ",", " ", "merKey"}], "]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "pts", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765923244896314*^9, 3.7659233907211447`*^9}, {
  3.7659236903534536`*^9, 3.765923724071974*^9}, {3.7659255629424677`*^9, 
  3.7659255630455484`*^9}, {3.7659255950963006`*^9, 3.7659256292507086`*^9}, {
  3.765925718580618*^9, 3.7659257246398907`*^9}, {3.7659258403015585`*^9, 
  3.7659258562697783`*^9}, {3.765925889335785*^9, 3.765925913739702*^9}, {
  3.765927294820573*^9, 3.765927318686014*^9}, {3.765927357411496*^9, 
  3.7659273716373453`*^9}, {3.765974010318186*^9, 3.7659740129087005`*^9}, {
  3.7659942883275404`*^9, 3.765994418977383*^9}, {3.765994449926218*^9, 
  3.7659944804303427`*^9}, {3.765994512118853*^9, 3.765994578168026*^9}, {
  3.765994702732641*^9, 3.7659947030567875`*^9}, {3.7659947502342963`*^9, 
  3.7659947531104107`*^9}, {3.7659947928698235`*^9, 3.765994793725492*^9}, {
  3.765994831805785*^9, 3.765994833651132*^9}, {3.7659948850110426`*^9, 
  3.7659948851479826`*^9}},
 CellLabel->
  "In[661]:=",ExpressionUUID->"e676130d-7d72-41c8-88d2-01721d04874c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Seq1 Graphics (InputR and Pump)", "Subsection",
 CellChangeTimes->{{3.7659897796857586`*^9, 3.765989800949029*^9}, {
  3.765989902879331*^9, 
  3.7659899185041113`*^9}},ExpressionUUID->"5692c02e-0497-45e1-8f99-\
f8525ca9bfde"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Outputs", " ", "rectangle", " ", "to", " ", "represent", " ", "the", " ", 
    "input", " ", "reservoir"}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "rectangle", " ", "will", " ", "be", " ", "attached", " ", 
    "to", " ", "the", " ", "pipe", " ", "using", " ", "its", " ", "bottom", 
    " ", "right", " ", "corner", " ", "so", " ", "it", " ", 
    RowBox[{"doesn", "'"}], "t", " ", "clip", " ", "into", " ", "the", " ", 
    "structure"}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"leftShift", " ", "will", " ", "move", " ", "it"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "downShift", " ", "moves", " ", "the", " ", "rectangle", " ", "downwards", 
    " ", "so", " ", "it", " ", "can", " ", "correctly", " ", "rest", " ", 
    "on", " ", "the", " ", "line", " ", "that", " ", "represents", " ", "the",
     " ", "seq1", " ", "pipes"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getInputRect", "[", 
    RowBox[{
    "seqLocs_", ",", " ", "color_", ",", " ", "layerLength_", ",", " ", 
     "downShift_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startPoint", " ", "=", " ", 
        RowBox[{
         RowBox[{"getStartAndEndPts", "[", 
          RowBox[{"\"\<seq1\>\"", ",", " ", "seqLocs"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"leftShift", " ", "=", " ", 
        RowBox[{"layerLength", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       "rect", ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"stores", " ", "graphics"}], " ", "*)"}], 
       "\[IndentingNewLine]", "bottomLeft", ",", "\[IndentingNewLine]", 
       "topRight"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"seq1", " ", "starts", " ", "at", " ", 
       RowBox[{"startPoint", ".", " ", "Now"}], " ", 
       RowBox[{"we", "'"}], "re", " ", "shifting", " ", "it", " ", "to", " ", 
       "the", " ", "left", " ", "by", " ", "leftShift", " ", "for", " ", 
       "creating", " ", "the", " ", "rectangle"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bottomLeft", " ", "=", " ", 
       RowBox[{"startPoint", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"leftShift", ",", " ", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "find", " ", "topright", " ", "corner", " ", "for", " ", "rectangle"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"topRight", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"bottomLeft", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"layerLength", "/", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{"bottomLeft", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
          RowBox[{"layerLength", "/", "2"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "shift", " ", "the", " ", "corners", " ", "down", " ", "by", " ", 
        "downShift"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bottomLeft", " ", "=", " ", 
       RowBox[{"bottomLeft", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "downShift"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"topRight", " ", "=", " ", 
       RowBox[{"topRight", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "downShift"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rect", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"color", ",", " ", 
         RowBox[{"Rectangle", "[", 
          RowBox[{"bottomLeft", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"bottomLeft", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
              RowBox[{"layerLength", "/", "2"}]}], ",", " ", 
             RowBox[{
              RowBox[{"bottomLeft", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
              RowBox[{"layerLength", "/", "2"}]}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "rect", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765989837285161*^9, 3.7659898996001167`*^9}, {
  3.7659900018037415`*^9, 3.7659901830032825`*^9}, {3.7659902151042166`*^9, 
  3.765990460126213*^9}, {3.765990499413498*^9, 3.765990507741766*^9}, {
  3.765990538844703*^9, 3.765990550875692*^9}, {3.7659907196318426`*^9, 
  3.7659907213039913`*^9}, {3.7659907537813835`*^9, 3.7659909277756777`*^9}, {
  3.7659910688683963`*^9, 3.765991078074107*^9}, {3.765991490036005*^9, 
  3.765991497267926*^9}, {3.765991862196913*^9, 3.7659918628084817`*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"28da46a5-3989-41b2-a797-195ecf0947cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "outputs", " ", "circle", " ", "to", " ", "represent", " ", "the", " ", 
    "pump"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "uses", " ", "the", " ", "start", " ", "point", " ", "of", " ", "seq1", 
    " ", "to", " ", "position", " ", "itself"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "circle", " ", "will", " ", "be", " ", "shifted", " ", "by", 
    " ", "rightShift", " ", "to", " ", "put", " ", "it", " ", "into", " ", 
    "proper", " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPumpCirc", "[", 
    RowBox[{
    "seqLocs_", ",", " ", "color_", ",", "layerLength_", ",", " ", "rad_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"startPoint", " ", "=", " ", 
        RowBox[{
         RowBox[{"getStartAndEndPts", "[", 
          RowBox[{"\"\<seq1\>\"", ",", " ", "seqLocs"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"rightShift", " ", "=", " ", 
        RowBox[{"layerLength", "/", "4"}]}], ",", "\[IndentingNewLine]", 
       "circ", ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"stores", " ", "graphics"}], " ", "*)"}], 
       "\[IndentingNewLine]", "circLoc"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"find", " ", "circLoc", " ", "by", " ", "shifting", " ", 
       RowBox[{"seq1", "'"}], "s", " ", "start", " ", "point"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"circLoc", " ", "=", " ", 
       RowBox[{"startPoint", "+", 
        RowBox[{"{", 
         RowBox[{"rightShift", ",", " ", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"circ", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"color", ",", " ", 
         RowBox[{"Disk", "[", 
          RowBox[{"circLoc", ",", " ", "rad"}], "]"}]}], "}"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659914310847435`*^9, 3.765991508695585*^9}, {
  3.765991557355804*^9, 3.7659915890684147`*^9}, {3.7659918715429316`*^9, 
  3.76599198034051*^9}, {3.7659922383717074`*^9, 3.765992265124925*^9}},
 CellLabel->
  "In[663]:=",ExpressionUUID->"7dc9dcd9-f33f-4175-a7d4-25b66aa977c6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Output Reservoirs Graphic", "Subsection",
 CellChangeTimes->{{3.765989811876235*^9, 3.765989817846455*^9}, 
   3.765992331631*^9},ExpressionUUID->"4f93e513-e7a0-474a-bd1c-17a91948cf00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "represents", " ", "an", " ", "output", " ", "reservoir", " ", "with", " ",
     "a", " ", "colored", " ", "rectangle"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"createOutputCirc", "[", 
    RowBox[{
    "seqLocs_", ",", " ", "seqKey_", ",", " ", "color_", ",", "rad_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"endPt", " ", "=", " ", 
        RowBox[{
         RowBox[{"getStartAndEndPts", "[", 
          RowBox[{"seqKey", ",", " ", "seqLocs"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "circ",
        ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"stores", " ", "graphics"}], " ", "*)"}], 
       "\[IndentingNewLine]", "circLoc"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"color", ",", " ", 
       RowBox[{"Disk", "[", 
        RowBox[{"endPt", ",", " ", "rad"}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659928044796295`*^9, 3.765992828855427*^9}, {
  3.7659928890421157`*^9, 3.7659929263947277`*^9}, {3.7659930001144905`*^9, 
  3.765993085753479*^9}, {3.765993200894272*^9, 3.765993303133401*^9}, {
  3.7659933661672745`*^9, 3.76599336776476*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"0c2ba6a5-c732-46c9-96aa-b64271e50d9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "creates", " ", "output", " ", "disks", " ", "for", " ", "the", " ", 
    "sequences", " ", "that", " ", "end", " ", "in", " ", "outputs"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"createOutputCircs", "[", 
    RowBox[{"seqLocs_", ",", " ", "color_", ",", " ", "rad_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"outputSeqs", ","}], "\[IndentingNewLine]", " ", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"get", " ", "the", " ", "sequences", " ", "that", " ", 
       RowBox[{"aren", "'"}], "t", " ", "linked", " ", "to", " ", "a", " ", 
       RowBox[{
        RowBox[{"spl", "/", "seq"}], "/", "mer"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"outputSeqs", " ", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"seqLocs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ListQ", "[", 
           RowBox[{"masterPathList", "[", 
            RowBox[{"#", ",", " ", "\"\<end\>\""}], "]"}], "]"}], "&"}]}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"createOutputCirc", "[", 
         RowBox[{
         "seqLocs", ",", " ", "outputSeq", ",", " ", "color", ",", " ", 
          "rad"}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"outputSeq", ",", " ", "outputSeqs"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765993651596629*^9, 3.7659936967743087`*^9}, {
  3.7659937299235387`*^9, 3.7659937463322225`*^9}, {3.765993981181676*^9, 
  3.7659940540785484`*^9}, {3.765995046237283*^9, 3.7659950859088316`*^9}, {
  3.7659952531504097`*^9, 3.7659952571602106`*^9}, {3.7659956962355776`*^9, 
  3.765995702859906*^9}},
 CellLabel->
  "In[665]:=",ExpressionUUID->"5d53860e-a9fc-465c-8e1d-c152019a9641"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interface", "Section",
 CellChangeTimes->{{3.762080258819049*^9, 
  3.762080260948391*^9}},ExpressionUUID->"4902641e-51f0-4a8b-971c-\
fbe135010719"],

Cell[CellGroupData[{

Cell["Global Variables", "Subsection",
 CellChangeTimes->{{3.7652344000961604`*^9, 3.7652344086403294`*^9}, 
   3.7659733641822047`*^9},ExpressionUUID->"40eb74ee-a349-4333-bdc0-\
daae10e7f538"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "initializes", " ", "the", " ", "UI", " ", "global", " ", "variables"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"initializeUIglobals", "[", "]"}], ":=", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"the", " ", "currently", " ", "selected", " ", 
       RowBox[{"path", "/", "component"}], " ", "index"}], " ", "*)"}], "\n", 
     RowBox[{"selected", " ", "=", " ", "\"\<seq1\>\""}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "used", " ", "for", " ", "storing", " ", "current", " ", "screens", " ", 
     "and", " ", "closing", " ", "them"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"currentDisplayScreen", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"currentOptionsScreen", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"currentPropertiesScreen", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"currentRunOptionsScreen", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"currentAllStarScreen", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"selectedScreen", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"stores", " ", "user", " ", "input"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"inputDynamic", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Boolean", " ", "that", " ", "notes", " ", "if", " ", "the", " ", "setup",
      " ", "is", " ", "an", " ", "infinite", " ", "or", " ", "general", " ", 
     "one"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"isInfinite", " ", "=", " ", "Null"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Boolean", " ", "that", " ", "notes", " ", "if", " ", "the", " ", "user", 
     " ", "is", " ", "done"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"isDone", " ", "=", " ", "False"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Finds", " ", "value", " ", "of", " ", "window", " ", "sizes", " ", "to", 
     " ", "automatically", " ", "scale"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"windowSizeX", " ", "=", " ", 
     RowBox[{
      RowBox[{"AbsoluteCurrentValue", "[", "WindowSize", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"windowSizeY", " ", "=", " ", 
     RowBox[{
      RowBox[{"AbsoluteCurrentValue", "[", "WindowSize", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Used", " ", "for", " ", "saving", " ", "the", " ", "current", " ", 
     "setup", " ", "so", " ", "you", " ", "can", " ", "reload", " ", "it"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"masterPathListTemp", " ", "=", " ", "Null"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"sets", " ", "directory", " ", "correctly", " ", "for", " ", 
     RowBox[{"pictures", "/", "other"}], " ", "files"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.765234411559529*^9, 3.765234468580161*^9}, {
   3.765487801839883*^9, 3.765487811731423*^9}, {3.765830224377679*^9, 
   3.7658302267064896`*^9}, {3.7658315675423155`*^9, 3.765831576524322*^9}, 
   3.765911209657366*^9, {3.7659114240820265`*^9, 3.765911432797077*^9}, {
   3.765973366923876*^9, 3.7659733766249247`*^9}, {3.765998904994975*^9, 
   3.765999038540415*^9}, {3.7660086364556274`*^9, 3.7660087046445436`*^9}, {
   3.7660189272063656`*^9, 3.7660189451702995`*^9}, {3.7660254745122395`*^9, 
   3.7660254776188993`*^9}, {3.7660266052390585`*^9, 3.766026623056432*^9}, 
   3.7660266685946264`*^9, {3.7660727450631685`*^9, 3.766072748963235*^9}, {
   3.7661655394344397`*^9, 
   3.7661655688468127`*^9}},ExpressionUUID->"d8370447-f005-4da7-9d0b-\
235dd84c4043"],

Cell[BoxData[
 RowBox[{
  RowBox[{"initializeUIglobals", "[", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.766009014915703*^9, 3.766009026530998*^9}},
 CellLabel->
  "In[680]:=",ExpressionUUID->"3161fcad-5a69-40bf-b37a-2e44d5ec7d6b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Starting Window", "Subsection",
 CellChangeTimes->{{3.7642717344133034`*^9, 
  3.764271739747018*^9}},ExpressionUUID->"a495adef-62ed-483c-91d7-\
50d523ad1b29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "creates", " ", "and", " ", "displays", " ", "the", " ", "starting", " ", 
    "menu", " ", "in", " ", "a", " ", "new", " ", "window"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"startingMenu", "[", "]"}], ":=", "\n", 
    RowBox[{"currentDisplayScreen", " ", "=", " ", "\[IndentingNewLine]", 
     RowBox[{"CreatePalette", "[", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Graphical", " ", "elements"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Positions", " ", "and", " ", "sizes", " ", "are", " ", "proportions", 
        " ", "of", " ", "the", " ", 
        RowBox[{"user", "'"}], "s", " ", "screen", " ", "dimensions"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"ImageResize", "[", 
                RowBox[{
                 RowBox[{
                 "Import", "[", "\"\<Pictures/background2.png\>\"", "]"}], 
                 ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"windowSizeX", ",", " ", "windowSizeY"}], "}"}]}], 
                "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Center", ",", " ", "Center"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Center", ",", " ", "Center"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"windowSizeX", ",", " ", "windowSizeY"}], "}"}]}], 
              "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Fluid Mechanics for English Majors\>\"", ",", " ", 
                 "White", ",", " ", 
                 RowBox[{"FontSize", " ", "\[Rule]", " ", 
                  RowBox[{"windowSizeX", "*", 
                   RowBox[{"windowSizeY", "/", "15000"}]}]}], ",", " ", 
                 RowBox[{
                 "FontFamily", " ", "\[Rule]", " ", 
                  "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Center", ",", " ", 
                 RowBox[{"3", "*", 
                  RowBox[{"windowSizeY", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Start!\>\"", ",", " ", 
                   RowBox[{
                   "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", 
                 RowBox[{"resetWorkingScreens", "[", "]"}], ",", " ", 
                 RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"windowSizeX", "/", "10"}], ",", " ", 
                    RowBox[{"windowSizeY", "/", "12"}]}], "}"}]}]}], "]"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{"Center", ",", " ", 
                 RowBox[{"windowSizeY", "/", "8"}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ",", 
             "\n", "\t\t\t", 
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Quit :(\>\"", ",", " ", 
                   RowBox[{
                   "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", 
                 RowBox[{"NotebookClose", "[", "]"}], ",", " ", 
                 RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"windowSizeX", "/", "13"}], ",", " ", 
                    RowBox[{"windowSizeY", "/", "15"}]}], "}"}]}]}], "]"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"windowSizeX", "/", "4"}], ",", " ", 
                 RowBox[{"windowSizeY", "/", "8"}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ",", 
             "\n", "\t\t\t", 
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Help?\>\"", ",", " ", 
                   RowBox[{
                   "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", 
                 RowBox[{"helpingScreen", "[", "]"}], ",", " ", 
                 RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"windowSizeX", "/", "13"}], ",", " ", 
                    RowBox[{"windowSizeY", "/", "15"}]}], "}"}]}]}], "]"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"3", "*", 
                  RowBox[{"windowSizeX", "/", "4"}]}], ",", " ", 
                 RowBox[{"windowSizeY", "/", "8"}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}]}], 
            "\n", "\t\t\t", "}"}], "\n", "\t\t", "}"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"ImageSize", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"windowSizeX", ",", " ", "windowSizeY"}], "}"}]}], ",", 
          "\n", "\t\t", 
          RowBox[{"PlotRange", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "windowSizeX"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "windowSizeY"}], "}"}]}], "}"}]}]}], 
         "\n", "\t", "]"}], "}"}], ",", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Palette", " ", "Options"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"WindowSize", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"windowSizeX", ",", " ", "windowSizeY"}], "}"}]}], ",", "\n",
        "\t", 
       RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}], ",", "\n", "\t", 
       RowBox[{
       "WindowTitle", " ", "\[Rule]", " ", 
        "\"\<Fluid Mechanics for English Majors\>\""}], ",", " ", "\n", "\t", 
       RowBox[{"WindowFloating", " ", "\[Rule]", " ", "False"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.764271742291256*^9, 3.764271755996582*^9}, {
   3.764271791721097*^9, 3.764271801001346*^9}, {3.7642719775229917`*^9, 
   3.764271981659898*^9}, {3.764272036633015*^9, 3.7642721488281345`*^9}, 
   3.764272208154563*^9, {3.7642723513709183`*^9, 3.7642724396438212`*^9}, {
   3.7642724815357447`*^9, 3.7642724902067847`*^9}, {3.7642725235653243`*^9, 
   3.7642725273532457`*^9}, {3.7642725985305424`*^9, 
   3.7642726620374804`*^9}, {3.7642726950505285`*^9, 
   3.7642727159777465`*^9}, {3.764273168212911*^9, 3.764273176640411*^9}, {
   3.7643569975796423`*^9, 3.7643570280894637`*^9}, {3.764357080235319*^9, 
   3.7643571040714235`*^9}, {3.7643571345697823`*^9, 3.764357202152418*^9}, {
   3.7643572338384457`*^9, 3.764357284156399*^9}, {3.764357420410388*^9, 
   3.7643574290200977`*^9}, {3.764357462210456*^9, 3.7643575691063976`*^9}, {
   3.764357636044569*^9, 3.7643576716706176`*^9}, {3.7643578084010715`*^9, 
   3.764357819115284*^9}, {3.7643581598814635`*^9, 3.7643581927558603`*^9}, {
   3.764358375077711*^9, 3.7643584153680725`*^9}, {3.7643584589219093`*^9, 
   3.764358525525764*^9}, {3.7643585561021214`*^9, 3.764358621753607*^9}, {
   3.7643586779772167`*^9, 3.764358722156433*^9}, {3.7643588515846033`*^9, 
   3.764358890186969*^9}, {3.7643589575648193`*^9, 3.7643589840703297`*^9}, {
   3.7643593526235523`*^9, 3.7643593632535243`*^9}, {3.7643593934887905`*^9, 
   3.7643594069358635`*^9}, {3.7643594513000484`*^9, 
   3.7643595112825828`*^9}, {3.764359543036587*^9, 3.7643595551035995`*^9}, {
   3.764359688887895*^9, 3.7643598544220567`*^9}, {3.7643599083629036`*^9, 
   3.7643599105638795`*^9}, {3.7643599482562647`*^9, 3.764360104800774*^9}, {
   3.7643601650794735`*^9, 3.7643602307019835`*^9}, {3.7643602797983007`*^9, 
   3.7643602971761827`*^9}, {3.7643613830402966`*^9, 
   3.7643613914162664`*^9}, {3.76436147648566*^9, 3.764361476865616*^9}, {
   3.764361657824003*^9, 3.76436165889126*^9}, {3.7643616898637466`*^9, 
   3.7643616914149632`*^9}, {3.764361818984343*^9, 3.7643618234800253`*^9}, {
   3.7643618577102523`*^9, 3.7643618577213097`*^9}, {3.764361937810387*^9, 
   3.764361943408511*^9}, {3.7643619761886477`*^9, 3.7643620269488664`*^9}, {
   3.7643621052477217`*^9, 3.7643621156401386`*^9}, {3.7643734128913774`*^9, 
   3.7643734129077597`*^9}, {3.7643734489015503`*^9, 3.764373450772001*^9}, {
   3.764373484608219*^9, 3.7643735260908794`*^9}, {3.7643735596112514`*^9, 
   3.764373623921071*^9}, {3.7643737127469864`*^9, 3.7643737171921883`*^9}, {
   3.76437376105128*^9, 3.764373761806939*^9}, {3.7648021717190514`*^9, 
   3.7648021908242817`*^9}, {3.7648493797627997`*^9, 3.7648493848520765`*^9}, 
   3.765487861928299*^9, {3.7658228889641504`*^9, 3.7658229446432467`*^9}, {
   3.765822980708863*^9, 3.765823007665929*^9}, {3.7658231379962807`*^9, 
   3.7658232285506563`*^9}, {3.765823266731938*^9, 3.765823398150055*^9}, {
   3.7658235577033052`*^9, 3.7658235724471703`*^9}, {3.7658236117677*^9, 
   3.7658239188945165`*^9}, {3.765823965362892*^9, 3.765823982731433*^9}, {
   3.7658302213956776`*^9, 3.765830231942483*^9}, {3.7659270661149797`*^9, 
   3.7659270788948293`*^9}, {3.765927124060027*^9, 3.7659271328525114`*^9}, {
   3.7659271736294403`*^9, 3.7659271768807545`*^9}},
 CellLabel->
  "In[681]:=",ExpressionUUID->"0cbb54ed-c165-45ae-82fe-d87006b5f4c8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Helping Screen", "Subsection",
 CellChangeTimes->{{3.7643613513028355`*^9, 
  3.7643613619472427`*^9}},ExpressionUUID->"f2654bfd-715c-4018-8291-\
5fd004992945"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "creates", " ", "and", " ", "displays", " ", "the", " ", "help", " ", 
    "screen", " ", "in", " ", "a", " ", "new", " ", "window", " ", 
    RowBox[{"(", 
     RowBox[{"not", " ", "done"}], ")"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"helpingScreen", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"NotebookClose", "[", "]"}], ";"}], " ", "*)"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "will", " ", "be", " ", "uncommented", " ", "later", " ", "but", " ", 
        "for", " ", "testing", " ", "it", " ", "closes", " ", "the", " ", 
        "code", " ", "file"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"ImageResize", "[", 
                 RowBox[{
                  RowBox[{
                  "Import", "[", "\"\<Pictures/background2.png\>\"", "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"960", ",", "540"}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Center", ",", "Center"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Center", ",", "Center"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"960", ",", "540"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\t\t\t", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Fluid Mechanics for English Majors\>\"", ",", " ", 
                  "White", ",", " ", 
                  RowBox[{"FontSize", "\[Rule]", "40"}], ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], "]"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{"Center", ",", "430"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\t\t\t", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Button", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Start!\>\"", ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                   "]"}], ",", 
                  RowBox[{"workingScreen", "[", "]"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"100", ",", 
                    StyleBox[
                    RowBox[{
                    StyleBox["5", "Code"], "0"}]]}], "}"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Center", ",", "100"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Center", ",", "Center"}], "}"}]}], "]"}]}], "\n", 
             "\t\t\t", "}"}], "\[IndentingNewLine]", "\t\t", "}"}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"960", ",", "540"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "960"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "540"}], "}"}]}], "}"}]}]}], "\n", "\t", 
          "]"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"WindowSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"960", ",", "540"}], "}"}]}], ",", " ", "\n", "\t", 
        RowBox[{"Saveable", "\[Rule]", "False"}], ",", "\n", "\t", 
        RowBox[{
        "WindowTitle", "\[Rule]", 
         "\"\<Fluid Mechanics for English Majors\>\""}], ",", " ", "\n", "\t", 
        RowBox[{"WindowFloating", "\[Rule]", "False"}]}], 
       "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"NOTE", "-", " ", 
     RowBox[{
     "will", " ", "contain", " ", "text", " ", "from", " ", "final", " ", 
      "report"}]}], " ", "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.7643613645623655`*^9, 3.7643613734757624`*^9}, {
   3.764361830029146*^9, 3.764361857763427*^9}, {3.7643619762409544`*^9, 
   3.7643620047368493`*^9}, {3.764362062101775*^9, 3.7643620624745927`*^9}, {
   3.7643621052847414`*^9, 3.764362115559305*^9}, {3.7643733926144547`*^9, 
   3.7643733926144547`*^9}, {3.764373460475071*^9, 3.7643734617544565`*^9}, {
   3.764373783505638*^9, 3.764373785471687*^9}, 3.7647094867787*^9, {
   3.764802205303504*^9, 3.7648022236281986`*^9}, 3.7648666769100223`*^9, {
   3.7659991069885597`*^9, 3.7659991178055143`*^9}},
 CellLabel->
  "In[682]:=",ExpressionUUID->"9e882633-5cc9-4f86-97e6-4f9a6b680fbc"]
}, Closed]],

Cell[CellGroupData[{

Cell["New Working Screens", "Subsection",
 CellChangeTimes->{{3.765119199503935*^9, 
  3.765119206986945*^9}},ExpressionUUID->"47150252-0c22-4e7c-907b-\
1ae72fce92f4"],

Cell[CellGroupData[{

Cell["Initialization", "Subsubsection",
 CellChangeTimes->{{3.7659187710030174`*^9, 
  3.7659187774148417`*^9}},ExpressionUUID->"953080ab-4e39-4379-9578-\
1a1107c2ee0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "resets", " ", "the", " ", "global", " ", "variables", " ", "and", " ", 
    "closes", " ", "any", " ", "screens", " ", "that", " ", "are", " ", 
    "open"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"resetWorkingScreens", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"selected", " ", "=", " ", "\"\<seq1\>\""}], ";", "\n", "\t", 
      RowBox[{"closeNotebooks", "[", "]"}], ";", "\n", "\t", 
      RowBox[{"inputDynamic", " ", "=", " ", "Null"}], ";", "\n", "\t", 
      RowBox[{"isInfinite", " ", "=", " ", "Null"}], ";", "\n", "\t", 
      RowBox[{"isDone", " ", "=", " ", "False"}], ";", "\n", "\t", 
      RowBox[{"resetMasterPathList", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"initializes", " ", "the", " ", "startup"}], " ", "*)"}], "\n",
       "\t", 
      RowBox[{"initializeWorkingScreens", "[", "]"}], ";"}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7659171060150537`*^9, 3.7659171516280813`*^9}, {
   3.7659752522925715`*^9, 3.7659753719625015`*^9}, 3.765975420180564*^9, {
   3.765977266828141*^9, 3.7659772701004076`*^9}, {3.7659890338282413`*^9, 
   3.7659890370246935`*^9}, {3.7660211349358263`*^9, 
   3.7660211373957767`*^9}, {3.766076060554353*^9, 3.7660760693406763`*^9}},
 CellLabel->
  "In[683]:=",ExpressionUUID->"aa153535-d2ef-488a-bc15-f9e213fe35ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"resets", " ", "the", " ", "inputDynamic"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"resetInputDynamic", "[", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"inputDynamic", " ", "=", " ", "Null"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7659772549628487`*^9, 3.7659773396882796`*^9}, {
  3.765977390589106*^9, 3.7659774282294507`*^9}, {3.765977475924382*^9, 
  3.76597747636217*^9}},
 CellLabel->
  "In[684]:=",ExpressionUUID->"72cb546e-6524-4488-ad1b-7740485ce3be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "creates", " ", "the", " ", "first", " ", "sequence", " ", "and", " ", 
    "sets", " ", "up", " ", "for", " ", "input", " ", "reservoir", " ", "and",
     " ", "pump", " ", "creation"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"initializeWorkingScreens", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"createSeq", "[", 
       RowBox[{"Null", ",", " ", "Null"}], "]"}], ";", "\n", "\t", 
      RowBox[{"askInfinite", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7643590646826243`*^9, 3.7643590778082185`*^9}, {
   3.7643596613532753`*^9, 3.764359678119497*^9}, {3.764361135862701*^9, 
   3.7643612159012394`*^9}, {3.764361284042942*^9, 3.764361314050185*^9}, {
   3.76436182445352*^9, 3.764361857742978*^9}, {3.764361976213236*^9, 
   3.7643620264215174`*^9}, {3.764362056968952*^9, 3.7643620599597006`*^9}, {
   3.7643621052573776`*^9, 3.7643621155364337`*^9}, 3.764373340634889*^9, {
   3.764373392598837*^9, 3.7643733926144547`*^9}, {3.7643734557306237`*^9, 
   3.7643734572294536`*^9}, {3.7643737761703005`*^9, 3.764373778857441*^9}, {
   3.76450023393342*^9, 3.764500279313961*^9}, {3.764501151880549*^9, 
   3.7645012164008937`*^9}, {3.764501296571557*^9, 3.7645013680850554`*^9}, {
   3.764501438718216*^9, 3.7645014426227713`*^9}, {3.7645016720250473`*^9, 
   3.7645017742633076`*^9}, {3.7645256253243876`*^9, 
   3.7645257099472733`*^9}, {3.7645257874907255`*^9, 
   3.7645257908909836`*^9}, {3.7646275844353724`*^9, 3.764627586493896*^9}, {
   3.7646277234129744`*^9, 3.7646277255805073`*^9}, {3.764709288346016*^9, 
   3.7647093597806883`*^9}, {3.7647998050087566`*^9, 
   3.7647998056438923`*^9}, {3.764802228496402*^9, 3.7648022464382067`*^9}, {
   3.764865933513208*^9, 3.7648659414556894`*^9}, {3.7648659793690324`*^9, 
   3.764866003296776*^9}, {3.7648664420961657`*^9, 3.76486644450694*^9}, 
   3.764866670007966*^9, {3.7651192680871735`*^9, 3.7651193268740983`*^9}, 
   3.7651329791287785`*^9, {3.765133027811884*^9, 3.765133051118613*^9}, 
   3.7654878691580105`*^9, {3.7659043644829607`*^9, 3.765904387461504*^9}, {
   3.765915705585371*^9, 3.765915719844449*^9}, {3.7659157771771054`*^9, 
   3.7659158163732705`*^9}, {3.76591601118438*^9, 3.7659160422512655`*^9}, {
   3.7659164092137814`*^9, 3.7659164104554605`*^9}, {3.7659170804095387`*^9, 
   3.765917081032871*^9}, {3.7659171474283085`*^9, 3.7659171756817217`*^9}, {
   3.765973391640764*^9, 3.765973417562413*^9}, {3.7659754298197565`*^9, 
   3.7659754508595104`*^9}},
 CellLabel->
  "In[685]:=",ExpressionUUID->"814a61c5-f47f-49dd-b3f3-d85aea4fec2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "if", " ", "they", " ", "want", 
    " ", "to", " ", "have", " ", "an", " ", "infinite", " ", "setup"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"askInfinite", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"creates", " ", "the", " ", "text", " ", "cells"}], " ", 
         "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Would you like to have a general or an infinite setup?\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<An infinite setup does not have boundaries on the reservoirs, \
while a general does\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "puts", " ", "the", " ", "buttons", " ", "in", " ", "a", " ", "row",
            " ", "below", " ", "the", " ", "text"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "each", " ", "button", " ", "calls", " ", "the", " ", "respective", 
           " ", "input", " ", "reservoir", " ", "creation", " ", 
           "functions"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Row", "[", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<General!\>\"", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", "  ", 
                 "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", 
              RowBox[{"DialogReturn", "[", 
               RowBox[{
                RowBox[{"askAndCreateNewGenInput", "[", "]"}], ";", " ", 
                RowBox[{"isInfinite", " ", "=", " ", "False"}]}], "]"}]}], 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Infinite!\>\"", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", "  ", 
                 "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", 
              RowBox[{"DialogReturn", "[", 
               RowBox[{
                RowBox[{"askAndCreateNewInfInput", "[", "]"}], ";", " ", 
                RowBox[{"isInfinite", " ", "=", " ", "True"}]}], "]"}]}], 
             "]"}]}], "\n", "\t\t", "}"}], "]"}]}], "\n", "\t", "}"}], 
       "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765973418955719*^9, 3.7659734850588846`*^9}, {
  3.765973522897726*^9, 3.7659736004223657`*^9}, {3.7659736379709387`*^9, 
  3.765973772871093*^9}, {3.7659738156726503`*^9, 3.7659738258075447`*^9}, {
  3.765973883406453*^9, 3.7659738909343185`*^9}, {3.765974007508911*^9, 
  3.765974055317073*^9}, {3.765974467081128*^9, 3.765974484090599*^9}, {
  3.7659754542434583`*^9, 3.7659754953095975`*^9}, {3.7659761270403833`*^9, 
  3.765976149415547*^9}, {3.765976649381317*^9, 3.7659766500514946`*^9}, {
  3.7659775085311303`*^9, 3.7659775374248505`*^9}, {3.7659778252900424`*^9, 
  3.7659778491212807`*^9}},
 CellLabel->
  "In[686]:=",ExpressionUUID->"e054845d-c0da-4d89-a003-613c0884d705"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "called", " ", "if", " ", "the", " ", "user", " ", 
    "chooses", " ", "general", " ", "at", " ", "the", " ", "beginning"}], " ",
    "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "the", " ", "input", 
    " ", "reservoir", " ", "options", " ", "and", " ", "creates", " ", 
    "one"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreateNewGenInput", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Create your input reservoir!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {h, d, p, dl, du} \
where\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<h is the height of the reservoir in meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<d is the distance from the free surface to the ceiling in \
meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<p is the gauge pressure of the reservoir in pascals (0 if \
unpressurized)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<dl is the density of the lower fluid in \
kilograms/\!\(\*SuperscriptBox[\(meter\), \(3\)]\)(for water it is 1000)\>\"",
             ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<du is the density of the upper fluid/gas in \
kilograms/\!\(\*SuperscriptBox[\(meter\), \(3\)]\) (0 if unpressurized)\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "5"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "reservoir"}], " ", "*)"}],
               "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"mapNewGenInputReservoir", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"\"\<seq1\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   "\"\<Meters\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   "\"\<Meters\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                   "\"\<Pascals\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"0", ",", " ", 
                   SuperscriptBox["\"\<Meters\>\"", "3"]}], "]"}], ",", " ", 
                 "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"0", ",", " ", 
                   SuperscriptBox["\"\<Meters\>\"", "3"]}], "]"}], ",", " ", 
                 "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
                   RowBox[{"\"\<Kilograms\>\"", "/", 
                    SuperscriptBox["\"\<Meters\>\"", "3"]}]}], "]"}], ",", 
                 " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
                   RowBox[{"\"\<Kilograms\>\"", "/", 
                    SuperscriptBox["\"\<Meters\>\"", "3"]}]}], "]"}]}], "\n", 
                "\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "calls", " ", "the", " ", "pump", " ", "creation", " ", 
                 "function"}], " ", "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{"askPump", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "}"}], "\n", "\t", "]"}], ";"}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765916046123908*^9, 3.765916068362429*^9}, 
   3.765916103521392*^9, {3.7659161948122234`*^9, 3.7659163570682507`*^9}, {
   3.765916391171039*^9, 3.7659164048863554`*^9}, {3.7659164899877634`*^9, 
   3.7659164990245924`*^9}, {3.7659165632667704`*^9, 
   3.7659165813663387`*^9}, {3.7659168683796377`*^9, 3.765916889378503*^9}, {
   3.765918017395361*^9, 3.7659181741780276`*^9}, {3.7659182043104353`*^9, 
   3.765918215890463*^9}, {3.7659184051086187`*^9, 3.7659185190807867`*^9}, {
   3.765973488112713*^9, 3.7659734963676596`*^9}, {3.765973892620807*^9, 
   3.7659739010845265`*^9}, {3.765974062792054*^9, 3.765974085040544*^9}, {
   3.7659744453289366`*^9, 3.765974445641074*^9}, {3.7659761533978853`*^9, 
   3.7659761603731976`*^9}, {3.7659763962303715`*^9, 
   3.7659764342297697`*^9}, {3.765976493435383*^9, 3.7659766688013835`*^9}, {
   3.765977550803069*^9, 3.765977553130872*^9}, {3.7659777870134287`*^9, 
   3.765977816968344*^9}, {3.765977892373601*^9, 3.765977924186504*^9}, {
   3.765978037021498*^9, 3.76597804408963*^9}, {3.7659781670866237`*^9, 
   3.765978173898763*^9}, {3.7659817616630793`*^9, 3.7659817621398306`*^9}, {
   3.765982218278772*^9, 3.7659822520194993`*^9}, {3.765982434531008*^9, 
   3.7659824350326304`*^9}, 3.765983628228321*^9, {3.7659882377579484`*^9, 
   3.7659882389956303`*^9}, {3.7660720563825207`*^9, 3.766072082256706*^9}, {
   3.7660721159579983`*^9, 3.766072121337576*^9}, {3.7660741380221496`*^9, 
   3.7660741390276885`*^9}, {3.766077927793875*^9, 3.76607793008593*^9}, {
   3.7660809363310175`*^9, 3.7660809370886745`*^9}, {3.766081500330289*^9, 
   3.7660815007020683`*^9}, {3.766081531687113*^9, 3.766081564479429*^9}, {
   3.7660832962389708`*^9, 3.7660833382396297`*^9}},
 CellLabel->
  "In[687]:=",ExpressionUUID->"e6e01044-b446-479d-bfd8-95cd547ead92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "called", " ", "if", " ", "the", " ", "user", " ", 
    "chooses", " ", "infinite", " ", "at", " ", "the", " ", "beginning"}], 
   " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "the", " ", "input", 
    " ", "reservoir", " ", "options", " ", "and", " ", "creates", " ", 
    "one"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreateNewInfInput", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Create your input reservoir!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {h, p, v} where\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<h is the distance from the bottom of the reservoir to the top \
in meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<p is the gauge pressure of the reservoir in pascals (0 if \
unpressurized)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<d is the density of the fluid in \
kilograms/\!\(\*SuperscriptBox[\(meter\), \(3\)]\) (for water it is \
1000)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "3"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "reservoir"}], " ", "*)"}],
               "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"mapNewInfInputReservoir", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"\"\<seq1\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   "\"\<Meters\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   "\"\<Pascals\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                   RowBox[{"\"\<Kilograms\>\"", "/", 
                    SuperscriptBox["\"\<Meters\>\"", "3"]}]}], "]"}]}], "\n", 
                "\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "calls", " ", "the", " ", "pump", " ", "creation", " ", 
                 "function"}], " ", "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{"askPump", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "}"}], "\n", "\t", "]"}], ";"}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765916046123908*^9, 3.765916068362429*^9}, 
   3.765916103521392*^9, {3.7659161948122234`*^9, 3.7659163570682507`*^9}, {
   3.765916391171039*^9, 3.7659164048863554`*^9}, {3.7659164899877634`*^9, 
   3.7659164990245924`*^9}, {3.7659165632667704`*^9, 
   3.7659165813663387`*^9}, {3.7659168683796377`*^9, 3.765916889378503*^9}, {
   3.765918017395361*^9, 3.7659181741780276`*^9}, {3.7659182043104353`*^9, 
   3.765918215890463*^9}, {3.7659184051086187`*^9, 3.7659185190807867`*^9}, {
   3.765973488112713*^9, 3.7659734963676596`*^9}, {3.7659738612058325`*^9, 
   3.7659738623927*^9}, {3.76597392530678*^9, 3.7659739315181847`*^9}, {
   3.7659741141397142`*^9, 3.765974129305153*^9}, {3.7659742609620557`*^9, 
   3.7659742783665075`*^9}, {3.765974384508625*^9, 3.7659744404190435`*^9}, {
   3.7659746455717373`*^9, 3.7659746466568427`*^9}, {3.765974820834981*^9, 
   3.7659748601937017`*^9}, {3.7659766799226303`*^9, 
   3.7659767549898567`*^9}, {3.765976794827276*^9, 3.7659768682322097`*^9}, {
   3.765977566417308*^9, 3.765977580481719*^9}, {3.7659778667860565`*^9, 
   3.7659778822586713`*^9}, {3.7659779497680817`*^9, 3.765977997051407*^9}, 
   3.765978104869073*^9, {3.7659817702880125`*^9, 3.7659817704924655`*^9}, 
   3.765983632373207*^9, {3.7659884897557135`*^9, 3.765988491201887*^9}, {
   3.7660183887238665`*^9, 3.766018389882745*^9}, {3.7660720889720187`*^9, 
   3.766072110296528*^9}, {3.7660741519558215`*^9, 3.766074154593655*^9}, {
   3.7660775132573633`*^9, 3.7660775941020284`*^9}, 3.766077917213476*^9, {
   3.766079489871009*^9, 3.766079490676693*^9}, {3.7660809288302145`*^9, 
   3.7660809298754244`*^9}},
 CellLabel->
  "In[688]:=",ExpressionUUID->"873bd26b-ae91-4d50-8f1c-8493a878f42e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"askPump", "[", "]"}], " ", ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
      "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input", 
      " ", "box"}], " ", "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"CreateDialog", "[", 
      RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "the", " ", "text", " ", "cells"}], " ", 
        "*)"}], "\n", "\t\t", 
       RowBox[{
        RowBox[{"TextCell", "[", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Would you like a pump?\>\"", ",", " ", 
           RowBox[{
           "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
          "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "puts", " ", "the", " ", "buttons", " ", "in", " ", "a", " ", "row", 
          " ", "below", " ", "the", " ", "text"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "the", " ", "\"\<Sure\>\"", " ", "button", " ", "calls", " ", "the", 
          " ", "respective", " ", "input", " ", "reservoir", " ", "creation", 
          " ", "functions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "the", " ", "\"\<Nah\>\"", " ", "button", " ", "starts", " ", "the", 
          " ", "display", " ", "and", " ", "checks", " ", "the", " ", 
          "height"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{"Row", "[", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Sure\>\"", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", "  ", 
                "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", "\n", 
             "\t\t\t\t", 
             RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"isInfinite", ",", "\n", "\t\t\t\t\t\t", 
                RowBox[{"askAndCreateNewInfPump", "[", "]"}], ",", "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"askAndCreateNewGenPump", "[", "]"}]}], " ", "\n", 
               "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", "]"}]}], "\t", "\n", 
            "\t\t\t", "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", "\n", 
           "\t\t\t", 
           RowBox[{"Button", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Nah\>\"", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", "  ", 
                "\"\<Comic Sans MS\>\""}]}], "]"}], ",", " ", "\n", 
             "\t\t\t\t", 
             RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"checkHeights", "[", "]"}], ";", "\n", "\t\t\t\t\t", 
               RowBox[{"displaySelected", "[", "]"}], ";"}], "\n", "\t\t\t\t",
               "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], "]"}]}],
        "\n", "\t", "}"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.76598824294107*^9, 3.765988251403408*^9}, {
   3.765988281621401*^9, 3.7659884620807686`*^9}, {3.765998236953723*^9, 
   3.765998298798286*^9}, {3.766024232695836*^9, 3.76602423517321*^9}, 
   3.7660246412338753`*^9, {3.7660728516640744`*^9, 3.7660728573185463`*^9}},
 CellLabel->
  "In[689]:=",ExpressionUUID->"d1479468-773c-4833-8b6b-6b047a290820"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "called", " ", "after", " ", "the", " ", "user", 
    " ", "make", " ", "a", " ", "general", " ", "input", " ", "reservoir", 
    " ", "and", " ", "says", " ", "they", " ", "want", " ", "a", " ", 
    "pump"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "their", " ", "pump", 
    " ", "options", " ", "and", " ", "creates", " ", "one"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"askAndCreateNewGenPump", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Create your pump!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {e, w, h} where\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<e is a number from 0-1 that describes how efficient the pump \
is\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<w is the maximum wattage of the pump\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<h is the head value of the pump in meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "3"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "pump"}], " ", "*)"}], 
              "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"addGenPump", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"\"\<seq1\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   "\"\<Watts\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                   "\"\<Meters\>\""}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], 
               ";", " ", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "starts", " ", "up", " ", "the", " ", "display", " ", 
                 "screen"}], " ", "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{"checkHeights", "[", "]"}], ";", "\n", "\t\t\t\t\t", 
               RowBox[{"displaySelected", "[", "]"}], ";"}], "\n", "\t\t\t\t",
               "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\t", "\n", "\t", "}"}], "\n", "\t", "]"}]}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765916418396222*^9, 3.7659164303073635`*^9}, {
   3.7659165920817003`*^9, 3.76591667940914*^9}, 3.765916867342412*^9, {
   3.7659169860240126`*^9, 3.765917091066064*^9}, {3.7659173353027954`*^9, 
   3.7659173508163033`*^9}, {3.765917414102066*^9, 3.765917421977006*^9}, {
   3.7659185646329517`*^9, 3.7659186046180067`*^9}, {3.7659735022169895`*^9, 
   3.7659735024483724`*^9}, {3.765973830798199*^9, 3.765973832833745*^9}, {
   3.765973914367029*^9, 3.765973921027334*^9}, {3.7659740937053685`*^9, 
   3.7659741048196774`*^9}, {3.765976891642622*^9, 3.765977024812414*^9}, {
   3.76597756451941*^9, 3.7659775836781425`*^9}, {3.765977855703705*^9, 
   3.765977863066008*^9}, {3.7659779367149954`*^9, 3.7659779424028115`*^9}, {
   3.7659780646725454`*^9, 3.7659780686260004`*^9}, {3.765978142022702*^9, 
   3.7659781621368895`*^9}, 3.7659836318067236`*^9, {3.7659882541121893`*^9, 
   3.7659882674982147`*^9}, {3.765998355817777*^9, 3.7659983627542305`*^9}, {
   3.766018378301735*^9, 3.766018380165749*^9}, {3.766023440416051*^9, 
   3.7660234487058773`*^9}, {3.7660246557668085`*^9, 3.7660246577634687`*^9}, 
   3.766064574553067*^9, {3.766072137868971*^9, 3.7660721391501713`*^9}, {
   3.766072861812249*^9, 3.766072865270935*^9}},
 CellLabel->
  "In[690]:=",ExpressionUUID->"bd6eee68-c180-4fa4-b588-1c180a692427"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "called", " ", "after", " ", "the", " ", "user", 
    " ", "make", " ", "an", " ", "infinite", " ", "input", " ", "reservoir"}],
    " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "their", " ", "pump", 
    " ", "options", " ", "and", " ", "creates", " ", "one"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"askAndCreateNewInfPump", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Create your pump!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the desired flow rate of your pump in \
\!\(\*SuperscriptBox[\(meters\), \(3\)]\)/second\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "flow", " ", "rate"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "what", " ", "the", " ", "user", " ", "presses", " ", "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "done"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "will", " ", "only", " ", "work", " ", "if", " ", "the", " ", 
             "input", " ", "is", " ", "in", " ", "the", " ", "correct", " ", 
             "format"}], "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "inputDynamic", "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "pump"}], " ", "*)"}], 
              "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"addInfPump", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"\"\<seq1\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"inputDynamic", ",", " ", 
                   RowBox[{
                    SuperscriptBox["\"\<Meters\>\"", "3"], "/", 
                    "\"\<Seconds\>\""}]}], "]"}]}], "\n", "\t\t\t\t\t", "]"}],
                ";", " ", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{"starts", " ", "the", " ", "display", " ", "screen"}],
                 " ", "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{"checkHeights", "[", "]"}], ";", "\n", "\t\t\t\t\t", 
               RowBox[{"displaySelected", "[", "]"}], ";"}], "\n", "\t\t\t\t",
               "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "}"}], "\n", "\t", "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765916418396222*^9, 3.7659164303073635`*^9}, {
   3.7659165920817003`*^9, 3.76591667940914*^9}, 3.765916867342412*^9, {
   3.7659169860240126`*^9, 3.765917091066064*^9}, {3.7659173353027954`*^9, 
   3.7659173508163033`*^9}, {3.765917414102066*^9, 3.765917421977006*^9}, {
   3.7659185646329517`*^9, 3.7659186046180067`*^9}, {3.7659735022169895`*^9, 
   3.7659735024483724`*^9}, {3.765973830798199*^9, 3.765973832833745*^9}, {
   3.7659738661865373`*^9, 3.7659738664966803`*^9}, {3.76597393797392*^9, 
   3.765973943439273*^9}, {3.7659741370265007`*^9, 3.7659741461880274`*^9}, {
   3.7659743011196413`*^9, 3.7659743706566706`*^9}, {3.765977036781438*^9, 
   3.7659771079710326`*^9}, {3.765977138021623*^9, 3.7659772326186275`*^9}, {
   3.7659775682115374`*^9, 3.7659775710788736`*^9}, {3.765978080393526*^9, 
   3.7659781296786757`*^9}, {3.7659781918267794`*^9, 3.7659782074620004`*^9}, 
   3.7659836337704973`*^9, {3.7659982261885157`*^9, 3.765998228322814*^9}, {
   3.7660183724976788`*^9, 3.7660183753781605`*^9}, 3.7660246724052787`*^9, 
   3.7660645801461115`*^9, {3.7660721480530577`*^9, 3.7660721557694516`*^9}, {
   3.766072869626001*^9, 3.76607287336159*^9}},
 CellLabel->
  "In[691]:=",ExpressionUUID->"03f1e616-4d7f-48bb-af65-80ea042b836c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"startDisplay", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"createAllStarOptions", "[", "]"}], ";", "\n", "\t ", 
     RowBox[{"createBuildOptions", "[", "]"}], ";", "\n", "\t ", 
     RowBox[{"displayNetwork", "[", 
      RowBox[{
      "\"\<Meters\>\"", ",", " ", "16", ",", " ", "\"\<Comic Sans MS\>\"", 
       ",", " ", "0.01"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7660234543816967`*^9, 3.766023476169419*^9}, {
  3.7660242065776634`*^9, 3.766024206896839*^9}, {3.766025103537846*^9, 
  3.7660251041492133`*^9}, {3.76607280818335*^9, 3.766072819506074*^9}, {
  3.7660728775024223`*^9, 3.7660728929272566`*^9}},
 CellLabel->
  "In[692]:=",ExpressionUUID->"f24d30e3-c5b9-403e-a2f4-4bba75c8a2d3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Display selected", "Subsubsection",
 CellChangeTimes->{{3.76607247902922*^9, 
  3.7660724866273565`*^9}},ExpressionUUID->"c7bbda94-3fca-4767-8fc4-\
fc3a8925d9c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "will", " ", "pop", " ", "up", " ", "a", " ", "dialog", " ", 
    "notebook", " ", "that", " ", "constantly", " ", "displays", " ", "the", 
    " ", "selected"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"displaySelected", "[", "]"}], " ", ":=", " ", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"selectedScreen", " ", "=", " ", "\n", "\t", 
       RowBox[{"CreateDialog", "[", 
        RowBox[{"{", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Selected: \>\"", " ", "<>", " ", "selected"}], ",", 
             " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}], 
             ",", " ", 
             RowBox[{"FontSize", " ", "\[Rule]", " ", "24"}]}], "]"}], "]"}], 
          "]"}], "}"}], "]"}]}], ";"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7660724882821074`*^9, 3.7660725397378073`*^9}, {
  3.766072575685276*^9, 3.7660727322192297`*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"9faa5175-ec39-46c9-a37d-8d7f09514233"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create Build Options", "Subsubsection",
 CellChangeTimes->{{3.7660165660483103`*^9, 3.766016584433138*^9}, {
  3.7660189618886185`*^9, 
  3.7660189621827974`*^9}},ExpressionUUID->"b2fdb2a6-ec3c-4687-b4cf-\
037fdae9645a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "creates", " ", "the", " ", "proper", " ", "options", " ", "screen", " ", 
    "based", " ", "on", " ", "what", " ", "is", " ", "selected"}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"createBuildOptions", "[", "]"}], " ", ":=", " ", "\n", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
       "numOfComps", ",", " ", "\n", "hasComps", ",", " ", "\n", 
        "optionsHeight", ",", " ", "\n", 
        RowBox[{"optionsBase", " ", "=", " ", "0"}], ",", " ", "\n", 
        RowBox[{"nextColor", " ", "=", " ", "White"}], ",", " ", "\n", 
        RowBox[{"buttonWidth", " ", "=", " ", 
         RowBox[{"windowSizeX", " ", "/", " ", "8"}]}], ",", " ", "\n", 
        RowBox[{"buttonHeight", " ", "=", " ", 
         RowBox[{"windowSizeY", " ", "/", " ", "10"}]}], ",", " ", "\n", 
        "counterStr"}], "\n", "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "closes", " ", "the", " ", "current", " ", "options", " ", "screen", 
        " ", "if", " ", "there", " ", "is", " ", "one"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{
       RowBox[{"NotebookClose", "[", "currentOptionsScreen", "]"}], ";", "\n",
        "\t", "\n", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{"else", " ", 
         RowBox[{"(", 
          RowBox[{
          "if", " ", "selected", " ", "is", " ", "a", " ", "sequence"}], 
          ")"}]}], "*)"}], "\n", "\t\t", 
       RowBox[{"numOfComps", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"masterPathList", "[", 
          RowBox[{"selected", ",", " ", "\"\<parts\>\""}], "]"}], "]"}]}], 
       ";", "\n", "\t\t", "\n", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "this", " ", "is", " ", "used", " ", "to", " ", "determine", " ", 
         "heights", " ", "of", " ", "the", " ", "buttons", " ", "and", " ", 
         "if", " ", "there", " ", "is", " ", "a", " ", "select", " ", "comps",
          " ", "button"}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"numOfComps", " ", "\[GreaterEqual]", " ", "1"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"hasComps", " ", "=", " ", "1"}], ",", "\n", "\t\t\t", 
         RowBox[{"hasComps", " ", "=", " ", "0"}]}], "\n", "\t\t", "]"}], ";",
        "\n", "\t\t", "\n", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{"this", " ", "makes", " ", "the", " ", "options", " ", 
         RowBox[{"screen", "'"}], "s", " ", "height", " ", "high", " ", 
         "enough", " ", "depending", " ", "on", " ", "if", " ", "there", " ", 
         "are", " ", "components", " ", "\n", "\t\t", "and", " ", "if", " ", 
         "the", " ", "sequence", " ", "already", " ", "has", " ", "an", " ", 
         "end"}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"masterPathList", "[", 
            RowBox[{"selected", ",", " ", "\"\<end\>\""}], "]"}], ",", " ", 
           "Null"}], "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"optionsHeight", " ", "=", " ", 
          RowBox[{
           RowBox[{"hasComps", " ", "*", " ", "buttonHeight"}], " ", "+", " ", 
           RowBox[{"7", " ", "*", " ", "buttonHeight"}]}]}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"optionsHeight", " ", "=", " ", 
          RowBox[{
           RowBox[{"hasComps", " ", "*", " ", "buttonHeight"}], " ", "+", " ", 
           RowBox[{"4", " ", "*", " ", "buttonHeight"}]}]}]}], "\n", "\t\t", 
        "]"}], ";", "\n", "\t\t", "\n", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "makes", " ", "the", " ", "options", " ", "screen", " ", "for", " ", 
         "a", " ", "sequence"}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"currentOptionsScreen", " ", "=", "\n", "\t\t\t", 
        RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", "\t\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Graphics", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "joins", " ", "the", " ", "\"\<attach\>\"", " ", "buttons", " ", 
              "with", " ", "the", " ", "other", " ", "buttons"}], " ", "*)"}],
             "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Join", "[", "\n", "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                "if", " ", "the", " ", "selected", " ", "sequence", " ", 
                 "has", " ", "no", " ", "end"}], ",", " ", 
                RowBox[{
                "these", " ", "\"\<attach\>\"", " ", "buttons", " ", "will", 
                 " ", "show", " ", "up"}]}], " ", "*)"}], "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"SameQ", "[", 
                  RowBox[{
                   RowBox[{"masterPathList", "[", 
                    RowBox[{"selected", ",", " ", "\"\<end\>\""}], "]"}], ",",
                    " ", "Null"}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", "\n", 
                 "\t\t\t\t\t\t\t", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "joins", " ", "the", " ", "proper", " ", "output", " ", 
                   "reservoir", " ", "buttons", " ", "with", " ", "the", " ", 
                   "other", " ", "buttons", " ", "depending", " ", "if", " ", 
                   "isInfinite", " ", "is", " ", "true"}], " ", "*)"}], "\n", 
                 "\t\t\t\t\t\t\t", 
                 RowBox[{"Join", "[", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "attaches", " ", "another", " ", "sequence", " ", "to", 
                    " ", "the", " ", "selected"}], " ", "*)"}], "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Attach sequence\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"createSeq", "[", 
                    RowBox[{"Null", ",", " ", "selected"}], "]"}], ";", " ", 
                    RowBox[{"createBuildOptions", "[", "]"}], ";", " ", 
                    RowBox[{"checkHeights", "[", "]"}]}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"hasComps", " ", "*", " ", "buttonHeight"}], " ", 
                    "+", " ", 
                    RowBox[{"6.5", " ", "*", " ", "buttonHeight"}]}]}], "}"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                    ",", "\n", "\t\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "attaches", " ", "a", " ", "split", " ", "to", " ", "the",
                     " ", "selected"}], "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Attach split\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{"askAndCreateSpl", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"hasComps", " ", "*", " ", "buttonHeight"}], " ", 
                    "+", " ", 
                    RowBox[{"5.5", " ", "*", " ", "buttonHeight"}]}]}], "}"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                    ","}], "\n", "\t\t\t\t\t\t\t\t", "}"}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t\t", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "determines", " ", "which", " ", "output", " ", 
                    "reservoir", " ", "button", " ", "to", " ", "include"}], 
                    " ", "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    "isInfinite", ",", "\n", "\t\t\t\t\t\t\t\t\t", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "makes", " ", "an", " ", "infinite", " ", "output", " ", 
                    "reservoir"}], " ", "*)"}], "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Attach output reservoir\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{"askAndCreateInfOutput", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"hasComps", " ", "*", " ", "buttonHeight"}], " ", 
                    "+", " ", 
                    RowBox[{"4.5", " ", "*", " ", "buttonHeight"}]}]}], "}"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t\t\t\t", "}"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "makes", " ", "a", " ", "general", " ", "output", " ", 
                    "reservoir"}], " ", "*)"}], "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Attach output reservoir\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{"askAndCreateGenOutput", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"hasComps", " ", "*", " ", "buttonHeight"}], " ", 
                    "+", " ", 
                    RowBox[{"4.5", " ", "*", " ", "buttonHeight"}]}]}], "}"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t\t\t\t", "}"}]}], "\n", 
                    "\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t\t", 
                  "]"}], ",", " ", 
                 RowBox[{"(*", " ", "else", " ", "*)"}], "\n", 
                 "\t\t\t\t\t\t\t", 
                 RowBox[{"{", "Null", "}"}]}], "\n", "\t\t\t\t\t\t", "]"}], 
               ",", "\n", "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "joins", " ", "the", " ", "select", " ", "comp", " ", 
                 "button", " ", "with", " ", "the", " ", "add", " ", "comp", 
                 " ", "buttons"}], " ", "*)"}], "\n", "\t\t\t\t\t\t", 
               RowBox[{
               "Join", "[", "\n", "\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"if", " ", "there", " ", "are", " ", "components"}],
                   ",", " ", 
                  RowBox[{
                  "this", " ", "will", " ", "make", " ", "the", " ", "select",
                    " ", "comp", " ", "button", " ", "show", " ", "up"}]}], 
                 " ", "*)"}], "\n", "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"hasComps", " ", "\[Equal]", " ", "1"}], ",", "\n",
                    "\t\t\t\t\t\t\t\t", 
                   RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Delete Comp\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{"askAndDeleteComp", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"4.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t\t\t", "}"}], ",", " ", 
                   RowBox[{"(*", " ", "else", " ", "*)"}], "\n", 
                   "\t\t\t\t\t\t\t\t", 
                   RowBox[{"{", "Null", "}"}]}], "\n", "\t\t\t\t\t\t\t", 
                  "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "calls", " ", "the", " ", "prompt", " ", "to", " ", "add", 
                    " ", "pipes"}], " ", "*)"}], "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Add Pipes\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{"askAndCreatePipes", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"3.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                   ",", "\n", "\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "calls", " ", "the", " ", "prompt", " ", "to", " ", "add",
                     " ", "a", " ", "valve"}], " ", "*)"}], "\n", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Add Valve\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{"askAndCreateValve", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"2.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                   ",", "\n", "\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "calls", " ", "the", " ", "prompt", " ", "to", " ", "add",
                     " ", "a", " ", "gate"}], " ", "*)"}], "\n", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Add Gate\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", 
                    RowBox[{"askAndCreateGate", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"1.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                   ",", "\n", "\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "pressed", " ", "when", " ", "the", " ", "user", " ", 
                    "does", " ", "not", " ", "want", " ", "to", " ", "add", 
                    " ", "any", " ", "more", " ", "sequences", " ", "or", " ",
                     "components"}], " ", "*)"}], "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Done\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}], ",", " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}], ",", " ", 
                    RowBox[{"FontColor", " ", "\[Rule]", " ", "nextColor"}]}],
                     "]"}], ",", " ", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"allSeqsComplete", "[", "]"}], ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"isDone", " ", "=", " ", "True"}], ";", " ", "\n",
                     "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"processSysMain", "[", "]"}], ";", " ", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "NotebookClose", "[", "currentOptionsScreen", "]"}], ";", 
                    " ", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"createRunOptions", "[", "]"}]}], ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", " ", "else", " ", "*)"}], "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"DialogNotebook", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "TextCell", "[", 
                    "\"\<Not all of your sequences have components!\>\"", 
                    "]"}], ",", " ", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"DefaultButton", "[", 
                    RowBox[{"DialogReturn", "[", "]"}], "]"}]}], "\n", 
                    "\t\t\t\t\t\t\t\t\t", "}"}], "]"}]}], "\n", 
                    "\t\t\t\t\t\t\t\t", "]"}], ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "\[Rule]", " ", 
                    RowBox[{"ColorNegate", "[", "nextColor", "]"}]}]}], "]"}],
                     ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"0.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}]}], 
                  "\n", "\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t", 
                "]"}]}], "\n", "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
             "\n", "\t\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "makes", " ", "the", " ", "proper", " ", "image", " ", "size"}],
               " ", "*)"}], "\[IndentingNewLine]", "\t\t\t\t\t", 
             RowBox[{"ImageSize", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"buttonWidth", ",", " ", 
                RowBox[{"optionsHeight", " ", "-", " ", "optionsBase"}]}], 
               "}"}]}], ",", " ", 
             RowBox[{"PlotRange", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "buttonWidth"}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"optionsBase", ",", " ", "optionsHeight"}], "}"}]}], 
               "}"}]}]}], "\n", "\t\t\t\t", "]"}], "}"}], ",", "\n", 
          "\t\t\t\t", "\n", "\t\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "makes", " ", "the", " ", "window", " ", "the", " ", "proper", " ",
             "size"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"WindowSize", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"buttonWidth", ",", " ", 
             RowBox[{"optionsHeight", " ", "-", " ", "optionsBase"}]}], 
            "}"}]}], ",", " ", "\n", "\t\t\t", 
          RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"WindowTitle", " ", "\[Rule]", " ", "\"\<Options\>\""}], 
          ",", "\n", "\t\t\t", 
          RowBox[{"WindowFloating", " ", "\[Rule]", " ", "False"}]}], 
         "\[IndentingNewLine]", "\t\t\t", "]"}]}], ";"}]}], "\n", "]"}]}], 
   "\n"}]}]], "Code",
 CellChangeTimes->{{3.7660167247448406`*^9, 3.766016791955855*^9}, {
   3.766016891224349*^9, 3.7660169287540045`*^9}, {3.766017015785231*^9, 
   3.7660170433016276`*^9}, 3.7660181960266476`*^9, {3.7660183325784516`*^9, 
   3.7660183356841474`*^9}, {3.766018473960881*^9, 3.7660184743956995`*^9}, {
   3.766018808317357*^9, 3.766018808834944*^9}, {3.766018847471633*^9, 
   3.766018902661024*^9}, {3.7660189727026916`*^9, 3.7660190460065994`*^9}, {
   3.7660191066882963`*^9, 3.76601911075442*^9}, {3.7660220387986755`*^9, 
   3.7660220423315887`*^9}, {3.766024035835362*^9, 3.766024041198022*^9}, 
   3.7660259087519236`*^9, {3.7660270906137094`*^9, 3.7660272818851347`*^9}, {
   3.76606470222756*^9, 3.76606470593966*^9}, {3.7660704514433637`*^9, 
   3.7660704620636873`*^9}, {3.766071066443823*^9, 3.766071086391142*^9}, {
   3.7660711323120766`*^9, 3.766071149881091*^9}, {3.7660712654093547`*^9, 
   3.766071265466089*^9}, {3.766073564057438*^9, 3.766073578598815*^9}, {
   3.766074501950218*^9, 3.7660745055455227`*^9}},
 CellLabel->
  "In[694]:=",ExpressionUUID->"7f57792c-cef3-46a0-ad6a-6cbbf0294f1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "to", " ", "select", " ", "a", 
    " ", "component", " ", "based", " ", "on", " ", "index"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"askAndDeleteComp", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"numOfComps", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"masterPathList", "[", 
         RowBox[{"selected", ",", " ", "\"\<parts\>\""}], "]"}], "]"}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the index of the component you would like to \
delete\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<(you currently have \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", "numOfComps", "]"}], " ", "<>", " ", 
             "\"\< components in this sequence)\>\""}], ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "index"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", "they", " ", "are", " ", "done"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "only", " ", "works", " ", "if", " ", "the", " ", "input", " ", 
             "is", " ", "in", " ", "the", " ", "correct", " ", "format"}], 
            " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"NumberQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{"inputDynamic", " ", "\[LessEqual]", " ", 
               RowBox[{"Length", "[", 
                RowBox[{"masterPathList", "[", 
                 RowBox[{"selected", ",", " ", "\"\<parts\>\""}], "]"}], 
                "]"}]}], " ", "&&", " ", 
              RowBox[{"inputDynamic", " ", "\[GreaterEqual]", " ", "1"}]}], 
             ",", "\n", "\t\t\t", "\n", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "changes", " ", "selected", " ", "to", " ", "the", " ", 
               "correct", " ", "form", " ", "and", " ", "resets", " ", "the", 
               " ", "options", " ", "screen"}], " ", "*)"}], "\n", "\t\t\t\t", 
             RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"deleteComp", "[", "inputDynamic", "]"}], ";", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"createBuildOptions", "[", "]"}], ";"}], "\n", 
              "\t\t\t\t", "]"}]}], "\t", "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "}"}], "]"}]}]}], "\n", "]"}], 
   "\t"}]}]], "Code",
 CellChangeTimes->{{3.765925931157856*^9, 3.765926057736308*^9}, {
   3.7659261093726187`*^9, 3.7659261121890526`*^9}, {3.7659261561923885`*^9, 
   3.7659261622990513`*^9}, {3.7659262083877583`*^9, 3.765926208875474*^9}, {
   3.76592625401674*^9, 3.765926344905654*^9}, {3.765926396551519*^9, 
   3.765926463411667*^9}, {3.765979872130762*^9, 3.7659801386978045`*^9}, {
   3.7659802007677794`*^9, 3.7659802009243326`*^9}, {3.76598026942412*^9, 
   3.7659802710188785`*^9}, 3.765983612658936*^9, {3.7659838809173355`*^9, 
   3.7659838815376835`*^9}, {3.7659839601812367`*^9, 
   3.7659839779705133`*^9}, {3.766009586843704*^9, 3.766009683488474*^9}, {
   3.7660097903516273`*^9, 3.766009795957662*^9}, {3.766009850261218*^9, 
   3.7660098528782225`*^9}, 3.766009883467404*^9, {3.7660168729572353`*^9, 
   3.766016875448544*^9}, {3.766017059417529*^9, 3.766017077859203*^9}, {
   3.7660171586221623`*^9, 3.7660171676206875`*^9}},
 CellLabel->
  "In[695]:=",ExpressionUUID->"8ba28e66-8ae5-4978-946c-696e0e0a953d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"deletes", " ", "the", " ", "selected", " ", "component"}], "*)"}],
   "\n", 
  RowBox[{
   RowBox[{"deleteComp", "[", "compIndex_", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "sets", " ", "newMap", " ", "to", " ", "the", " ", "current", " ", 
        "parts", " ", "map"}], " ", "*)"}], "\n", 
      RowBox[{"newMap", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"selected", ",", " ", "\"\<parts\>\""}], "]"}]}], "\n", "}"}],
      ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "drops", " ", "the", " ", "selected", " ", "component", " ", "from", 
       " ", "newMap"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"newMap", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"newMap", ",", " ", 
         RowBox[{"{", 
          RowBox[{"compIndex", ",", " ", "compIndex"}], "}"}]}], "]"}]}], ";",
       "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"re", "-", 
        RowBox[{
        "maps", " ", "the", " ", "selected", " ", "to", " ", "the", " ", 
         "newMap"}]}], " ", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"masterPathList", "[", 
        RowBox[{"selected", ",", " ", "\"\<parts\>\""}], "]"}], " ", "=", " ",
        "newMap"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7659051924096737`*^9, 3.7659052048164573`*^9}, {
  3.765905255408185*^9, 3.765905270715245*^9}, {3.7659053677539268`*^9, 
  3.7659053983311706`*^9}, {3.7659054370187154`*^9, 3.7659054425997677`*^9}, {
  3.7659055296589317`*^9, 3.765905578614996*^9}, {3.7659809004093924`*^9, 
  3.7659810163253646`*^9}, {3.7660170870116944`*^9, 3.766017114224943*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"4a181981-918b-483a-abe1-c9f4a4987c51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "to", " ", "create", " ", "a", 
    " ", "new", " ", "split"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreateSpl", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "newSplKey", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {{t, m, b}, merge \
pairs list} where\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<t is the number of sequences above the starting sequence\>\"",
             ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<m is 1 if the starting sequence continues and 0 if not\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<b is the number of sequences below the starting sequence\>\"",
             ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please refer to the merge pairs help below if you have \
questions\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "calls", " ", "the", " ", "merge", " ", "pairs", " ", "help"}], " ",
           "*)"}], "\n", "\t\t", 
         RowBox[{
          RowBox[{"Button", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Merge Pairs Help\>\"", ",", " ", 
              RowBox[{
              "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"mergePairsHelp", "[", "]"}]}], "\n", "\t\t", "]"}], 
          "\t\t", "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ",
             "when", " ", "they", " ", "are", " ", "done"}], " ", "*)"}], 
          "\n", "\t\t", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Done\>\"", ",", " ", 
              RowBox[{
              "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
             "]"}], ",", "\n", "\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "only", " ", "works", " ", "if", " ", "the", " ", "input", " ", 
              "is", " ", "in", " ", "the", " ", "correct", " ", "format"}], 
             " ", "*)"}], "\n", "\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]",
                 " ", "2"}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[Equal]", " ",
                 "3"}]}], ",", "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "creates", " ", "a", " ", "split", " ", "and", " ", "resets", 
                " ", "the", " ", "options", " ", "screen"}], " ", "*)"}], 
              "\n", "\t\t\t\t", 
              RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"createSpl", "[", 
                 RowBox[{"selected", ",", " ", 
                  RowBox[{"inputDynamic", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"inputDynamic", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"checkHeights", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
               "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}]}], 
        "\n", "\t", "}"}], "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765484440468402*^9, 3.7654845559099293`*^9}, {
   3.7654845934416375`*^9, 3.7654847750962257`*^9}, {3.765484866504967*^9, 
   3.7654849890425*^9}, {3.7654850765746336`*^9, 3.7654850991442924`*^9}, {
   3.7654878292167273`*^9, 3.7654878455660405`*^9}, {3.7654885546303263`*^9, 
   3.765488643781061*^9}, 3.765498103826089*^9, {3.7658215774201975`*^9, 
   3.765821584817891*^9}, {3.7658218464656725`*^9, 3.7658218863684072`*^9}, {
   3.7658225487494*^9, 3.765822567918968*^9}, {3.765822645981189*^9, 
   3.7658227033707657`*^9}, {3.765822737731737*^9, 3.7658227834041843`*^9}, {
   3.7658228366658354`*^9, 3.76582285302059*^9}, {3.765822974950919*^9, 
   3.7658229757607284`*^9}, {3.765907898987439*^9, 3.76590790835139*^9}, {
   3.765980170403962*^9, 3.7659801875321507`*^9}, {3.765980235115883*^9, 
   3.7659804420175424`*^9}, {3.76598312822054*^9, 3.765983205253924*^9}, {
   3.7659832469368267`*^9, 3.765983322573851*^9}, {3.7659834050608845`*^9, 
   3.765983409683315*^9}, 3.765983618504301*^9, {3.765983883093524*^9, 
   3.765983884384077*^9}, {3.7659839851552906`*^9, 3.765983986833802*^9}, {
   3.7659891771385517`*^9, 3.765989199233471*^9}, {3.7660113477944965`*^9, 
   3.766011404238551*^9}, {3.766011623931962*^9, 3.766011629550905*^9}, {
   3.766017560689329*^9, 3.7660175713498144`*^9}, {3.766020436769807*^9, 
   3.7660204374001513`*^9}, {3.7660240623943267`*^9, 3.766024062768318*^9}, {
   3.766025937565858*^9, 3.7660259501073165`*^9}, {3.7660262991557426`*^9, 
   3.7660263029535875`*^9}, 3.766026418641137*^9},
 CellLabel->
  "In[697]:=",ExpressionUUID->"e84192ca-ea66-4ec7-b63d-2eaad66e9069"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "how", " ", "many", 
    " ", "pipes", " ", "they", " ", "want", " ", "to", " ", "add", " ", "and",
     " ", "the", " ", "diameter", " ", "of", " ", "them"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreatePipes", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], 
       "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the number of pipes and the desired diameter in \
meters in the form\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<{number of pipes, diameter of pipes}\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "they", " ", "press", " ", "when", " ", 
           "they", " ", "are", " ", "done"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "only", " ", "works", " ", "if", " ", "the", " ", "input", " ", 
             "is", " ", "in", " ", "the", " ", "proper", " ", "format"}], " ",
             "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "2"}]}], ",", "\n", "\t\t\t", "\n", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "calls", " ", "the", " ", "add", " ", "pipes", " ", "function", 
               " ", "and", " ", "resets", " ", "the", " ", "options", " ", 
               "screen"}], " ", "*)"}], "\n", "\t\t\t\t", 
             RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"addPipes", "[", 
                RowBox[{"selected", ",", " ", 
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   "\"\<Meters\>\""}], "]"}]}], "]"}], ";", " ", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"createBuildOptions", "[", "]"}], ";"}], "\n", 
              "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
          "]"}]}], "\n", "\t", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.76590699425126*^9, 3.765907062234435*^9}, {
   3.765907139616483*^9, 3.765907198036211*^9}, 3.7659073518947096`*^9, {
   3.7659810642222395`*^9, 3.765981275923021*^9}, 3.765983621534198*^9, {
   3.765983885952877*^9, 3.7659838862660384`*^9}, {3.7659839953131027`*^9, 
   3.7659839956611996`*^9}, {3.766012212783491*^9, 3.7660122198505907`*^9}, {
   3.7660173037974663`*^9, 3.7660173377196865`*^9}, {3.7660173736016865`*^9, 
   3.766017396799671*^9}, {3.7660174849439178`*^9, 3.766017489690195*^9}, {
   3.7660176347429*^9, 3.7660176460965314`*^9}, {3.7660720280625315`*^9, 
   3.766072030569353*^9}},
 CellLabel->
  "In[698]:=",ExpressionUUID->"4c37662c-38f8-44b9-920d-9dbf7ce07e1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "to", " ", "input", " ", "the", 
    " ", "diameter", " ", "of", " ", "a", " ", "new", " ", "valve"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreateValve", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the desired diameter in meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "diameter"}], " ", "*)"}], " ", "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "they", " ", "press", " ", "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "done"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "only", " ", "works", " ", "if", " ", "the", " ", "input", " ", 
             "is", " ", "in", " ", "the", " ", "correct", " ", "format"}], 
            " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "inputDynamic", "]"}], ",", "\n", 
             "\t\t\t", "\n", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "adds", " ", "the", " ", "valve", " ", "and", " ", "resets", 
               " ", "the", " ", "options", " ", "screen"}], " ", "*)"}], "\n",
              "\t\t\t\t", 
             RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"addValve", "[", 
                RowBox[{"selected", ",", " ", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"inputDynamic", ",", " ", "\"\<Meters\>\""}], 
                  "]"}]}], "]"}], ";", " ", "\n", "\t\t\t\t\t", 
               RowBox[{"createBuildOptions", "[", "]"}], ";"}], "\n", 
              "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
          "]"}]}], "\n", "\t", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7659070120994945`*^9, 3.7659070473252945`*^9}, {
   3.765907207288458*^9, 3.7659072213289156`*^9}, 3.765907354019023*^9, {
   3.765981283322231*^9, 3.7659814366052556`*^9}, 3.765981467881604*^9, 
   3.7659836223540344`*^9, 3.7659838868564577`*^9, 3.7659839994729767`*^9, {
   3.766012226282383*^9, 3.766012234082531*^9}, {3.7660174988078084`*^9, 
   3.76601750068781*^9}, {3.7660721883701878`*^9, 3.7660721901103354`*^9}},
 CellLabel->
  "In[699]:=",ExpressionUUID->"cbe72cac-bc13-4bf7-8a53-fccf48d66d47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "to", " ", "input", " ", "the", 
    " ", "diameter", " ", "of", " ", "a", " ", "new", " ", "gate"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreateGate", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the desired diameter in meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "diameter"}], " ", "*)"}], " ", "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "they", " ", "press", " ", "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "done"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "only", " ", "works", " ", "if", " ", "the", " ", "input", " ", 
             "is", " ", "in", " ", "the", " ", "correct", " ", "format"}], 
            " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "inputDynamic", "]"}], ",", "\n", 
             "\t\t\t", "\n", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "adds", " ", "the", " ", "gate", " ", "and", " ", "resets", " ",
                "the", " ", "options", " ", "screen"}], " ", "*)"}], "\n", 
             "\t\t\t\t", 
             RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"addGate", "[", 
                RowBox[{"selected", ",", " ", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"inputDynamic", ",", " ", "\"\<Meters\>\""}], 
                  "]"}]}], "]"}], ";", " ", "\n", "\t\t\t\t\t", 
               RowBox[{"createBuildOptions", "[", "]"}], ";"}], "\n", 
              "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
          "]"}]}], "\n", "\t", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765907020749359*^9, 3.7659070495473356`*^9}, {
   3.765907231913618*^9, 3.765907234569501*^9}, 3.7659073550292892`*^9, {
   3.7659814752050476`*^9, 3.765981592070445*^9}, 3.7659836230122643`*^9, 
   3.765983887446879*^9, 3.765984003304755*^9, {3.766012237512351*^9, 
   3.7660122462988515`*^9}, {3.766017507090684*^9, 3.766017507894535*^9}, {
   3.7660721994139404`*^9, 3.7660722089268827`*^9}},
 CellLabel->
  "In[700]:=",ExpressionUUID->"7e6ab4d2-a6b2-489a-a94b-148f2199fa39"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "called", " ", "if", " ", "the", " ", "user", " ", 
    "chooses", " ", "general", " ", "at", " ", "the", " ", "beginning", " ", 
    "and", " ", "tries", " ", "to", " ", "create", " ", "an", " ", "output", 
    " ", "reservoir"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "the", " ", "output", 
    " ", "reservoir", " ", "options", " ", "and", " ", "creates", " ", 
    "one"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreateGenOutput", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Create an output reservoir!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {d, p, bv, mv, du} \
where\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<d is the distance from the free surface of the liquid to the \
top in meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<p is the gauge pressure of the reservoir in pascals (0 if \
unpressurized)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<bv is the volume of the lower liquid in \!\(\*SuperscriptBox[\
\(meters\), \(3\)]\)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<mv is the max volume of the reservoir in \
\!\(\*SuperscriptBox[\(meters\), \(3\)]\)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<du is the density of the upper fluid/gas in \
kilograms/\!\(\*SuperscriptBox[\(meter\), \(3\)]\) (0 if unpressurized)\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "5"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "reservoir"}], " ", "*)"}],
               "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"mapNewGenOutputReservoir", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"selected", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"0", ",", " ", "\"\<Meters\>\""}], "]"}], ",", "\n",
                  "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   "\"\<Meters\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   "\"\<Pascals\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                   SuperscriptBox["\"\<Meters\>\"", "3"]}], "]"}], ",", "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"0", ",", " ", 
                   SuperscriptBox["\"\<Meters\>\"", "3"]}], "]"}], ",", " ", 
                 "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
                   SuperscriptBox["\"\<Meters\>\"", "3"]}], "]"}], ",", " ", 
                 "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
                   RowBox[{"\"\<Kilograms\>\"", "/", 
                    SuperscriptBox["\"\<Meters\>\"", "3"]}]}], "]"}]}], "\n", 
                "\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t", 
               RowBox[{"checkHeights", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "}"}], "\n", "\t", "]"}], ";"}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765916046123908*^9, 3.765916068362429*^9}, 
   3.765916103521392*^9, {3.7659161948122234`*^9, 3.7659163570682507`*^9}, {
   3.765916391171039*^9, 3.7659164048863554`*^9}, {3.7659164899877634`*^9, 
   3.7659164990245924`*^9}, {3.7659165632667704`*^9, 
   3.7659165813663387`*^9}, {3.7659168683796377`*^9, 3.765916889378503*^9}, {
   3.765918017395361*^9, 3.7659181741780276`*^9}, {3.7659182043104353`*^9, 
   3.765918215890463*^9}, {3.7659184051086187`*^9, 3.7659185190807867`*^9}, {
   3.765973488112713*^9, 3.7659734963676596`*^9}, {3.765973892620807*^9, 
   3.7659739010845265`*^9}, {3.765974062792054*^9, 3.765974085040544*^9}, {
   3.7659744453289366`*^9, 3.765974445641074*^9}, {3.7659761533978853`*^9, 
   3.7659761603731976`*^9}, {3.7659763962303715`*^9, 
   3.7659764342297697`*^9}, {3.765976493435383*^9, 3.7659766688013835`*^9}, {
   3.765977550803069*^9, 3.765977553130872*^9}, {3.7659777870134287`*^9, 
   3.765977816968344*^9}, {3.765977892373601*^9, 3.765977924186504*^9}, {
   3.765978037021498*^9, 3.76597804408963*^9}, {3.7659781670866237`*^9, 
   3.765978173898763*^9}, {3.7659816594213085`*^9, 3.7659817056528864`*^9}, {
   3.7659818939013276`*^9, 3.765981906557516*^9}, 3.7659819405854654`*^9, {
   3.765982318060486*^9, 3.7659825368679447`*^9}, 3.7659836236445527`*^9, {
   3.7659838879475346`*^9, 3.765983889706835*^9}, {3.766024098738124*^9, 
   3.7660240991908817`*^9}, 3.766064756524369*^9, {3.766072214776413*^9, 
   3.7660722577473726`*^9}, {3.766077822841439*^9, 3.7660778413275805`*^9}, {
   3.766080959078344*^9, 3.766080959915326*^9}, {3.766081070589978*^9, 
   3.766081075241913*^9}, {3.7660811094549313`*^9, 3.7660811120923853`*^9}, {
   3.7660811664548883`*^9, 3.766081166566953*^9}},
 CellLabel->
  "In[701]:=",ExpressionUUID->"80e0ab1c-432b-4bf4-94b8-df8d7d0e0631"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "called", " ", "if", " ", "the", " ", "user", " ", 
    "chooses", " ", "infinite", " ", "at", " ", "the", " ", "beginning", " ", 
    "and", " ", "tries", " ", "to", " ", "create", " ", "an", " ", "output", 
    " ", "reservoir"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "the", " ", "output", 
    " ", "reservoir", " ", "options", " ", "and", " ", "creates", " ", 
    "one"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askAndCreateInfOutput", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Create an output reservoir!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {p, v} where\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           
           "\"\<p is the pressure of the reservoir in pascals (0 if \
unpressurized)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<v is the volume of the reservoir in \
\!\(\*SuperscriptBox[\(meters\), \(3\)]\)\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "2"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "reservoir"}], " ", "*)"}],
               "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{
               "mapNewUnboundedOutputReservoir", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"selected", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"1", ",", " ", "\"\<Meters\>\""}], "]"}], ",", " ", 
                 "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   "\"\<Pascals\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   SuperscriptBox["\"\<Meters\>\"", "3"]}], "]"}]}], "\n", 
                "\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t", 
               RowBox[{"checkHeights", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "}"}], "\n", "\t", "]"}], ";"}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765916046123908*^9, 3.765916068362429*^9}, 
   3.765916103521392*^9, {3.7659161948122234`*^9, 3.7659163570682507`*^9}, {
   3.765916391171039*^9, 3.7659164048863554`*^9}, {3.7659164899877634`*^9, 
   3.7659164990245924`*^9}, {3.7659165632667704`*^9, 
   3.7659165813663387`*^9}, {3.7659168683796377`*^9, 3.765916889378503*^9}, {
   3.765918017395361*^9, 3.7659181741780276`*^9}, {3.7659182043104353`*^9, 
   3.765918215890463*^9}, {3.7659184051086187`*^9, 3.7659185190807867`*^9}, {
   3.765973488112713*^9, 3.7659734963676596`*^9}, {3.7659738612058325`*^9, 
   3.7659738623927*^9}, {3.76597392530678*^9, 3.7659739315181847`*^9}, {
   3.7659741141397142`*^9, 3.765974129305153*^9}, {3.7659742609620557`*^9, 
   3.7659742783665075`*^9}, {3.765974384508625*^9, 3.7659744404190435`*^9}, {
   3.7659746455717373`*^9, 3.7659746466568427`*^9}, {3.765974820834981*^9, 
   3.7659748601937017`*^9}, {3.7659766799226303`*^9, 
   3.7659767549898567`*^9}, {3.765976794827276*^9, 3.7659768682322097`*^9}, {
   3.765977566417308*^9, 3.765977580481719*^9}, {3.7659778667860565`*^9, 
   3.7659778822586713`*^9}, {3.7659779497680817`*^9, 3.765977997051407*^9}, 
   3.765978104869073*^9, {3.7659817702880125`*^9, 3.7659817704924655`*^9}, {
   3.7659825761309147`*^9, 3.765982752883189*^9}, 3.765983624284872*^9, 
   3.7659838902633505`*^9, {3.7659845145204506`*^9, 3.765984514658081*^9}, {
   3.7660241110362315`*^9, 3.766024111687459*^9}, 3.766064759275977*^9, {
   3.766072263777981*^9, 3.7660722703605013`*^9}, {3.7660736014900556`*^9, 
   3.7660736021732216`*^9}, {3.766077661361295*^9, 3.766077665191325*^9}, {
   3.7660778054031553`*^9, 3.766077813831852*^9}, {3.76607896602705*^9, 
   3.7660789707569103`*^9}},
 CellLabel->
  "In[702]:=",ExpressionUUID->"7ffa2dcf-1822-477b-b5d2-f92bd71b02f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "goes", " ", "through", " ", "the", " ", "masterPathList", 
    " ", "and", " ", "checks", " ", "if", " ", "any", " ", "sequences", " ", 
    RowBox[{"don", "'"}], "t", " ", "have", " ", "heights"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"checkHeights", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"counter", ",", "\n", "nextKey", ",", "\n", 
       RowBox[{"noHeightFound", " ", "=", " ", "False"}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "goes", " ", "through", " ", "masterPathList", " ", "and", " ", "looks",
        " ", "for", " ", "any", " ", "sequences", " ", "without", " ", "a", 
       " ", "height"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"counter", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"counter", " ", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "masterPathList", "]"}]}], ",", " ", 
        RowBox[{"counter", "++"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"nextKey", " ", "=", " ", 
          RowBox[{
           RowBox[{"Keys", "[", "masterPathList", "]"}], "[", 
           RowBox[{"[", "counter", "]"}], "]"}]}], ";", "\n", "\t\t", "\n", 
         "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"if", " ", "it", " ", "finds", " ", "one"}], ",", " ", 
           RowBox[{
           "it", " ", "asks", " ", "the", " ", "user", " ", "to", " ", "set", 
            " ", "the", " ", "height"}]}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"masterPathList", "[", "nextKey", "]"}], "[", 
              "\"\<attr\>\"", "]"}], "[", "\"\<height\>\"", "]"}], " ", "===",
             " ", "Null"}], ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"askSetHeight", "[", "nextKey", "]"}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"noHeightFound", " ", "=", " ", "True"}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"Break", "[", "]"}], ";"}]}], "\n", "\t\t", "]"}]}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "noHeightFound"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"startDisplay", "[", "]"}], ";"}]}], "\n", "\t", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7659888788143826`*^9, 3.765988939401297*^9}, {
   3.7659892841772366`*^9, 3.7659893126361513`*^9}, {3.7659893528535852`*^9, 
   3.7659893578920765`*^9}, {3.765989504053184*^9, 3.765989510787138*^9}, {
   3.76599202309925*^9, 3.765992025938651*^9}, {3.76599309645129*^9, 
   3.765993144440946*^9}, {3.765998322670437*^9, 3.7659983281816945`*^9}, {
   3.765998411730234*^9, 3.7659984146035852`*^9}, {3.7659984592042875`*^9, 
   3.7659985359400215`*^9}, {3.766024611843749*^9, 3.7660246197196856`*^9}, {
   3.7660251586644044`*^9, 3.7660252274045863`*^9}, 3.7660255919637156`*^9},
 CellLabel->
  "In[703]:=",ExpressionUUID->"7ba87a15-f6e1-442e-977c-5c1f44305563"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "to", " ", "input", " ", "a", " ",
     "height", " ", "for", " ", "a", " ", "sequence"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askSetHeight", "[", "key_", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "returns", " ", "true", " ", "if", " ", "it", " ", "is", " ", 
        "supposed", " ", "to", " ", "continue", " ", "the", " ", "previous", 
        " ", "sequence"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"findHighMidLow", "[", "key", "]"}], " ", "\[Equal]", " ", 
         "2"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "key", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}], 
           "]"}], " ", "=", " ", 
          RowBox[{"masterPathList", "[", 
           RowBox[{
            RowBox[{"masterPathList", "[", 
             RowBox[{
              RowBox[{"masterPathList", "[", 
               RowBox[{"key", ",", " ", "\"\<start\>\""}], "]"}], ",", " ", 
              "\"\<start\>\""}], "]"}], ",", " ", "\"\<attr\>\"", ",", " ", 
            "\"\<height\>\""}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"checkHeights", "[", "]"}]}], ",", "\n", "\t", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ",
          "*)"}], "\n", "\t\t", 
        RowBox[{"CreateDialog", "[", 
         RowBox[{"{", "\n", "\t\t", "\n", "\t\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"TextCell", "[", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{
              "\"\<Please insert the desired height of \>\"", " ", "<>", " ", 
               "key", " ", "<>", " ", "\"\< in meters\>\""}], ",", " ", 
              RowBox[{
              "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
             "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
             "height"}], " ", "*)"}], " ", "\n", "\t\t\t", 
           RowBox[{"InputField", "[", 
            RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
           "\n", "\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "the", " ", "button", " ", "they", " ", "press", " ", "when", " ", 
             RowBox[{"they", "'"}], "re", " ", "done"}], " ", "*)"}], "\n", 
           "\t\t\t", 
           RowBox[{"Button", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Done\>\"", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}],
               "]"}], ",", "\n", "\t\t", "\n", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "returns", " ", "true", " ", "if", " ", "the", " ", "height", 
               " ", "is", " ", "supposed", " ", "to", " ", "be", " ", "be", 
               " ", "high", " ", "and", " ", "the", " ", "input", " ", "is"}],
               " ", "*)"}], "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"NumberQ", "[", "inputDynamic", "]"}], " ", "&&", 
                 " ", 
                 RowBox[{
                  RowBox[{"findHighMidLow", "[", "key", "]"}], " ", 
                  "\[Equal]", " ", "1"}], " ", "&&", " ", 
                 RowBox[{"inputDynamic", " ", ">", " ", 
                  RowBox[{"QuantityMagnitude", "[", 
                   RowBox[{"masterPathList", "[", 
                    RowBox[{
                    RowBox[{"masterPathList", "[", 
                    RowBox[{
                    RowBox[{"masterPathList", "[", 
                    RowBox[{"key", ",", " ", "\"\<start\>\""}], "]"}], ",", 
                    " ", "\"\<start\>\""}], "]"}], ",", " ", "\"\<attr\>\"", 
                    ",", " ", "\"\<height\>\""}], "]"}], "]"}]}]}], ",", "\n",
                 "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"setHeight", "[", 
                  RowBox[{"key", ",", " ", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"inputDynamic", ",", " ", "\"\<Meters\>\""}], 
                    "]"}]}], "]"}], ";"}]}], "\t\t\t\t", "\n", "\t\t\t\t", 
               "]"}], ";", "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "returns", " ", "true", " ", "if", " ", "the", " ", "height", 
                " ", "is", " ", "supposed", " ", "to", " ", "be", " ", "be", 
                " ", "low", " ", "and", " ", "the", " ", "input", " ", "is"}],
                " ", "*)"}], "\n", "\t\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"NumberQ", "[", "inputDynamic", "]"}], " ", "&&", 
                 " ", 
                 RowBox[{
                  RowBox[{"findHighMidLow", "[", "key", "]"}], " ", 
                  "\[Equal]", " ", "3"}], " ", "&&", " ", 
                 RowBox[{"inputDynamic", " ", "<", " ", 
                  RowBox[{"QuantityMagnitude", "[", 
                   RowBox[{"masterPathList", "[", 
                    RowBox[{
                    RowBox[{"masterPathList", "[", 
                    RowBox[{
                    RowBox[{"masterPathList", "[", 
                    RowBox[{"key", ",", " ", "\"\<start\>\""}], "]"}], ",", 
                    " ", "\"\<start\>\""}], "]"}], ",", " ", "\"\<attr\>\"", 
                    ",", " ", "\"\<height\>\""}], "]"}], "]"}]}]}], ",", "\n",
                 "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"setHeight", "[", 
                  RowBox[{"key", ",", " ", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"inputDynamic", ",", " ", "\"\<Meters\>\""}], 
                    "]"}]}], "]"}], ";"}]}], "\n", "\t\t\t\t", "]"}], ";", 
              "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"returns", " ", "true", " ", "if", " ", "it", " ", 
                RowBox[{"doesn", "'"}], "t", " ", "matter", " ", "what", " ", 
                "the", " ", "height", " ", "is"}], " ", "*)"}], "\n", 
              "\t\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"NumberQ", "[", "inputDynamic", "]"}], " ", "&&", 
                 " ", 
                 RowBox[{
                  RowBox[{"findHighMidLow", "[", "key", "]"}], " ", 
                  "\[Equal]", " ", "4"}]}], ",", "\n", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"setHeight", "[", 
                  RowBox[{"key", ",", " ", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"inputDynamic", ",", " ", "\"\<Meters\>\""}], 
                    "]"}]}], "]"}], ";"}]}], "\n", "\t\t\t\t", "]"}], ";", 
              "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "checks", " ", "the", " ", "heights", " ", "and", " ", 
                "closes", " ", "the", " ", "dialog", " ", "window"}], " ", 
               "*)"}], "\n", "\t\t\t\t", 
              RowBox[{"checkHeights", "[", "]"}], ";", "\n", "\t\t\t\t", 
              RowBox[{"DialogReturn", "[", "Null", "]"}]}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], 
            "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], "]"}]}], "\n", "\t",
        "]"}]}]}], "\[IndentingNewLine]", "]"}], "\t"}]}]], "Code",
 CellChangeTimes->{{3.7659895148074245`*^9, 3.76598953345152*^9}, {
   3.7659905565745726`*^9, 3.76599056914894*^9}, {3.765990614955427*^9, 
   3.76599065284412*^9}, 3.765990723772382*^9, {3.765990775615758*^9, 
   3.765990917275869*^9}, {3.7659913201031094`*^9, 3.7659913207823024`*^9}, {
   3.7659914331218357`*^9, 3.7659914930286074`*^9}, {3.765991624977528*^9, 
   3.7659916666411095`*^9}, {3.76599176333848*^9, 3.765991789558317*^9}, {
   3.7659922494528294`*^9, 3.765992255331105*^9}, {3.7659923155899105`*^9, 
   3.7659923175596447`*^9}, {3.7659923675898333`*^9, 
   3.7659923689472294`*^9}, {3.7659924035656414`*^9, 
   3.7659924145502577`*^9}, {3.765992722415842*^9, 3.765992860654804*^9}, {
   3.7659929010517473`*^9, 3.765992932817607*^9}, {3.765993009760779*^9, 
   3.765993012887415*^9}, 3.7659931145558634`*^9, {3.765993733006509*^9, 
   3.7659938332523556`*^9}, {3.7659952117354064`*^9, 
   3.7659952733765345`*^9}, {3.7659953138675385`*^9, 
   3.7659953339178877`*^9}, {3.7659953757781*^9, 3.765995398013628*^9}, {
   3.765998426307248*^9, 3.7659984364590936`*^9}, {3.76600920602824*^9, 
   3.7660092409677906`*^9}, {3.7660102299729004`*^9, 3.7660102562915125`*^9}, 
   3.7660117588630714`*^9, {3.7660236816233244`*^9, 3.766023698086295*^9}},
 CellLabel->
  "In[704]:=",ExpressionUUID->"90be2653-1534-4ee2-846d-9e35889aa66a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "an", " ", "index", " ", "of", " ", "sorts", " ", "that", 
    " ", "is", " ", "used", " ", "in", " ", "askSetHeight"}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "1", " ", "cooresponds", " ", "to", " ", "a", " ", "sequence", 
    " ", "that", " ", "is", " ", "intended", " ", "to", " ", "be", " ", 
    "above", " ", "the", " ", "previous", " ", "sequence"}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "2", " ", "cooresponds", " ", "to", " ", "a", " ", "sequence", 
    " ", "that", " ", "is", " ", "intended", " ", "to", " ", "be", " ", "a", 
    " ", "continuation", " ", "of", " ", "the", " ", "previous", " ", 
    "sequence"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "3", " ", "cooresponds", " ", "to", " ", "a", " ", "sequence", 
    " ", "that", " ", "is", " ", "intended", " ", "to", " ", "be", " ", 
    "below", " ", "the", " ", "previous", " ", "sequence"}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "4", " ", "cooresponds", " ", "to", " ", "a", " ", "sequence", 
    " ", "that", " ", "is", " ", "not", " ", "restricted"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"findHighMidLow", "[", "key_", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"startKey", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"key", ",", " ", "\"\<start\>\""}], "]"}]}], "\n", "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"key", " ", "\[Equal]", " ", "\"\<seq1\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"Return", "[", "4", "]"}]}], "\n", "\t", "]"}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determines", " ", "if", " ", "the", " ", "key", " ", "before", " ", 
        "the", " ", "input", " ", "is", " ", "a", " ", "split"}], " ", "*)"}],
       "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getPathType", "[", "startKey", "]"}], " ", "\[Equal]", " ", 
         "\"\<spl\>\""}], ",", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"returns", " ", "1", " ", "if", " ", "above"}], ",", " ", 
          RowBox[{"2", " ", "if", " ", "continue"}], ",", " ", 
          RowBox[{"and", " ", "3", " ", "if", " ", "below"}]}], " ", "*)"}], 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"masterPathList", "[", 
             RowBox[{
              RowBox[{"masterPathList", "[", 
               RowBox[{"key", ",", " ", "\"\<start\>\""}], "]"}], ",", " ", 
              "\"\<branches\>\""}], "]"}], ",", " ", "key"}], "]"}], "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "]"}], "]"}], ",", 
        "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t", 
        RowBox[{"Return", "[", "4", "]"}]}], "\n", "\t", "]"}]}]}], "\n", " ",
     "]"}], " "}]}]], "Code",
 CellChangeTimes->{{3.765989722478981*^9, 3.765989889736595*^9}, {
  3.7659899528358297`*^9, 3.765990012800587*^9}, {3.7659900454203415`*^9, 
  3.7659901486053963`*^9}, {3.7659902351728597`*^9, 3.7659902959434404`*^9}, {
  3.765990427535738*^9, 3.7659904785233717`*^9}, {3.765993600471223*^9, 
  3.7659937087434015`*^9}, {3.7659939219421883`*^9, 3.7659939232047873`*^9}, {
  3.7659939734524097`*^9, 3.7659940443158617`*^9}, {3.7659942135213118`*^9, 
  3.765994329148419*^9}, {3.765994363835301*^9, 3.76599441985548*^9}, {
  3.765994474035529*^9, 3.7659946027233763`*^9}, {3.7659947367090187`*^9, 
  3.765994785775388*^9}, {3.7659980990545244`*^9, 3.7659981886010237`*^9}},
 CellLabel->
  "In[705]:=",ExpressionUUID->"237ecb52-3b09-4530-b10c-0fec3c0392b6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create New Run Options", "Subsubsection",
 CellChangeTimes->{{3.7660165875119057`*^9, 
  3.76601659339118*^9}},ExpressionUUID->"ad3bd094-ca62-41ca-a480-\
645d20cba0fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"creates", " ", "the", " ", "run", " ", "options", " ", "menu"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"createRunOptions", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"buttonWidth", " ", "=", " ", 
        RowBox[{"windowSizeX", " ", "/", " ", "8"}]}], ",", " ", "\n", 
       RowBox[{"buttonHeight", " ", "=", " ", 
        RowBox[{"windowSizeY", " ", "/", " ", "5"}]}], ",", " ", "\n", 
       "windowHeight"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "closes", " ", "the", " ", "current", " ", "Run", " ", "Options", " ", 
       "screen", " ", "if", " ", "there", " ", "is", " ", "one"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"NotebookClose", "[", "currentRunOptionsScreen", "]"}], ";", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "there", " ", "will", " ", "be", " ", "at", " ", "least", " ", "4", 
        " ", "buttons"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"windowHeight", " ", "=", " ", 
       RowBox[{"2", " ", "*", " ", "buttonHeight"}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "there", " ", "will", " ", "be", " ", "two", " ", "more", " ", 
        "buttons", " ", "if", " ", "the", " ", "user", " ", "chose", " ", 
        "to", " ", "create", " ", "a", " ", "general", " ", "setup"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "isInfinite"}], ",", "\n", "\t\t", 
        RowBox[{"windowHeight", " ", "=", " ", 
         RowBox[{"windowHeight", " ", "+", " ", "buttonHeight"}]}]}], "\n", 
       "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "the", " ", "run", " ", "options", " ", "screen"}], 
       " ", "*)"}], "\n", "\t", 
      RowBox[{"currentRunOptionsScreen", " ", "=", "\n", "\t\t", 
       RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Graphics", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Join", "[", "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "isInfinite"}], ",", "\n", "\t\t\t\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "these", " ", "are", " ", "the", " ", "extra", " ", 
                  "buttons", " ", "if", " ", "the", " ", "user", " ", "chose",
                   " ", "a", " ", "general", " ", "setup"}], " ", "*)"}], 
                "\n", "\t\t\t\t\t\t", 
                RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "this", " ", "prompts", " ", "the", " ", "user", " ", "to", 
                   " ", "modify", " ", "the", " ", "pressure", " ", "of", " ",
                    "a", " ", "reservoir"}], " ", "*)"}], "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Modify gauge pressure\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], ",", 
                    " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                    ",", " ", 
                    RowBox[{"askModifyPressure", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "\[Rule]", " ", "White"}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"2.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                  ",", "\n", "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "this", " ", "creates", " ", "a", " ", "dialog", " ", 
                    "notebook", " ", "that", " ", "shows", " ", "the", " ", 
                    "required", " ", "head", " ", "value"}], " ", "*)"}], 
                  "\n", "\t\t\t\t\t\t", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Calculate required head value\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], ",", 
                    " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                    ",", " ", 
                    RowBox[{"showRequiredHeadValue", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "\[Rule]", " ", "White"}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"3", " ", "*", " ", 
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}]}], ",", " ", 
                    RowBox[{"2.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                  ","}], "\n", "\t\t\t\t\t\t", "}"}], ",", "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"{", "Null", "}"}]}], "\n", "\t\t\t\t\t", "]"}], ",", 
              "\n", "\t\t\t\t\t", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "this", " ", "calls", " ", "the", " ", "modify", " ", "pump", 
                 " ", "functions", " ", "for", " ", "the", " ", "user", " ", 
                 "to", " ", "change", " ", "their", " ", "pump", " ", 
                 "options"}], " ", "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Modify pump\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], ",", 
                    " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                    ",", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"containsPump", "[", "\"\<seq1\>\"", "]"}], ",", 
                    " ", 
                    RowBox[{"pickPumpAsk", "[", "]"}]}], "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "\[Rule]", " ", "White"}]}], 
                   "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"1.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                  ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                ",", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "this", " ", "allows", " ", "the", " ", "user", " ", "to", 
                  " ", "calculate", " ", "the", " ", "differential", " ", 
                  "pressure", " ", "between", " ", "two", " ", "sequences"}], 
                 " ", "*)"}], "\n", "\t\t\t\t\t", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Transfer fluid\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], ",", 
                    " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                    ",", " ", 
                    RowBox[{"pickTransferFluid", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "\[Rule]", " ", "White"}]}], 
                   "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"3", " ", "*", " ", 
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}]}], ",", " ", 
                    RowBox[{"1.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                  ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                ",", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "this", " ", "allows", " ", "the", " ", "user", " ", "to", 
                  " ", "calculate", " ", "the", " ", "differential", " ", 
                  "pressure", " ", "between", " ", "two", " ", "sequences"}], 
                 " ", "*)"}], "\n", "\t\t\t\t\t", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Calculate differential pressure\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], ",", 
                    " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                    ",", " ", 
                    RowBox[{"askFindDiffPress", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "\[Rule]", " ", "White"}]}], 
                   "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                    RowBox[{"0.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                  ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                ",", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "this", " ", "allows", " ", "the", " ", "user", " ", "to", 
                  " ", "change", " ", "a", " ", "valve", " ", "or", " ", 
                  "gate"}], " ", "*)"}], "\n", "\t\t\t\t\t", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Change comp diameter\>\"", ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], ",", 
                    " ", 
                    RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                    ",", " ", 
                    RowBox[{"askComp", "[", "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], 
                    "}"}]}], ",", " ", 
                    RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "\[Rule]", " ", "White"}]}], 
                   "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"3", " ", "*", " ", 
                    RowBox[{"buttonWidth", " ", "/", " ", "2"}]}], ",", " ", 
                    RowBox[{"0.5", " ", "*", " ", "buttonHeight"}]}], "}"}], 
                  ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], 
                ","}], "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", "}"}]}], "\n", 
             "\t\t\t\t", "]"}], "\n", "\t\t\t\t", ",", "\n", "\t\t\t\t", "\n",
             "\t\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "makes", " ", "the", " ", "graphics", " ", "the", " ", "proper", 
              " ", "size"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"ImageSize", " ", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", " ", "*", " ", "buttonWidth"}], ",", " ", 
               "windowHeight"}], "}"}]}], ",", " ", 
            RowBox[{"PlotRange", " ", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"2", " ", "*", " ", "buttonWidth"}]}], "}"}], ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "windowHeight"}], "}"}]}], "}"}]}]}], 
           "\n", "\t\t\t", "]"}], "}"}], ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"palette", " ", "options"}], " ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"WindowSize", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", " ", "*", " ", "buttonWidth"}], ",", " ", 
            "windowHeight"}], "}"}]}], ",", " ", "\n", "\t\t\t", 
         RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"WindowTitle", " ", "\[Rule]", " ", "\"\<Run Options\>\""}], 
         ",", "\n", "\t\t\t", 
         RowBox[{"WindowFloating", " ", "\[Rule]", " ", "False"}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765904439994963*^9, 3.7659044483047733`*^9}, 
   3.7659126492392044`*^9, {3.765915287309128*^9, 3.7659153388293037`*^9}, {
   3.7659154609537*^9, 3.7659154702348433`*^9}, {3.7659195676498404`*^9, 
   3.7659196079979243`*^9}, {3.765919892249687*^9, 3.7659198969231873`*^9}, {
   3.7659269966787405`*^9, 3.765927020950778*^9}, {3.766000381221109*^9, 
   3.7660004484752035`*^9}, {3.766000478519844*^9, 3.7660005242874603`*^9}, {
   3.7660006928795156`*^9, 3.766000753978099*^9}, {3.7660007913239655`*^9, 
   3.7660007979861755`*^9}, {3.7660008352135825`*^9, 
   3.7660008788598704`*^9}, {3.7660009306702957`*^9, 
   3.7660010264132357`*^9}, {3.7660011115195866`*^9, 
   3.7660011497184286`*^9}, {3.7660012222402177`*^9, 3.766001259972329*^9}, {
   3.7660022072548475`*^9, 3.766002423460207*^9}, {3.766002799341133*^9, 
   3.7660028077436323`*^9}, {3.7660029326216307`*^9, 
   3.7660030073009195`*^9}, {3.766003071687683*^9, 3.766003074596924*^9}, {
   3.766011767999634*^9, 3.766011863753532*^9}, {3.766011902538787*^9, 
   3.7660120766241813`*^9}, {3.766012461252102*^9, 3.7660125976373167`*^9}, {
   3.766012699402136*^9, 3.766012707895422*^9}, {3.7660127441953325`*^9, 
   3.7660127958950553`*^9}, {3.766013305514838*^9, 3.7660134344190755`*^9}, {
   3.766013471782143*^9, 3.766013472169112*^9}, {3.7660135988283157`*^9, 
   3.766013599101615*^9}, {3.7660137576265907`*^9, 3.766013765030814*^9}, {
   3.7660139597170763`*^9, 3.7660139881909466`*^9}, {3.766014494879925*^9, 
   3.7660145806186123`*^9}, {3.7660150889709578`*^9, 
   3.7660153335617704`*^9}, {3.7660153703523703`*^9, 
   3.7660153817488933`*^9}, {3.766019291330421*^9, 3.7660192995015936`*^9}, {
   3.766019341620946*^9, 3.7660194687867928`*^9}, {3.766019505403884*^9, 
   3.766019505632273*^9}, {3.7660196364055047`*^9, 3.7660196377279396`*^9}, {
   3.7660196722037573`*^9, 3.7660196789187994`*^9}, {3.76602023433228*^9, 
   3.7660202353096604`*^9}, {3.7660203821050425`*^9, 
   3.7660203939563475`*^9}, {3.766070477177342*^9, 3.766070484872799*^9}, {
   3.766073517962903*^9, 3.766073544478494*^9}},
 CellLabel->
  "In[706]:=",ExpressionUUID->"2bb74e5a-4d4e-4b30-87d9-98f2b301df9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "prompts", " ", "the", " ", "user", " ", "for", " ", "which", " ", 
    "component", " ", "they", " ", "would", " ", "like", " ", "to", " ", 
    "change"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askComp", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please input the index of the component you would like to \
change\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "diameter"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", "done"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"DialogReturn", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"inputDynamic", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"masterPathList", "[", 
                  RowBox[{"selected", ",", " ", "\"\<parts\>\""}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"inputDynamic", ",", " ", "1"}], "]"}], "]"}], ",", 
                " ", "inputDynamic"}], "}"}]}], ";", "\n", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "only", " ", "works", " ", "if", " ", "input", " ", "is", " ", 
               "in", " ", "the", " ", "correct", " ", "format"}], " ", "*)"}],
              "\n", "\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NumberQ", "[", 
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "&&", " ", 
                RowBox[{
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "\[LessEqual]", " ", 
                 RowBox[{"Length", "[", 
                  RowBox[{"masterPathList", "[", 
                   RowBox[{"selected", ",", " ", "\"\<parts\>\""}], "]"}], 
                  "]"}]}], " ", "&&", " ", 
                RowBox[{
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "\[GreaterEqual]", " ",
                  "1"}]}], ",", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
               RowBox[{"Switch", "[", 
                RowBox[{
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t\t\t\t", 
                 "\n", "\t\t\t\t\t\t", "\"\<V\>\"", ",", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "prompts", " ", "the", " ", "user", " ", "to", " ", 
                   "change", " ", "the", " ", "valve", " ", "diameter"}], " ",
                   "*)"}], "\n", "\t\t\t\t\t\t", 
                 RowBox[{"askChangeValveDiameter", "[", 
                  RowBox[{"inputDynamic", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\n", 
                 "\t\t\t\t\t", "\n", "\t\t\t\t\t\t", "\"\<G\>\"", ",", "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{
                   "if", " ", "it", " ", "is", " ", "a", " ", "gate"}], ",", 
                   " ", 
                   RowBox[{"negates", " ", "it"}]}], " ", "*)"}], "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"negateGate", "[", 
                   RowBox[{"selected", ",", " ", 
                    RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", "\n", 
                  "\t\t\t\t\t\t", 
                  RowBox[{"processSysMain", "[", "]"}], ";"}]}], "\n", 
                "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
            "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "}"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.766019641517804*^9, 3.766019648767415*^9}, {
   3.7660196831046047`*^9, 3.766019706422209*^9}, {3.7660197626827345`*^9, 
   3.7660197939361625`*^9}, {3.766019824517379*^9, 3.7660198877043686`*^9}, {
   3.7660200891196404`*^9, 3.7660201154741783`*^9}, {3.7660201828080835`*^9, 
   3.766020205119422*^9}, {3.766020304082695*^9, 3.7660203042233458`*^9}, {
   3.7660206793533354`*^9, 3.7660206902521863`*^9}, {3.7660208266323924`*^9, 
   3.7660208680745792`*^9}, {3.7660218684476576`*^9, 3.7660218719084005`*^9}, 
   3.766021930049863*^9, {3.766073644658351*^9, 3.7660737168881207`*^9}, {
   3.7660771067971225`*^9, 3.7660771952191467`*^9}, {3.7660774587293186`*^9, 
   3.7660774630987167`*^9}, {3.7660781068981123`*^9, 3.766078187112194*^9}, {
   3.7660782991194673`*^9, 3.766078352716416*^9}, {3.766078517619968*^9, 
   3.7660785612154045`*^9}},
 CellLabel->
  "In[707]:=",ExpressionUUID->"d5cb9310-fe06-4fc0-b224-1901f18c3311"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "the", " ", "comp", " ", "inputted", " ", "is", " ", "a", " ", 
     "valve"}], ",", " ", 
    RowBox[{
    "this", " ", "asks", " ", "the", " ", "user", " ", "what", " ", "they", 
     " ", "want", " ", "to", " ", "change", " ", "the", " ", "diameter", " ", 
     "to"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askChangeValveDiameter", "[", "valveIndex_", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"resets", " ", "the", " ", "input", " ", "dynamic"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the new valve diameter in meters\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "diameter"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", "done"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "only", " ", "works", " ", "if", " ", "input", " ", "is", " ", 
             "in", " ", "the", " ", "correct", " ", "format"}], " ", "*)"}], 
           "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "inputDynamic", "]"}], ",", "\n", 
             "\t\t\t\t", "\n", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"changes", " ", "the", " ", "valve", " ", "diameter"}], 
              " ", "*)"}], "\n", "\t\t\t\t", 
             RowBox[{"DialogReturn", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"changeValveDiameter", "[", 
                RowBox[{"selected", ",", " ", "valveIndex", ",", " ", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"inputDynamic", ",", " ", "\"\<Meters\>\""}], 
                  "]"}]}], "]"}], ";", "\n", "\t\t\t\t\t", 
               RowBox[{"processSysMain", "[", "]"}]}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], "\n", 
        "\t", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.766019540133994*^9, 3.7660195740393157`*^9}, {
  3.766019623032245*^9, 3.766019624047561*^9}, {3.7660201257247577`*^9, 
  3.7660201692862453`*^9}, {3.7660203282222166`*^9, 3.766020339861002*^9}, {
  3.76602087220251*^9, 3.7660208923167114`*^9}, {3.766021936228367*^9, 
  3.7660219407223434`*^9}, {3.7660736259282417`*^9, 3.7660736275987244`*^9}, {
  3.766077225974416*^9, 3.766077229391446*^9}, {3.7660774721056623`*^9, 
  3.766077473982504*^9}},
 CellLabel->
  "In[708]:=",ExpressionUUID->"48ad4895-4a62-42a8-aa2f-8e1b2c3c6016"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "finds", " ", "and", " ", "displays", " ", "the", " ", "required", " ", 
    "head", " ", "value"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"showRequiredHeadValue", "[", "]"}], ":=", "\n", 
   RowBox[{"CreateDialog", "[", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"TextCell", "[", 
       RowBox[{"\"\<The required head value is \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "@", 
         RowBox[{"findHeadVal", "[", "]"}]}]}], "]"}], ",", " ", "\n", "\t", 
      RowBox[{"DefaultButton", "[", 
       RowBox[{"DialogReturn", "[", "]"}], "]"}]}], "\n", "}"}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.766015305233511*^9, 3.7660153530984898`*^9}, {
  3.7660207444033237`*^9, 3.7660207565678096`*^9}, {3.766082115808206*^9, 
  3.766082118972172*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"cb098e9f-81e2-4fbf-8e8a-54e2b07e46a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "asks", " ", "the", " ", "user", " ", "which", " ", "reservoir", " ", 
     "they", " ", "want", " ", "to", " ", "change", " ", "the", " ", 
     "pressure", " ", "of"}], ",", " ", 
    RowBox[{
    "and", " ", "what", " ", "they", " ", "want", " ", "to", " ", "change", 
     " ", "it", " ", "to"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askModifyPressure", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Modify the gauge pressure\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {sequence, p} where\>\
\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<sequence is the sequence that the desired reservoir is \
attached to\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<p is the new pressure\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "specifications"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "2"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "changes", " ", "the", " ", "pressure", " ", "of", " ", "the", 
                " ", "attached", " ", "reservoir"}], " ", "*)"}], "\n", 
              "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"changeGaugePressureGen", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   "\"\<Pascals\>\""}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], 
               ";", "\n", "\t\t\t\t\t", 
               RowBox[{"processSysMain", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\t", "\n", "\t", "}"}], "\n", "\t", "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7660072253138466`*^9, 3.766007380108853*^9}, {
  3.7660075405586824`*^9, 3.766007565116*^9}, {3.766020897653469*^9, 
  3.7660209434100847`*^9}, {3.7660219548595324`*^9, 3.76602196174113*^9}, {
  3.7660809031766267`*^9, 3.7660809056016884`*^9}},
 CellLabel->
  "In[710]:=",ExpressionUUID->"61862c58-8054-4162-96dc-426dcffaa262"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calls", " ", "the", " ", "correct", " ", "water", " ", "transfer", " ", 
    "function", " ", "if", " ", "the", " ", "setup", " ", "is", " ", 
    "infinite"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"pickTransferFluid", "[", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"isInfinite", ",", "\n", "\t", 
     RowBox[{"askInfWaterTransfer", "[", "]"}], ",", "\n", "\t", 
     RowBox[{"askGenWaterTransfer", "[", "]"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7660145908113537`*^9, 3.76601462071434*^9}, {
  3.766020718236339*^9, 3.766020738421343*^9}},
 CellLabel->
  "In[711]:=",ExpressionUUID->"48a11184-4dd2-4e29-adc9-fb5203e8da21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "asks", " ", "the", " ", "user", " ", "for", " ", "what", " ", "time", " ",
     "in", " ", "seconds", " ", "they", " ", "want", " ", "to", " ", "shift", 
    " ", "the", " ", "simulation", " ", "to"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askInfWaterTransfer", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Water Transfer!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Please insert a time in seconds\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "inputDynamic", "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "automatically", " ", "fills", " ", "the", " ", "outputs"}], 
               " ", "*)"}], "\n", "\t\t\t\t\t", 
              RowBox[{"fillUnOutputs", "[", 
               RowBox[{"Quantity", "[", 
                RowBox[{"inputDynamic", ",", " ", "\"\<Seconds\>\""}], "]"}], 
               "]"}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "\n", 
            "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\t", "\n", "\t", "}"}], "\n", "\t", "]"}], 
      ";"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7660146231238937`*^9, 3.7660147502309313`*^9}, 
   3.766014796907123*^9, {3.766020949485833*^9, 3.766020978984935*^9}},
 CellLabel->
  "In[712]:=",ExpressionUUID->"dbc2d0a8-e4c2-4022-bfe7-88eac4f46a68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "asks", " ", "the", " ", "user", " ", "for", " ", "what", " ", "time", " ",
     "in", " ", "seconds", " ", "they", " ", "want", " ", "to", " ", "shift", 
    " ", "the", " ", "simulation", " ", "to"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askGenWaterTransfer", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Water Transfer!\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Please insert a time in seconds\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "inputDynamic", "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "determines", " ", "if", " ", "the", " ", "pump", " ", "is", 
                " ", "strong", " ", "enough", " ", "for", " ", "the", " ", 
                "system", " ", "to", " ", "transfer", " ", "fluid"}], " ", 
               "*)"}], "\n", "\t\t\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"headValCheck", "[", "]"}], ",", "\n", "\t\t\t\t\t\t",
                 "\n", "\t\t\t\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"if", " ", "true"}], ",", " ", 
                  RowBox[{
                  "it", " ", "transfers", " ", "fluid", " ", "based", " ", 
                   "on", " ", "how", " ", "many", " ", "seconds", " ", "the", 
                   " ", "user", " ", "inputted"}]}], " ", "*)"}], "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"fillGenOutputs", "[", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"inputDynamic", ",", " ", "\"\<Seconds\>\""}], 
                  "]"}], "]"}], ",", "\n", "\t\t\t\t\t\t", "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "if", " ", "false", " ", "it", " ", "give", " ", "this", " ",
                   "error", " ", "message"}], " ", "*)"}], "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"containsPump", "[", "\"\<seq1\>\"", "]"}], ",", 
                  "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{"CreateDialog", "[", 
                   RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"TextCell", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Your pump's too weak! Get a better one!\>\"", ",", 
                    " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}]}], "]"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"DefaultButton", "[", 
                    RowBox[{"DialogReturn", "[", "]"}], "]"}]}], "\t\t", "\n",
                     "\t\t\t\t\t\t\t", "}"}], "]"}], ",", "\n", 
                  "\t\t\t\t\t\t\t", 
                  RowBox[{"CreateDialog", "[", 
                   RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"TextCell", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Gravity can't overcome the system's resistance\>\"", 
                    ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Comic Sans MS\>\""}]}], "]"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"DefaultButton", "[", 
                    RowBox[{"DialogReturn", "[", "]"}], "]"}]}], "\t\t", "\n",
                     "\t\t\t\t\t\t\t", "}"}], "]"}]}], "\n", "\t\t\t\t\t\t", 
                 "]"}]}], "\n", "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\t", "\n", "\t", "}"}], "\n", "\t", "]"}], 
      ";"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7660146299376907`*^9, 3.766014652573161*^9}, 
   3.7660147605573597`*^9, {3.7660147944975634`*^9, 3.7660149660317736`*^9}, {
   3.76601500777812*^9, 3.766015059835857*^9}, {3.7660209837721233`*^9, 
   3.766020985482559*^9}, {3.7660817040355015`*^9, 3.7660817226473475`*^9}, {
   3.7660820617771826`*^9, 3.766082067099157*^9}, {3.7660841850923367`*^9, 
   3.76608420723374*^9}, {3.7660842650791907`*^9, 3.766084266427851*^9}, {
   3.7660852249116964`*^9, 3.766085286555288*^9}, {3.766085317443977*^9, 
   3.766085318711688*^9}},
 CellLabel->
  "In[713]:=",ExpressionUUID->"1dfc7ad0-e224-4fd5-8af8-4dea98999b69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "picks", " ", "the", " ", "right", " ", "pump", " ", "modification", " ", 
    "method", " ", "based", " ", "on", " ", "if", " ", "the", " ", "setup", 
    " ", "is", " ", "infinite"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"pickPumpAsk", "[", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"If", "[", 
    RowBox[{"isInfinite", ",", "\n", "\t", 
     RowBox[{"askModifyInfPump", "[", "]"}], ",", "\n", "\t", 
     RowBox[{"askModifyGenPump", "[", "]"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7660017484273863`*^9, 3.766001751003853*^9}, {
  3.7660018935910254`*^9, 3.7660019214632316`*^9}, {3.7660209886620507`*^9, 
  3.766021007904586*^9}},
 CellLabel->
  "In[714]:=",ExpressionUUID->"752ca179-2f8f-4e27-a39c-d4cbf6a9d542"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "asks", " ", "the", " ", "user", " ", "for", " ", "the", " ", "new", " ", 
    "parameters", " ", "they", " ", "want", " ", "to", " ", "change", " ", 
    "the", " ", "pump", " ", "to"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askModifyGenPump", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Modify the pump\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {e, w, h} where\>\"", 
            ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<e is a number from 0-1 that describes how efficient the pump \
is\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<w is the maximum wattage of the pump\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<h is the head value of the pump\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "their", " ", 
           "options"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "3"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "pump"}], " ", "*)"}], 
              "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"modifyGenPump", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"\"\<seq1\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"inputDynamic", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   "\"\<Watts\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{
                   RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                   "\"\<Meters\>\""}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], 
               ";", "\n", "\t\t\t\t\t", 
               RowBox[{"processSysMain", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\t", "\n", "\t", "}"}], "\n", "\t", "]"}], 
      ";"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765999272246831*^9, 3.7659992761035147`*^9}, {
   3.7659993647085295`*^9, 3.7659993649129834`*^9}, {3.766001708583432*^9, 
   3.766001739347678*^9}, 3.766001941715184*^9, {3.7660019940644493`*^9, 
   3.7660019975677624`*^9}, {3.7660020656369743`*^9, 
   3.7660020657426505`*^9}, {3.766021010396892*^9, 3.76602104466726*^9}, {
   3.766021976774892*^9, 3.7660219813776135`*^9}},
 CellLabel->
  "In[715]:=",ExpressionUUID->"df58db14-ccaa-442f-bcc4-b72a8b34e487"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "asks", " ", "the", " ", "user", " ", "for", " ", "the", " ", "new", " ", 
    "parameters", " ", "they", " ", "want", " ", "to", " ", "change", " ", 
    "the", " ", "pump", " ", "to"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askModifyInfPump", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"creates", " ", "the", " ", "dialog", " ", "notebook"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Modify your pump\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the desired flow rate of your pump\>\"", ",", 
            " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "flow", " ", "rate"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "what", " ", "the", " ", "user", " ", "presses", " ", "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "done"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "will", " ", "only", " ", "work", " ", "if", " ", "the", " ", 
             "input", " ", "is", " ", "in", " ", "the", " ", "correct", " ", 
             "format"}], "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "inputDynamic", "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"creates", " ", "the", " ", "pump"}], " ", "*)"}], 
              "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"modifyInfPump", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{"\"\<seq1\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"inputDynamic", ",", " ", 
                   RowBox[{
                    SuperscriptBox["\"\<Meters\>\"", "3"], "/", 
                    "\"\<Seconds\>\""}]}], "]"}]}], "\n", "\t\t\t\t\t", "]"}],
                ";", "\n", "\t\t\t\t\t", 
               RowBox[{"processSysMain", "[", "]"}], ";"}], "\n", "\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "}"}], "\n", "\t", "]"}], ";"}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7659993665855093`*^9, 3.7659993739378443`*^9}, {
  3.766001719221987*^9, 3.766001720919408*^9}, {3.7660020336096573`*^9, 
  3.7660020618362083`*^9}, {3.766021051830103*^9, 3.7660210641890182`*^9}, {
  3.7660219852861276`*^9, 3.766021988410802*^9}},
 CellLabel->
  "In[716]:=",ExpressionUUID->"5d0b23db-e7dc-43bd-879c-f839f3a6cb44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "asks", " ", "the", " ", "user", " ", "which", " ", "two", " ", "points", 
     " ", "they", " ", "want", " ", "to", " ", "calculate", " ", "the", " ", 
     "differential", " ", "pressure", " ", "of"}], ",", " ", 
    RowBox[{
    "and", " ", "returns", " ", "it", " ", "in", " ", "a", " ", 
     "notebook"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"askFindDiffPress", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "clears", " ", "the", " ", "input", " ", "dynamic", " ", "so", " ", 
       "nothing", " ", "will", " ", "be", " ", "in", " ", "the", " ", "input",
        " ", "box"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"resetInputDynamic", "[", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"CreateDialog", "[", 
       RowBox[{"{", "\n", "\t", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"user", " ", "instructions"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Differential pressure is the difference in pressure between \
two points with varying velocities and heights\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Please insert the following in the form {sequence, sequence2}\
\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"TextCell", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<For example: {\\\"seq1\\\", \\\"seq8\\\"}\>\"", ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", "  ", "\"\<Comic Sans MS\>\""}]}], 
           "]"}], "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "where", " ", "the", " ", "user", " ", "inputs", " ", "the", " ", 
           "sequences"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "inputDynamic", "]"}], "]"}], ",", " ", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "the", " ", "button", " ", "the", " ", "user", " ", "presses", " ", 
           "when", " ", 
           RowBox[{"they", "'"}], "re", " ", "finished"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"Button", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Done\>\"", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Comic Sans MS\>\""}]}], 
            "]"}], ",", "\n", "\t", "\n", "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "not", " ", "work", " ", "if", " ", 
             "it", " ", "is", " ", "not", " ", "in", " ", "the", " ", 
             "correct", " ", "format"}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "inputDynamic", "]"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Length", "[", "inputDynamic", "]"}], " ", "\[Equal]", 
               " ", "2"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{
             "DialogReturn", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "finds", " ", "the", " ", "differential", " ", "pressure", " ",
                 "and", " ", "displays", " ", "it", " ", "in", " ", "another",
                 " ", "dialog", " ", "notebook"}], " ", "*)"}], "\n", 
              "\t\t\t\t\t", 
              RowBox[{"CreateDialog", "[", 
               RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                 "TextCell", "[", "\"\<The differential pressure is \>\"", 
                  "]"}], ",", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"TextCell", "[", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{"UnitConvert", "[", "\t", "\n", "\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"findDiffPress", "[", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"getLiqDensity", "[", "isInfinite", "]"}], ",", 
                    "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"inputDynamic", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "\n", 
                    "\t\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                    "\"\<Pascals\>\""}], "\n", "\t\t\t\t\t\t\t", "]"}], "\n", 
                  "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"DefaultButton", "[", 
                  RowBox[{"DialogReturn", "[", "]"}], "]"}]}], "\n", 
                "\t\t\t\t\t", "}"}], "]"}], "\n", "\t\t\t\t", "]"}]}], "\n", 
            "\t\t\t\t", "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "required", " ", "for", " ", "proper", " ", "button", " ", 
              "action"}], " ", "*)"}], "\n", "\t\t\t", "]"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Queued\>\""}]}], "\n", 
          "\t\t", "]"}]}], "\t", "\n", "\t", "}"}], "\n", "\t", "]"}], 
      ";"}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7659994954496875`*^9, 3.7659995000513873`*^9}, {
  3.766007513058236*^9, 3.7660075294952726`*^9}, {3.766007887691268*^9, 
  3.7660079072898455`*^9}, {3.766007975512347*^9, 3.766007979464775*^9}, {
  3.766008042119199*^9, 3.766008234473753*^9}, {3.766008277252307*^9, 
  3.7660083098361855`*^9}, {3.76600843835841*^9, 3.7660085361123257`*^9}, {
  3.7660210701830144`*^9, 3.766021099043823*^9}, {3.7660741819771028`*^9, 
  3.7660742436518517`*^9}, {3.7660743219681206`*^9, 3.7660743623347626`*^9}, {
  3.766075198057934*^9, 3.7660752031062603`*^9}, {3.7660758276224923`*^9, 
  3.766075866978335*^9}},
 CellLabel->
  "In[717]:=",ExpressionUUID->"16bdb686-605f-45a0-b216-3e5ab5da0be7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create All-Star Options", "Subsubsection",
 CellChangeTimes->{{3.766016594421423*^9, 
  3.7660166120961704`*^9}},ExpressionUUID->"e6169358-8236-45d6-be1f-\
40643c165d93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createAllStarOptions", "[", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"buttonWidth", " ", "=", " ", 
       RowBox[{"windowSizeX", " ", "/", " ", "8"}]}], ",", " ", "\n", 
      RowBox[{"buttonHeight", " ", "=", " ", 
       RowBox[{"windowSizeY", " ", "/", " ", "5"}]}], ",", " ", "\n", 
      "windowHeight", ",", "\n", "windowWidth"}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"NotebookClose", "[", "currentAllStarScreen", "]"}], ";", "\n", 
     "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "there", " ", "are", " ", "6", " ", "all", " ", "star", " ", 
        "buttons"}], ",", " ", 
       RowBox[{"3", " ", "rows"}], ",", " ", 
       RowBox[{"2", " ", "columns"}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{"windowHeight", " ", "=", " ", 
      RowBox[{"3", " ", "*", " ", "buttonHeight"}]}], ";", "\n", "\t", 
     RowBox[{"windowWidth", " ", "=", " ", 
      RowBox[{"2", " ", "*", " ", "buttonWidth"}]}], ";", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "creates", " ", "the", " ", "run", " ", "options", " ", "screen"}], " ",
       "*)"}], "\n", "\t", 
     RowBox[{"currentAllStarScreen", " ", "=", " ", "\n", "\t\t", 
      RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"Graphics", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{"(*", " ", "this", " ", "*)"}], "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Save\>\"", ",", " ", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], 
                  ",", " ", 
                  RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                ",", " ", 
                RowBox[{
                "masterPathListTemp", " ", "=", " ", "masterPathList"}], ",", 
                " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], "}"}]}], 
                ",", " ", 
                RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", " ", 
                RowBox[{"Background", " ", "\[Rule]", " ", "Green"}]}], "]"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                RowBox[{"2.5", " ", "*", " ", "buttonHeight"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ",", 
            "\n", "\t\t\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t", 
            RowBox[{"(*", " ", "this", " ", "*)"}], "\n", "\t\t\t\t\t", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Load\>\"", ",", " ", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], 
                  ",", " ", 
                  RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                ",", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"!", 
                   RowBox[{"SameQ", "[", 
                    RowBox[{"masterPathListTemp", ",", " ", "Null"}], "]"}]}],
                   ",", " ", 
                  RowBox[{
                   RowBox[{
                   "masterPathList", " ", "=", " ", "masterPathListTemp"}], 
                   ";", " ", 
                   RowBox[{"checkHeights", "[", "]"}]}]}], "]"}], ",", " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], "}"}]}], 
                ",", " ", 
                RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", " ", 
                RowBox[{"Background", " ", "\[Rule]", " ", "Green"}]}], "]"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"3", " ", "*", " ", 
                 RowBox[{"buttonWidth", " ", "/", " ", "2"}]}], ",", " ", 
                RowBox[{"2.5", " ", "*", " ", "buttonHeight"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ",", 
            "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
            RowBox[{"(*", " ", "this", " ", "*)"}], "\n", "\t\t\t\t\t", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Show global properties\>\"", ",", " ", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], 
                  ",", " ", 
                  RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                ",", " ", 
                RowBox[{"createGlobalPropertiesScreen", "[", "]"}], ",", " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], "}"}]}], 
                ",", " ", 
                RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", " ", 
                RowBox[{"Background", " ", "\[Rule]", " ", "Green"}]}], "]"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                RowBox[{"1.5", " ", "*", " ", "buttonHeight"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ",", 
            "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
            RowBox[{"(*", " ", "this", " ", "*)"}], "\n", "\t\t\t\t\t", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Show sequence properties\>\"", ",", " ", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], 
                  ",", " ", 
                  RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                ",", " ", 
                RowBox[{"createPropertiesScreen", "[", "selected", "]"}], ",",
                 " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], "}"}]}], 
                ",", " ", 
                RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", " ", 
                RowBox[{"Background", " ", "\[Rule]", " ", "Green"}]}], "]"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"3", " ", "*", " ", 
                 RowBox[{"buttonWidth", " ", "/", " ", "2"}]}], ",", " ", 
                RowBox[{"1.5", " ", "*", " ", "buttonHeight"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ",", 
            "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
            RowBox[{"(*", " ", "this", " ", "*)"}], "\n", "\t\t\t\t\t", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Main Menu\>\"", ",", " ", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], 
                  ",", " ", 
                  RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                ",", " ", 
                RowBox[{
                 RowBox[{"closeNotebooks", "[", "]"}], ";", " ", 
                 RowBox[{"startingMenu", "[", "]"}]}], ",", " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], "}"}]}], 
                ",", " ", 
                RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", " ", 
                RowBox[{"Background", " ", "\[Rule]", " ", "Green"}]}], "]"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"buttonWidth", " ", "/", " ", "2"}], ",", " ", 
                RowBox[{"0.5", " ", "*", " ", "buttonHeight"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ",", 
            "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
            RowBox[{"(*", " ", "this", " ", "*)"}], "\n", "\t\t\t\t\t", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Reset\>\"", ",", " ", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}], 
                  ",", " ", 
                  RowBox[{"FontSize", " ", "\[Rule]", " ", "20"}]}], "]"}], 
                ",", " ", 
                RowBox[{"resetWorkingScreens", "[", "]"}], ",", " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"buttonWidth", ",", " ", "buttonHeight"}], "}"}]}], 
                ",", " ", 
                RowBox[{"Appearance", " ", "\[Rule]", " ", "None"}], ",", " ", 
                RowBox[{"Background", " ", "\[Rule]", " ", "Green"}]}], "]"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"3", " ", "*", " ", 
                 RowBox[{"buttonWidth", " ", "/", " ", "2"}]}], ",", " ", 
                RowBox[{"0.5", " ", "*", " ", "buttonHeight"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"Center", ",", " ", "Center"}], "}"}]}], "]"}], ","}], 
           "\n", "\t\t\t\t\t", "}"}], "\n", "\t\t\t\t", ",", "\n", "\t\t\t\t",
           "\n", "\t\t\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "makes", " ", "the", " ", "graphics", " ", "the", " ", "proper", 
            " ", "size"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t\t\t", 
          RowBox[{"ImageSize", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"windowWidth", ",", " ", "windowHeight"}], "}"}]}], ",", 
          " ", 
          RowBox[{"PlotRange", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "windowWidth"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "windowHeight"}], "}"}]}], "}"}]}]}], 
         "\n", "\t\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"palette", " ", "options"}], " ", "*)"}], "\n", "\t\t\t", 
        RowBox[{"WindowSize", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"windowWidth", ",", " ", "windowHeight"}], "}"}]}], ",", 
        " ", "\n", "\t\t\t", 
        RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"WindowTitle", " ", "\[Rule]", " ", "\"\<Run Options\>\""}], 
        ",", "\n", "\t\t\t", 
        RowBox[{"WindowFloating", " ", "\[Rule]", " ", "False"}]}], 
       "\[IndentingNewLine]", "\t\t", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7660205482649193`*^9, 3.7660205736969*^9}, {
   3.766022325088312*^9, 3.76602244352155*^9}, {3.7660226170713687`*^9, 
   3.766022772191482*^9}, {3.766022819452862*^9, 3.766022950628046*^9}, {
   3.7660230325758724`*^9, 3.766023100070345*^9}, {3.7660231410237827`*^9, 
   3.7660231513292203`*^9}, {3.7660233292194586`*^9, 3.766023347803725*^9}, {
   3.7660238737992992`*^9, 3.7660239103306227`*^9}, {3.766024003567671*^9, 
   3.766024003700283*^9}, {3.766025484337927*^9, 3.76602549024516*^9}, {
   3.7660266512041473`*^9, 3.7660266864518948`*^9}, {3.766027062944707*^9, 
   3.7660270638173757`*^9}, 3.766064663270755*^9, {3.7660658894583197`*^9, 
   3.766065891910762*^9}, {3.7660704929220943`*^9, 3.7660704977837715`*^9}, {
   3.7660706882592587`*^9, 3.766070689492295*^9}, {3.7660712477811995`*^9, 
   3.7660712549093647`*^9}, {3.7660746242089605`*^9, 3.766074630291853*^9}},
 CellLabel->
  "In[718]:=",ExpressionUUID->"7fb7d6ac-4a27-4696-a709-7e0493d5a10d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create Properties- local+global", "Subsubsection",
 CellChangeTimes->{{3.76513301681923*^9, 3.765133037417216*^9}, {
  3.7660121852734537`*^9, 
  3.7660121873666925`*^9}},ExpressionUUID->"f42724b7-e198-4778-b9ca-\
26f14dbf875d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "uses", " ", "displaySeqProps", " ", "to", " ", "retrieve", " ", "text", 
    " ", "for", " ", "a", " ", "given", " ", "sequence", " ", "that", " ", 
    "outlines", " ", "its", " ", "properties"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"createPropertiesScreen", "[", "seqKey_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "close", " ", "the", " ", "properties", " ", "screen", " ", "that", " ",
        "is", " ", "currently", " ", "open"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"NotebookClose", "[", "currentPropertiesScreen", "]"}], ";", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"if", " ", "seq"}], ",", " ", 
        RowBox[{
        "display", " ", "its", " ", "properties", " ", "and", " ", "set", " ",
          "it", " ", "as", " ", "the", " ", "current", " ", "props", " ", 
         "screen"}]}], " ", "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"seqKey", ",", " ", "\"\<seq\>\""}], "]"}], ",", "\t\t\t\t", 
        "\n", "\t\t", 
        RowBox[{"currentPropertiesScreen", " ", "=", " ", 
         RowBox[{"CreateDialog", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"displaySeqProps", "[", "seqKey", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"DefaultButton", "[", 
              RowBox[{"DialogReturn", "[", "]"}], "]"}], "}"}]}], "]"}], 
          "]"}]}]}], "\n", "\t", "]"}]}]}], "\t", "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765136660620748*^9, 3.7651367819874334`*^9}, {
   3.765136840142293*^9, 3.7651369187641726`*^9}, 3.7658216607151957`*^9, 
   3.765901093971155*^9, {3.765902722485527*^9, 3.765902817746739*^9}, {
   3.766009340433631*^9, 3.766009347273967*^9}, {3.766009385528101*^9, 
   3.7660094534471073`*^9}, {3.7660095457641716`*^9, 3.766009547148345*^9}, {
   3.7660095782366962`*^9, 3.7660096756759357`*^9}, {3.766010012024971*^9, 
   3.766010107177802*^9}, {3.7660101729011393`*^9, 3.766010184966483*^9}, {
   3.7660103946237345`*^9, 3.7660103966993628`*^9}, {3.766010478815811*^9, 
   3.7660104793027344`*^9}, {3.7660107857107935`*^9, 3.766010802858058*^9}, {
   3.7660109147052336`*^9, 3.7660109201595907`*^9}},
 CellLabel->
  "In[719]:=",ExpressionUUID->"a75e652a-f22a-41a3-b31c-da4bd4cdc553"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Display", " ", "the", " ", "global", " ", "properties", " ", "of", " ", 
    "the", " ", "network"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createGlobalPropertiesScreen", "[", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "close", " ", "the", " ", "properties", " ", "screen", " ", "that", 
        " ", "is", " ", "currently", " ", "open"}], " ", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"NotebookClose", "[", "currentPropertiesScreen", "]"}], ";", 
       "\n", "\t\t\t\t\t", "\n", "\t", 
       RowBox[{"currentPropertiesScreen", " ", "=", " ", 
        RowBox[{"CreateDialog", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TextCell", "[", 
            RowBox[{"\"\<Gravity: \>\"", "<>", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"globalConstants", "[", "\"\<gravity\>\"", "]"}], 
              "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{"\"\<Temperature: \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
              "globalConstants", "[", "\"\<environmentTemp\>\"", "]"}], 
              "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"DefaultButton", "[", 
            RowBox[{"DialogReturn", "[", "]"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\t", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.766012161083518*^9, 3.7660124079039216`*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"e7fa5944-c407-42ec-86a8-a2e1fde9b2be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calls", " ", "the", " ", "seq", " ", "from", " ", "masterPathList", " ", 
    "and", " ", "formats", " ", "the", " ", "keys", " ", "and", " ", "values",
     " ", "into", " ", "legible", " ", "information", " ", "for", " ", 
    "display"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"displaySeqProps", "[", "seqName_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"seqKey", " ", "=", " ", "seqName"}], ",", 
       "\[IndentingNewLine]", "flowRate", ",", "\[IndentingNewLine]", 
       "avgVel", ",", "\[IndentingNewLine]", "avgDia", ",", 
       "\[IndentingNewLine]", "height", ",", "\[IndentingNewLine]", 
       "partsOut", ",", "\[IndentingNewLine]", "start", ",", 
       "\[IndentingNewLine]", "name", ",", "\[IndentingNewLine]", "end", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"outTexts", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "partsList", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"formattedParts", " ", "=", " ", "\"\<\>\""}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "makes", " ", "parts", " ", "list", " ", "easier", " ", "to", " ", 
        "read"}], " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"partsList", " ", "=", " ", 
       RowBox[{"masterPathList", "[", 
        RowBox[{"seqKey", ",", " ", "\"\<parts\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"formattedParts", " ", "=", " ", 
          RowBox[{"formattedParts", " ", "<>", "\"\<\\n\>\"", "<>", " ", 
           RowBox[{"ToString", "[", "part", "]"}]}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"part", ",", " ", "partsList"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Make", " ", "text", " ", "cell", " ", "for", " ", "attributes"}], " ",
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"name", " ", "=", " ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<Selected Seq: \>\"", " ", "<>", " ", "seqKey"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"flowRate", " ", "=", " ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<Flow Rate: \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "seqKey", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<flowRate\>\""}],
            "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"avgVel", " ", "=", " ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<Average Velocity: \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "seqKey", ",", " ", "\"\<attr\>\"", ",", " ", 
            "\"\<avgVelocity\>\""}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"avgDia", " ", "=", "  ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<Average Diameter: \>\"", " ", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "seqKey", ",", " ", "\"\<attr\>\"", ",", " ", 
            "\"\<avgDiameter\>\""}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"height", " ", "=", " ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<Height: \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"masterPathList", "[", 
           RowBox[{
           "seqKey", ",", " ", "\"\<attr\>\"", ",", " ", "\"\<height\>\""}], 
           "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"partsOut", " ", "=", " ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<Parts: \>\"", "<>", "formattedParts"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"start", " ", "=", " ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<Start: \>\"", " ", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"masterPathList", "[", 
           RowBox[{"seqKey", ",", " ", "\"\<start\>\""}], "]"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"end", " ", "=", " ", 
       RowBox[{"TextCell", "[", 
        RowBox[{"\"\<End: \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"masterPathList", "[", 
           RowBox[{"seqKey", ",", " ", "\"\<end\>\""}], "]"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Add", " ", "the", " ", "property", " ", "read", " ", "outs", " ", 
        "to", " ", "the", " ", "outTexts", " ", "list"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "name"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "flowRate"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "avgVel"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "avgDia"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "height"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "partsOut"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "start"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"outTexts", ",", " ", "end"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"return", " ", "the", " ", "text", " ", "cells"}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "outTexts", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.766010120709134*^9, 3.766010158535467*^9}, {
  3.76601019568764*^9, 3.766010223992236*^9}, {3.766010267382311*^9, 
  3.766010303187684*^9}, {3.766010358889041*^9, 3.7660103906746655`*^9}, {
  3.76601093142849*^9, 3.7660109702281513`*^9}, {3.7660110441797996`*^9, 
  3.766011050524083*^9}, {3.7660110919584513`*^9, 3.766011119456246*^9}, {
  3.7660111704700756`*^9, 3.7660112115828953`*^9}, {3.7660114435706444`*^9, 
  3.7660114692506404`*^9}, {3.7660116713480735`*^9, 3.7660116884950733`*^9}, {
  3.7660117300475903`*^9, 3.766012052899245*^9}, {3.7660709200221863`*^9, 
  3.7660710409439707`*^9}, {3.7660713190327845`*^9, 3.7660713599058557`*^9}, {
  3.7660714715514555`*^9, 3.76607151013068*^9}, {3.766071603458559*^9, 
  3.766071626306387*^9}, {3.7660716906846886`*^9, 3.7660717708025136`*^9}, {
  3.7660719245832367`*^9, 3.7660719356305947`*^9}},
 CellLabel->
  "In[721]:=",ExpressionUUID->"faf78421-726b-4751-a577-e2d7d422bf5b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Merge Pairs Help", "Subsubsection",
 CellChangeTimes->{{3.765983216783392*^9, 
  3.7659832207497797`*^9}},ExpressionUUID->"2ef1216e-634e-4865-a240-\
caf4299e1f10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mergePairsHelp", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ","}], "\[IndentingNewLine]", "\t", 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"will", " ", "open", " ", "seperate", " ", "notebook"}], " ", 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.7659832232351303`*^9, 3.7659832341289587`*^9}, 
   3.765984076640611*^9, {3.7659991363752337`*^9, 3.7659991649567914`*^9}},
 CellLabel->
  "In[722]:=",ExpressionUUID->"bac59cf1-4ed5-4c65-891f-93692501e3bf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notebook functions", "Subsubsection",
 CellChangeTimes->{{3.765999549878086*^9, 
  3.7659995539133005`*^9}},ExpressionUUID->"152383dc-ed69-416f-bfcb-\
a6c978029ad9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"closes", " ", "all", " ", "notebooks"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"closeNotebooks", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"NotebookClose", "[", "currentDisplayScreen", "]"}], ";", "\n", 
      "\t", 
      RowBox[{"NotebookClose", "[", "currentOptionsScreen", "]"}], ";", "\n", 
      "\t", 
      RowBox[{"NotebookClose", "[", "currentPropertiesScreen", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"NotebookClose", "[", "currentRunOptionsScreen", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"NotebookClose", "[", "currentAllStarScreen", "]"}], ";", "\n", 
      "\t", 
      RowBox[{"NotebookClose", "[", "selectedScreen", "]"}], ";"}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.765999555503085*^9, 3.7659996314618807`*^9}, {
  3.766021106699319*^9, 3.7660211140815964`*^9}, {3.7660659255837293`*^9, 
  3.7660659321261997`*^9}, {3.7660727593234267`*^9, 3.7660727685573177`*^9}},
 CellLabel->
  "In[723]:=",ExpressionUUID->"adf2b488-81fc-4b42-bd63-69d1977c94ad"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Network Display", "Subsection",
 CellChangeTimes->{{3.7659062175693674`*^9, 
  3.7659062203907256`*^9}},ExpressionUUID->"8d4cb298-2dd1-4572-a970-\
1299af0ff1a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Uses", " ", "the", " ", "functions", " ", "from", " ", "the", " ", 
    "\"\<Controller\>\"", " ", "section", " ", "to", " ", "display", " ", "a",
     " ", "basic", " ", "view", " ", "of", " ", "the", " ", "network"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", "-", " ", 
    RowBox[{
    "height", " ", "is", " ", "how", " ", "high", " ", "above", " ", "the", 
     " ", "given", " ", "sequence", " ", "a", " ", "button", " ", "is"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"displayNetwork", "[", 
    RowBox[{
    "units_", ",", " ", "fontSize_", ",", " ", "fontType_", ",", " ", 
     "lineThickness_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"seqLocs", ",", "\[IndentingNewLine]", 
       RowBox[{"layerLength", " ", "=", " ", "5"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"value", " ", "for", " ", "layerLength", " ", 
         RowBox[{"doesn", "'"}], "t", " ", "matter", " ", "because", " ", 
         "the", " ", "height", " ", "and", " ", "yScale", " ", "will", " ", 
         "always", " ", "be", " ", "the", " ", "correct", " ", "proportion", 
         " ", "using", " ", "division"}], " ", "*)"}], "\[IndentingNewLine]", 
       "seqPointSets", ",", "\[IndentingNewLine]", "buttons", ",", 
       "\[IndentingNewLine]", "splPoints", ",", "\[IndentingNewLine]", 
       "merPoints", ",", "\[IndentingNewLine]", "yScale", ",", 
       "\[IndentingNewLine]", "height", ",", "\[IndentingNewLine]", "splGfx", 
       ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"graphics", " ", "that", " ", "show", " ", "splits"}], " ", 
        "*)"}], "\[IndentingNewLine]", "merGfx", ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"graphics", " ", "that", " ", "show", " ", "merges"}], " ", 
        "*)"}], "\[IndentingNewLine]", "inputGfx", ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "rectangle", " ", "that", " ", "represents", " ", "the", " ", "input",
          " ", "reservoir"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"pumpGfx", " ", "=", " ", "Null"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "disk", " ", "that", " ", "represents", " ", "the", " ", "pump"}], 
         " ", "-", 
         RowBox[{"if", " ", "present"}]}], " ", "*)"}], "\[IndentingNewLine]",
        "outputGfx"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"disks", " ", "that", " ", "represent", " ", "outputs"}], " ", 
       "*)"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "closes", " ", "the", " ", "current", " ", "display", " ", "screen"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NotebookClose", "[", "currentDisplayScreen", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"height", " ", "=", " ", 
       RowBox[{
        RowBox[{"layerLength", "/", "5"}], "-", "0.5"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"vertical", " ", "offset", " ", "of", " ", "buttons"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"yScale", " ", "=", " ", 
       RowBox[{"layerLength", "/", "5"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"multiplier", " ", "on", " ", "y"}], "-", "coords"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determine", " ", "the", " ", "start", " ", "and", " ", "end", " ", 
        "locs", " ", "for", " ", "each", " ", "sequence"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"seqLocs", " ", "=", " ", 
       RowBox[{"seqNameAndPos", "[", 
        RowBox[{"layerLength", ",", " ", 
         RowBox[{"N", "[", "yScale", "]"}], ",", " ", "units"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"seqPointSets", " ", "=", " ", 
       RowBox[{"allSeqPoints", "[", "seqLocs", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"buttons", " ", "=", " ", 
       RowBox[{"getSeqButtons", "[", 
        RowBox[{
        "seqLocs", ",", " ", "fontSize", ",", " ", "fontType", ",", " ", 
         "layerLength", ",", " ", "height"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determine", " ", "points", " ", "for", " ", "the", " ", "vertical", 
        " ", "lines", " ", "that", " ", "connect", " ", "sequences", " ", 
        "at", " ", "splits", " ", "and", " ", "merges"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"splPoints", "=", 
       RowBox[{"splPtsAll", "[", "seqLocs", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"merPoints", " ", "=", " ", 
       RowBox[{"merPtsAll", "[", "seqLocs", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "get", " ", "graphics", " ", "to", " ", "mark", " ", "splits", " ", 
        "and", " ", "merges"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"splGfx", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"getSplRects", "[", 
          RowBox[{"seqLocs", ",", " ", "layerLength", ",", " ", "Red"}], 
          "]"}], ",", " ", 
         RowBox[{"getSplLabels", "[", 
          RowBox[{
          "seqLocs", ",", " ", "layerLength", ",", " ", "Black", ",", " ", 
           "fontType", ",", " ", "fontSize"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"merGfx", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"getMerRects", "[", 
          RowBox[{"seqLocs", ",", " ", "layerLength", ",", " ", "Green"}], 
          "]"}], ",", " ", 
         RowBox[{"getMerLabels", "[", 
          RowBox[{
          "seqLocs", ",", " ", "layerLength", ",", " ", "Black", ",", " ", 
           "fontType", ",", " ", "fontSize"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "get", " ", "rectangle", " ", "for", " ", "input", " ", "reservoir"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"inputGfx", " ", "=", " ", 
       RowBox[{"getInputRect", "[", 
        RowBox[{"seqLocs", ",", " ", 
         RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", "layerLength", ",", 
         " ", "0.2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "get", " ", "circle", " ", "for", " ", "pump", " ", "if", " ", 
        "present"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"containsPump", "[", "\"\<seq1\>\"", "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"pumpGfx", " ", "=", " ", 
          RowBox[{"getPumpCirc", "[", 
           RowBox[{
           "seqLocs", ",", " ", "Yellow", ",", " ", "5", ",", " ", "0.4"}], 
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "get", " ", "circles", " ", "to", " ", "represent", " ", "outputs", 
        " ", "if", " ", "present"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"outputGfx", " ", "=", " ", 
       RowBox[{"createOutputCircs", "[", 
        RowBox[{"seqLocs", ",", " ", "Purple", ",", " ", "0.8"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"output", "-", " ", 
        RowBox[{"opens", " ", "up", " ", 
         RowBox[{"document", ".", " ", "Allows"}], " ", "for", " ", 
         "scrolling"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"currentDisplayScreen", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"CreateDocument", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "[", "lineThickness", "]"}], ",", 
               RowBox[{"Line", "[", "seqPointSets", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "[", "lineThickness", "]"}], ",", " ", 
               RowBox[{"Line", "[", "splPoints", "]"}]}], "}"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "[", "lineThickness", "]"}], ",", 
               RowBox[{"Line", "[", "merPoints", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "buttons", ",", "\[IndentingNewLine]", 
             "splGfx", ",", "\[IndentingNewLine]", "merGfx", ",", 
             "\[IndentingNewLine]", "inputGfx", ",", "\[IndentingNewLine]", 
             "pumpGfx", ",", "\[IndentingNewLine]", "outputGfx"}], 
            "\[IndentingNewLine]", "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"Doc", " ", "options"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", " ", 
            RowBox[{"windowSizeX", " ", "*", 
             RowBox[{"3", "/", "4"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"WindowSize", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"windowSizeX", "*", 
             RowBox[{"3", "/", "4"}]}], ",", " ", 
            RowBox[{"windowSizeY", "*", 
             RowBox[{"3", "/", "4"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"WindowTitle", " ", "\[Rule]", " ", "\"\<Display\>\""}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7659733559400268`*^9, 3.7659735675983024`*^9}, {
   3.7659736054505153`*^9, 3.7659736206924005`*^9}, {3.7659749959307604`*^9, 
   3.7659750120874434`*^9}, {3.765976803082009*^9, 3.7659770132859097`*^9}, {
   3.765977081579626*^9, 3.7659770840002823`*^9}, {3.76597751031476*^9, 
   3.7659777278532844`*^9}, {3.7659804960548725`*^9, 3.765980588514291*^9}, {
   3.7659818829606104`*^9, 3.7659818888106794`*^9}, {3.7659830023115225`*^9, 
   3.765983073765544*^9}, 3.765983105129345*^9, {3.765983542193636*^9, 
   3.7659835740155473`*^9}, {3.765983647187335*^9, 3.7659837861038184`*^9}, {
   3.7659896682967553`*^9, 3.7659897120283937`*^9}, {3.7659897589276547`*^9, 
   3.7659897638464365`*^9}, {3.765990605915825*^9, 3.7659906861788607`*^9}, {
   3.765990943499711*^9, 3.765991003130432*^9}, {3.7659911740618687`*^9, 
   3.765991206236533*^9}, {3.76599200904537*^9, 3.7659921592437825`*^9}, {
   3.7659921907337294`*^9, 3.7659922174767327`*^9}, {3.765992255610701*^9, 
   3.76599230046887*^9}, {3.7659930973528585`*^9, 3.765993136727888*^9}, {
   3.765993191612419*^9, 3.765993195168702*^9}, {3.7659933212731743`*^9, 
   3.7659933449530954`*^9}, {3.765993387768548*^9, 3.76599340661478*^9}, {
   3.765993642666728*^9, 3.7659936462595906`*^9}, {3.765995098585619*^9, 
   3.7659951356878233`*^9}, {3.765995170793865*^9, 3.7659951889801316`*^9}, {
   3.765999451074429*^9, 3.765999461043994*^9}, {3.765999560900852*^9, 
   3.765999561933545*^9}, {3.765999829552005*^9, 3.765999840279688*^9}, {
   3.7660002296417646`*^9, 3.7660002710967045`*^9}, {3.766023212523576*^9, 
   3.766023259791155*^9}, {3.766024441280941*^9, 3.7660244652248983`*^9}, {
   3.766024600147033*^9, 3.766024601038653*^9}, {3.7660655385223665`*^9, 
   3.766065551067814*^9}, {3.766085190230219*^9, 3.7660851996958637`*^9}},
 CellLabel->
  "In[724]:=",ExpressionUUID->"dd26cb8a-1b57-4358-a4cd-00b84b947ea1"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Start-up", "Section",
 CellChangeTimes->{{3.766066207942032*^9, 
  3.7660662202141767`*^9}},ExpressionUUID->"13c10002-c77b-426f-b4b8-\
3b892f3d74d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"starts", " ", "the", " ", "program"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"bootUp", "[", "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"initializeLists", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\t", 
   RowBox[{
    RowBox[{"initializeUIglobals", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "\t", 
   RowBox[{
    RowBox[{"resetGlobalConstants", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "\t", 
   RowBox[{
    RowBox[{"startingMenu", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.766066231527917*^9, 3.7660662730019903`*^9}, {
  3.7660693836008673`*^9, 3.766069417991587*^9}, {3.766076872514083*^9, 
  3.7660768732014585`*^9}, {3.7660821420775185`*^9, 3.7660821441215763`*^9}},
 CellLabel->
  "In[513]:=",ExpressionUUID->"941aa16a-a0bb-4188-a002-29102fdabd6c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 637},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 428, 6, 96, "Title",ExpressionUUID->"9a6528a5-69c2-48a2-99a5-63f2f7c44a7a"],
Cell[CellGroupData[{
Cell[1033, 32, 193, 3, 67, "Chapter",ExpressionUUID->"3302af0f-930a-43d3-a7cb-dced8d0ec453"],
Cell[CellGroupData[{
Cell[1251, 39, 168, 3, 67, "Section",ExpressionUUID->"d4233cf5-2905-46ce-bf15-982fa25b14fa"],
Cell[CellGroupData[{
Cell[1444, 46, 226, 4, 53, "Subsection",ExpressionUUID->"4fdfe745-d52e-433c-bb30-a198d74c9f13"],
Cell[1673, 52, 572, 14, 64, "Input",ExpressionUUID->"6b9d1dbe-478a-4626-93ac-dc03e6492a83",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2270, 70, 521, 12, 64, "Input",ExpressionUUID->"2ffa2dfb-1aa1-4fcf-af15-6e7bdf1987f5",
 InitializationCell->True],
Cell[2794, 84, 3342, 47, 70, "Output",ExpressionUUID->"274228f5-d75f-485c-a075-329a9a4123ed"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6185, 137, 402, 6, 37, "Subsection",ExpressionUUID->"9ea2438e-bdfb-4b56-a5f8-b79ecb169894"],
Cell[6590, 145, 886, 17, 64, "Input",ExpressionUUID->"044e5434-4530-46ce-8f37-f2bd3adfbd5b",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7501, 166, 698, 14, 64, "Input",ExpressionUUID->"1f7ef8c8-e94a-4930-8b3d-1d7808f273f1",
 InitializationCell->True],
Cell[8202, 182, 1857, 27, 70, "Output",ExpressionUUID->"5691b4fa-bb34-4155-95a2-011c3895b0dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10096, 214, 956, 20, 83, "Input",ExpressionUUID->"18db6d4d-db8d-4bcc-ace8-d008fec6a757",
 InitializationCell->True],
Cell[11055, 236, 2374, 37, 70, "Output",ExpressionUUID->"2b016d06-3e8b-4b19-b909-ab398c8745d4"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[13490, 280, 210, 4, 53, "Section",ExpressionUUID->"06d25a75-90b2-41c7-a608-5e4d53f3d8f6"],
Cell[CellGroupData[{
Cell[13725, 288, 157, 3, 53, "Subsection",ExpressionUUID->"6ac1d491-b3db-4e86-9a26-cabae540e262"],
Cell[13885, 293, 2370, 50, 188, "Input",ExpressionUUID->"3352ba1a-ae5f-4b4a-abd3-8a88d0e86376",
 InitializationCell->True],
Cell[16258, 345, 475, 11, 69, "Code",ExpressionUUID->"862ed70e-4c9b-4f7b-898b-56cedc5e2571"],
Cell[16736, 358, 813, 17, 102, "Input",ExpressionUUID->"078eac80-85db-498d-a99c-3cd98090f335",
 InitializationCell->True],
Cell[17552, 377, 185, 3, 34, "Text",ExpressionUUID->"a35368ea-d5ed-461b-8161-8f9b64661dd7"]
}, Closed]],
Cell[CellGroupData[{
Cell[17774, 385, 151, 3, 37, "Subsection",ExpressionUUID->"9302cb26-79bd-4ccd-9c56-74c873fddf72"],
Cell[17928, 390, 1850, 38, 185, "Input",ExpressionUUID->"51ce04a5-1be8-44ac-82f5-710366664a9d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[19803, 432, 345, 7, 28, "Input",ExpressionUUID->"a527517e-44aa-4996-adec-1900074bcba1"],
Cell[20151, 441, 1603, 25, 70, "Output",ExpressionUUID->"f1c7e2aa-e8ef-43bd-b8c4-9ffd2314e404"]
}, Open  ]],
Cell[21769, 469, 2440, 49, 252, "Code",ExpressionUUID->"1fbcbb7b-bb74-4956-b3b0-7a0595370d5c"],
Cell[CellGroupData[{
Cell[24234, 522, 533, 13, 32, "Input",ExpressionUUID->"268f54c8-81cd-4ee2-92cf-4c2b24d6a170"],
Cell[24770, 537, 864, 18, 70, "Output",ExpressionUUID->"70fc5ce1-f522-4145-b162-97ff7cef89c2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[25683, 561, 152, 3, 37, "Subsection",ExpressionUUID->"a8432067-acd3-4be7-9d00-3aae96a381aa"],
Cell[25838, 566, 3378, 81, 288, "Input",ExpressionUUID->"44a6559f-c089-478f-9ccf-6fef0e8e9380",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[29241, 651, 864, 18, 28, "Input",ExpressionUUID->"f26d8044-eec6-4ea3-88df-462333cd8204"],
Cell[30108, 671, 897, 18, 70, "Output",ExpressionUUID->"1cceac98-d9c0-4111-85e3-093e52340771"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31042, 694, 394, 9, 32, "Input",ExpressionUUID->"49c89002-43bf-4dcc-b9bc-f83b873538c6"],
Cell[31439, 705, 959, 18, 70, "Output",ExpressionUUID->"0ca28b41-04f5-4e0d-9be9-ae5481a5c2cc"]
}, Open  ]],
Cell[32413, 726, 2841, 68, 334, "Input",ExpressionUUID->"ad58b53b-036c-4be7-8e62-13a3815347bb",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[35279, 798, 816, 17, 28, "Input",ExpressionUUID->"c86fda9e-633a-414a-8319-2240cc4248fc"],
Cell[36098, 817, 1741, 26, 70, "Output",ExpressionUUID->"102b4840-2fd1-47b8-808b-d94d5b3f2dee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37888, 849, 159, 3, 53, "Subsection",ExpressionUUID->"0ccb8d8d-4dd1-4b29-90a3-419124eea84c"],
Cell[38050, 854, 1638, 39, 237, "Input",ExpressionUUID->"86580193-954d-4b25-9f6d-48cc68b877c9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[39713, 897, 543, 11, 28, "Input",ExpressionUUID->"70e1eb14-6456-4f11-84c1-5b5215380fde"],
Cell[40259, 910, 749, 15, 70, "Output",ExpressionUUID->"e355d941-1e1b-4624-a154-4a7ed8b87776"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41057, 931, 168, 3, 53, "Subsection",ExpressionUUID->"cbea3d8d-fc78-42ef-bcd1-d2075228f8cc"],
Cell[41228, 936, 3882, 88, 467, "Input",ExpressionUUID->"9691a619-d046-4a2d-9e2c-04aea5006e42",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[45135, 1028, 934, 21, 52, "Input",ExpressionUUID->"fc52a9fd-3ab6-4cc7-bce9-10e20a7b1645"],
Cell[46072, 1051, 2167, 37, 70, "Output",ExpressionUUID->"eb194812-81f5-4e62-9592-ec4cf5543763"],
Cell[48242, 1090, 2983, 49, 70, "Output",ExpressionUUID->"c34e70bf-7a37-4bed-9517-76237d5aff84"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[51274, 1145, 171, 3, 37, "Subsection",ExpressionUUID->"918cfa37-b7e5-49ab-aeab-c75c743cf261"],
Cell[51448, 1150, 1367, 32, 111, "Input",ExpressionUUID->"860c734d-d6e6-4279-a207-19300486abc2",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[52840, 1186, 1006, 21, 48, "Input",ExpressionUUID->"b5cc73a7-4864-494b-bf60-51899c0ebfaf"],
Cell[53849, 1209, 1038, 17, 70, "Output",ExpressionUUID->"12a8415e-ba24-465b-9567-8221e09a6b2c"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[54948, 1233, 254, 4, 53, "Section",ExpressionUUID->"39aa09ac-37c0-487c-96bb-42b40b40825c"],
Cell[CellGroupData[{
Cell[55227, 1241, 271, 4, 53, "Subsection",ExpressionUUID->"437002fe-dc48-465b-b0b4-a4252bb1cf2d"],
Cell[55501, 1247, 4015, 84, 368, "Input",ExpressionUUID->"c098ba04-c36d-470e-98a8-2409ab40fd09",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[59553, 1336, 229, 4, 53, "Subsection",ExpressionUUID->"9857389a-7692-4e4a-8178-f197e563f9d4"],
Cell[59785, 1342, 2447, 52, 292, "Input",ExpressionUUID->"919debab-4b42-4396-95b5-06847db8cda6",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[62269, 1399, 161, 3, 53, "Subsection",ExpressionUUID->"6ee99d3d-b77b-4642-86cf-635b14ca88ca"],
Cell[62433, 1404, 1662, 40, 216, "Input",ExpressionUUID->"dcea5142-7a0e-491a-9a90-a820f888a272",
 InitializationCell->True],
Cell[64098, 1446, 2131, 50, 273, "Input",ExpressionUUID->"1f90599d-1084-4b51-b59e-0e9e3ec7dfbc",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[66266, 1501, 153, 3, 53, "Subsection",ExpressionUUID->"16fef2df-09db-4e4f-a6bf-06f90e6c0bb5"],
Cell[66422, 1506, 1865, 40, 123, "Code",ExpressionUUID->"96a67372-123c-4247-a223-1fd1d89daccf"]
}, Closed]],
Cell[CellGroupData[{
Cell[68324, 1551, 165, 3, 37, "Subsection",ExpressionUUID->"9c801aaf-092a-49b4-8bab-3c6deeaffc0c"],
Cell[68492, 1556, 1880, 43, 121, "Input",ExpressionUUID->"e82f06c5-21d1-44d5-a0ae-c278c724c417",
 InitializationCell->True],
Cell[70375, 1601, 3790, 78, 213, "Code",ExpressionUUID->"77592a01-ca5c-4c79-8330-18a53cff23d5"],
Cell[74168, 1681, 1343, 33, 105, "Code",ExpressionUUID->"4a41a0cc-e9c0-4e88-a055-70909ae182e0"],
Cell[75514, 1716, 3040, 68, 285, "Code",ExpressionUUID->"7d3f28a7-c4a6-4bf2-bcbf-20264c40884b"]
}, Closed]],
Cell[CellGroupData[{
Cell[78591, 1789, 173, 3, 37, "Subsection",ExpressionUUID->"a11debde-19a9-4b2f-a50b-050fbc56486c"],
Cell[78767, 1794, 3106, 61, 311, "Input",ExpressionUUID->"00fca269-2c5f-4255-9eff-0cf133f984a2",
 InitializationCell->True],
Cell[81876, 1857, 1528, 38, 197, "Input",ExpressionUUID->"2818c0d6-4cfe-480e-a8c4-f61cce29ab87",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[83441, 1900, 176, 3, 53, "Subsection",ExpressionUUID->"170d49ac-250a-4480-901c-eb7702941196"],
Cell[83620, 1905, 2001, 43, 292, "Input",ExpressionUUID->"a4d29e8d-d89f-4a13-8cd0-802007b195ec",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[85658, 1953, 173, 3, 53, "Subsection",ExpressionUUID->"5226b7f3-ce51-4a00-a763-f01f3c8abee3"],
Cell[85834, 1958, 4055, 87, 425, "Input",ExpressionUUID->"935eb464-264a-42cb-b605-8c80fee4d84a",
 InitializationCell->True],
Cell[89892, 2047, 1231, 28, 216, "Input",ExpressionUUID->"e566ffc1-11e8-4630-8035-0a833f727609",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[91160, 2080, 162, 3, 53, "Subsection",ExpressionUUID->"d0ea7f6b-a800-45b9-a00e-272d00b597c0"],
Cell[91325, 2085, 3467, 77, 401, "Input",ExpressionUUID->"0b65179f-a26e-4a46-853d-3f2c8d33e2af",
 InitializationCell->True],
Cell[94795, 2164, 3470, 82, 439, "Input",ExpressionUUID->"9a1db74f-e0c6-4010-8b83-a2826ef9c066",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[98314, 2252, 203, 4, 53, "Section",ExpressionUUID->"68ca5d2f-c129-4959-906c-c961ab57f4f5"],
Cell[CellGroupData[{
Cell[98542, 2260, 400, 6, 53, "Subsection",ExpressionUUID->"70847f73-3950-49c4-82fd-6a0665f5da31"],
Cell[98945, 2268, 1706, 36, 121, "Input",ExpressionUUID->"68023746-3714-4de0-96b7-6ab118e56023",
 InitializationCell->True],
Cell[100654, 2306, 1147, 28, 141, "Code",ExpressionUUID->"a6e4c551-d93f-42de-bbe0-c01d05c82d99",
 InitializationCell->True],
Cell[101804, 2336, 3496, 73, 311, "Input",ExpressionUUID->"a884dc4d-fc2c-40eb-8c29-9a0d306a592a",
 InitializationCell->True],
Cell[105303, 2411, 772, 17, 83, "Input",ExpressionUUID->"e47a300e-c2ca-40c9-931f-7acbd5c64b51",
 InitializationCell->True],
Cell[106078, 2430, 738, 17, 64, "Input",ExpressionUUID->"22b0e542-d87f-4534-a1fa-a9cafeafd0d8",
 InitializationCell->True],
Cell[106819, 2449, 5152, 107, 691, "Input",ExpressionUUID->"9c66f5a1-8a91-4e61-bd84-092b418c5a89",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[112008, 2561, 216, 4, 37, "Subsection",ExpressionUUID->"54832d8d-5531-4232-affd-520318fd825c"],
Cell[112227, 2567, 6200, 124, 729, "Input",ExpressionUUID->"84e4a7d5-72eb-4754-82f9-b05fda40925d",
 InitializationCell->True],
Cell[118430, 2693, 7392, 149, 710, "Input",ExpressionUUID->"6ee40d2c-e1ac-4a9d-b5b8-a1047415b590",
 InitializationCell->True],
Cell[125825, 2844, 4013, 85, 537, "Code",ExpressionUUID->"39283ed3-90b8-4217-ab02-a9633fa5b7e1"],
Cell[129841, 2931, 5949, 114, 411, "Code",ExpressionUUID->"16159fbe-adba-4a4d-ba72-b56edfd568ed"],
Cell[135793, 3047, 3466, 75, 447, "Code",ExpressionUUID->"559b037e-a9fd-461e-9e65-eb8ab973f761"],
Cell[139262, 3124, 2318, 45, 249, "Code",ExpressionUUID->"d8c90e41-14a9-4e4f-a614-b9e3ee66e54f"],
Cell[141583, 3171, 6902, 141, 824, "Input",ExpressionUUID->"56948f5a-4e4c-4010-96e8-66fa32c4ce79",
 InitializationCell->True],
Cell[148488, 3314, 1224, 25, 159, "Input",ExpressionUUID->"fccb44b7-0c3a-43f9-aa8e-830bd7c48c09",
 InitializationCell->True],
Cell[149715, 3341, 983, 25, 178, "Input",ExpressionUUID->"88b059af-ecb3-4aa3-9f1d-aa1e98cf88c0",
 InitializationCell->True],
Cell[150701, 3368, 1774, 34, 83, "Input",ExpressionUUID->"e8fc2bbe-8bbc-4b57-aea6-c15910f25b80",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[152512, 3407, 169, 3, 53, "Subsection",ExpressionUUID->"532bd56e-96b9-4d7e-a990-eb6de6a3a335"],
Cell[152684, 3412, 996, 24, 121, "Input",ExpressionUUID->"3a79404d-b67a-4959-8a57-1be774ea8d74",
 InitializationCell->True],
Cell[153683, 3438, 896, 22, 121, "Input",ExpressionUUID->"b6253844-f1bd-489a-9cce-1c7989c483d5",
 InitializationCell->True],
Cell[154582, 3462, 845, 22, 121, "Input",ExpressionUUID->"9ff67c7b-d2c1-4bf6-a44d-49cd58df0eed",
 InitializationCell->True],
Cell[155430, 3486, 857, 22, 121, "Input",ExpressionUUID->"6c2ea50e-65d8-41d3-82f6-6cdcdf7d6393",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[156324, 3513, 213, 4, 37, "Subsection",ExpressionUUID->"b911819c-e3e8-4e48-8dbd-36b1c9a4b58d"],
Cell[156540, 3519, 1249, 29, 178, "Input",ExpressionUUID->"02f64730-b676-4233-951f-456f6b812322",
 InitializationCell->True],
Cell[157792, 3550, 12276, 268, 1299, "Input",ExpressionUUID->"2b4e9af7-3a74-4833-9fd5-060c5912a1d5",
 InitializationCell->True],
Cell[170071, 3820, 2453, 56, 368, "Input",ExpressionUUID->"69f6946e-617e-415e-9f69-0f95788a304f",
 InitializationCell->True],
Cell[172527, 3878, 2469, 57, 349, "Input",ExpressionUUID->"ef8d3a8f-c80f-4949-b2a1-311870e683ae",
 InitializationCell->True],
Cell[174999, 3937, 4207, 93, 444, "Input",ExpressionUUID->"942dca84-f24d-493e-990d-48d2ac810ca6",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[179243, 4035, 340, 5, 53, "Subsection",ExpressionUUID->"b57b25cf-e902-419a-8bbc-21c709fb7218"],
Cell[179586, 4042, 1700, 36, 216, "Input",ExpressionUUID->"eedcd152-6f80-4524-84d3-81b8ea7f5cb2",
 InitializationCell->True],
Cell[181289, 4080, 2430, 54, 254, "Input",ExpressionUUID->"e0804fe8-34ff-429d-93e4-ea27e2351661",
 InitializationCell->True],
Cell[183722, 4136, 3804, 82, 387, "Input",ExpressionUUID->"5b88818b-c6ae-40f1-aad2-daa833087662",
 InitializationCell->True],
Cell[187529, 4220, 3253, 69, 349, "Input",ExpressionUUID->"bbb556f5-afda-41cf-b02d-c529748a85e4",
 InitializationCell->True],
Cell[190785, 4291, 2204, 45, 292, "Input",ExpressionUUID->"b75eb24c-ef66-4967-94e2-0a0b0bca36e4",
 InitializationCell->True],
Cell[192992, 4338, 4371, 89, 558, "Input",ExpressionUUID->"a9b56e85-2c90-43f4-bd62-acc582a9f332",
 InitializationCell->True],
Cell[197366, 4429, 2555, 57, 406, "Input",ExpressionUUID->"023778c0-327c-4b88-97d3-884d386f3637",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[199958, 4491, 329, 5, 53, "Subsection",ExpressionUUID->"824bac71-d392-4a07-b3ea-fa6980fca50a"],
Cell[200290, 4498, 3474, 75, 539, "Input",ExpressionUUID->"42973efc-eb04-4e50-be33-438430346904",
 InitializationCell->True],
Cell[203767, 4575, 3284, 68, 520, "Input",ExpressionUUID->"69ca5f1c-18c2-4463-a19a-4ddf7ca1f51f",
 InitializationCell->True],
Cell[207054, 4645, 2882, 61, 444, "Input",ExpressionUUID->"83627e50-707a-46de-811a-32beeffd7bc3",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[209973, 4711, 362, 6, 37, "Subsection",ExpressionUUID->"9d1c49a8-3c91-45e7-9d88-32c1f9365a17"],
Cell[210338, 4719, 1958, 46, 292, "Input",ExpressionUUID->"d4fab6dc-df49-4001-ad3b-176d1c45d1ae",
 InitializationCell->True],
Cell[212299, 4767, 3711, 77, 463, "Input",ExpressionUUID->"c2754904-da0e-45eb-928b-0f56a246084a",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[216047, 4849, 319, 5, 37, "Subsection",ExpressionUUID->"b56dc7cf-61db-4484-9828-98842ab6148d"],
Cell[216369, 4856, 1249, 29, 121, "Input",ExpressionUUID->"6b444968-092a-484d-83ca-c97037d71510",
 InitializationCell->True],
Cell[217621, 4887, 3281, 71, 368, "Input",ExpressionUUID->"2b86fbbc-01f4-478d-903f-1a1dd1eca77e",
 InitializationCell->True],
Cell[220905, 4960, 8153, 168, 976, "Input",ExpressionUUID->"151950d9-f6bf-415b-8b50-3cdea288c263",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[229095, 5133, 186, 3, 53, "Subsection",ExpressionUUID->"1473b6ac-091b-435d-a56e-dc3abdc76cf3"],
Cell[229284, 5138, 4022, 88, 444, "Input",ExpressionUUID->"323ea9d7-de1a-4e15-a09b-a60737e8f45d",
 InitializationCell->True],
Cell[233309, 5228, 5147, 109, 767, "Input",ExpressionUUID->"dbbf1502-5030-4143-a411-13a8fa78aba6",
 InitializationCell->True],
Cell[238459, 5339, 1906, 45, 292, "Input",ExpressionUUID->"fc94485c-5c93-4d72-a2cf-e9571b0e7cff",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[240414, 5390, 166, 3, 53, "Section",ExpressionUUID->"ca647bd2-74da-4f66-b605-1d6126990a20"],
Cell[240583, 5395, 792, 17, 102, "Input",ExpressionUUID->"ffd9cbfc-913b-4198-a012-e3f02cfc018e",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[241412, 5417, 278, 4, 53, "Section",ExpressionUUID->"7a292ed6-432b-4a3a-bcfb-b2ce3fc4514f"],
Cell[CellGroupData[{
Cell[241715, 5425, 273, 4, 53, "Subsection",ExpressionUUID->"30de62f8-dc45-44ee-a8e7-7a40f8292a6b"],
Cell[241991, 5431, 2924, 69, 368, "Input",ExpressionUUID->"7822a400-f117-4888-b2dd-a698d327aa08",
 InitializationCell->True],
Cell[244918, 5502, 6119, 132, 786, "Input",ExpressionUUID->"f64ebceb-6934-4f61-8307-f1c88fb7d70a",
 InitializationCell->True],
Cell[251040, 5636, 1026, 24, 83, "Input",ExpressionUUID->"caf7da32-df2f-47ea-9541-9a4b732f813a",
 InitializationCell->True],
Cell[252069, 5662, 1381, 31, 159, "Input",ExpressionUUID->"48d32707-ef7d-4623-b07e-b712ad31c6b5",
 InitializationCell->True],
Cell[253453, 5695, 3920, 87, 520, "Input",ExpressionUUID->"f98ccce9-4659-4d41-858b-8ff37f057eb2",
 InitializationCell->True],
Cell[257376, 5784, 177, 3, 28, "Input",ExpressionUUID->"0d2d1fdf-e557-4b99-8edd-3f3f7145094a"]
}, Closed]],
Cell[CellGroupData[{
Cell[257590, 5792, 265, 4, 37, "Subsection",ExpressionUUID->"e7df732d-c906-4458-9d91-825210c5c90c"],
Cell[257858, 5798, 1959, 46, 254, "Input",ExpressionUUID->"815be079-7c9e-4ff1-9772-a189047c39bc",
 InitializationCell->True],
Cell[259820, 5846, 989, 24, 83, "Input",ExpressionUUID->"7a2f89c7-f337-4d6c-af90-e1c157b2c2ea",
 InitializationCell->True],
Cell[260812, 5872, 1952, 46, 254, "Input",ExpressionUUID->"6ebc2ae7-8308-4264-9d98-d199742b3735",
 InitializationCell->True],
Cell[262767, 5920, 1042, 26, 83, "Input",ExpressionUUID->"93dbea41-4c26-4038-b0aa-005546223afa",
 InitializationCell->True],
Cell[263812, 5948, 1930, 44, 311, "Input",ExpressionUUID->"c054b1f5-3438-4ca6-b110-c9a4414afc4f",
 InitializationCell->True],
Cell[265745, 5994, 1804, 42, 292, "Input",ExpressionUUID->"25e6d696-6dd2-44cb-aff2-574a93736382",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[267586, 6041, 179, 3, 37, "Subsection",ExpressionUUID->"61e3e6f2-7c88-46d6-92c6-7dc2b3325a18"],
Cell[267768, 6046, 3365, 76, 368, "Input",ExpressionUUID->"2ad52438-be7d-459c-ba80-7e54616be3cc",
 InitializationCell->True],
Cell[271136, 6124, 3184, 73, 368, "Input",ExpressionUUID->"e670c627-4188-42cc-8393-c34b9e52ee68",
 InitializationCell->True],
Cell[274323, 6199, 2717, 64, 311, "Input",ExpressionUUID->"2ffbc420-8625-4d6f-87f3-061dfe8ab1f2",
 InitializationCell->True],
Cell[277043, 6265, 2715, 64, 311, "Input",ExpressionUUID->"e4ec3967-7340-476f-9170-ab39079766d7",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[279795, 6334, 210, 4, 37, "Subsection",ExpressionUUID->"93e5e4f0-2033-4b86-afca-f2a01611e0a9"],
Cell[280008, 6340, 5233, 107, 444, "Input",ExpressionUUID->"0e9906ad-616f-4c18-a6c4-203e42c53335",
 InitializationCell->True],
Cell[285244, 6449, 177, 3, 28, "Input",ExpressionUUID->"8cba4554-abbe-4f6d-b1b7-b6a1ea000f4e"]
}, Closed]],
Cell[CellGroupData[{
Cell[285458, 6457, 332, 5, 37, "Subsection",ExpressionUUID->"1873e5c6-f79c-4367-a931-a6f9495382ec"],
Cell[285793, 6464, 5821, 128, 691, "Input",ExpressionUUID->"6a039f0a-9a70-4f5a-88a1-c2b6808661d2",
 InitializationCell->True],
Cell[291617, 6594, 5453, 115, 653, "Input",ExpressionUUID->"b10bf9d2-822c-4c21-9fd7-36a4b52f85b2",
 InitializationCell->True],
Cell[297073, 6711, 2023, 45, 330, "Input",ExpressionUUID->"9d4d8862-a06b-4104-9322-a8ac84997d9f",
 InitializationCell->True],
Cell[299099, 6758, 1973, 44, 311, "Input",ExpressionUUID->"65a740fc-6397-42e8-9dc3-aaeb2cdbb77d",
 InitializationCell->True],
Cell[301075, 6804, 3670, 75, 349, "Input",ExpressionUUID->"964303b6-9bcd-48f7-a202-aff5c757d9dc",
 InitializationCell->True],
Cell[304748, 6881, 3603, 72, 349, "Input",ExpressionUUID->"e676130d-7d72-41c8-88d2-01721d04874c",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[308388, 6958, 232, 4, 37, "Subsection",ExpressionUUID->"5692c02e-0497-45e1-8f99-f8525ca9bfde"],
Cell[308623, 6964, 5224, 114, 501, "Input",ExpressionUUID->"28da46a5-3989-41b2-a797-195ecf0947cf",
 InitializationCell->True],
Cell[313850, 7080, 2529, 58, 330, "Input",ExpressionUUID->"7dc9dcd9-f33f-4175-a7d4-25b66aa977c6",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[316416, 7143, 191, 2, 37, "Subsection",ExpressionUUID->"4f93e513-e7a0-474a-bd1c-17a91948cf00"],
Cell[316610, 7147, 1521, 37, 197, "Input",ExpressionUUID->"0c2ba6a5-c732-46c9-96aa-b64271e50d9a",
 InitializationCell->True],
Cell[318134, 7186, 2221, 50, 292, "Input",ExpressionUUID->"5d53860e-a9fc-465c-8e1d-c152019a9641",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[320404, 7242, 154, 3, 53, "Section",ExpressionUUID->"4902641e-51f0-4a8b-971c-fbe135010719"],
Cell[CellGroupData[{
Cell[320583, 7249, 193, 3, 53, "Subsection",ExpressionUUID->"40eb74ee-a349-4333-bdc0-daae10e7f538"],
Cell[320779, 7254, 3864, 85, 501, "Code",ExpressionUUID->"d8370447-f005-4da7-9d0b-235dd84c4043"],
Cell[324646, 7341, 261, 6, 44, "Input",ExpressionUUID->"3161fcad-5a69-40bf-b37a-2e44d5ec7d6b",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[324944, 7352, 165, 3, 37, "Subsection",ExpressionUUID->"a495adef-62ed-483c-91d7-50d523ad1b29"],
Cell[325112, 7357, 10292, 201, 483, "Code",ExpressionUUID->"0cbb54ed-c165-45ae-82fe-d87006b5f4c8"]
}, Closed]],
Cell[CellGroupData[{
Cell[335441, 7563, 166, 3, 37, "Subsection",ExpressionUUID->"f2654bfd-715c-4018-8291-5fd004992945"],
Cell[335610, 7568, 5153, 116, 393, "Code",ExpressionUUID->"9e882633-5cc9-4f86-97e6-4f9a6b680fbc"]
}, Closed]],
Cell[CellGroupData[{
Cell[340800, 7689, 167, 3, 37, "Subsection",ExpressionUUID->"47150252-0c22-4e7c-907b-1ae72fce92f4"],
Cell[CellGroupData[{
Cell[340992, 7696, 169, 3, 44, "Subsubsection",ExpressionUUID->"953080ab-4e39-4379-9578-1a1107c2ee0f"],
Cell[341164, 7701, 1491, 30, 249, "Code",ExpressionUUID->"aa153535-d2ef-488a-bc15-f9e213fe35ca"],
Cell[342658, 7733, 543, 12, 87, "Code",ExpressionUUID->"72cb546e-6524-4488-ad1b-7740485ce3be"],
Cell[343204, 7747, 2732, 46, 123, "Code",ExpressionUUID->"814a61c5-f47f-49dd-b3f3-d85aea4fec2f"],
Cell[345939, 7795, 4096, 89, 393, "Code",ExpressionUUID->"e054845d-c0da-4d89-a003-613c0884d705"],
Cell[350038, 7886, 9922, 200, 1019, "Code",ExpressionUUID->"e6e01044-b446-479d-bfd8-95cd547ead92"],
Cell[359963, 8088, 8092, 163, 891, "Code",ExpressionUUID->"873bd26b-ae91-4d50-8f1c-8493a878f42e"],
Cell[368058, 8253, 3701, 78, 627, "Code",ExpressionUUID->"d1479468-773c-4833-8b6b-6b047a290820"],
Cell[371762, 8333, 7472, 151, 843, "Code",ExpressionUUID->"bd6eee68-c180-4fa4-b588-1c180a692427"],
Cell[379237, 8486, 5816, 115, 819, "Code",ExpressionUUID->"03f1e616-4d7f-48bb-af65-80ea042b836c"],
Cell[385056, 8603, 889, 19, 123, "Code",ExpressionUUID->"f24d30e3-c5b9-403e-a2f4-4bba75c8a2d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[385982, 8627, 168, 3, 36, "Subsubsection",ExpressionUUID->"c7bbda94-3fca-4767-8fc4-fc3a8925d9c4"],
Cell[386153, 8632, 1245, 30, 123, "Code",ExpressionUUID->"9faa5175-ec39-46c9-a37d-8d7f09514233"]
}, Closed]],
Cell[CellGroupData[{
Cell[387435, 8667, 226, 4, 36, "Subsubsection",ExpressionUUID->"b2fdb2a6-ec3c-4687-b4cf-037fdae9645a"],
Cell[387664, 8673, 29530, 564, 2247, "Code",ExpressionUUID->"7f57792c-cef3-46a0-ad6a-6cbbf0294f1c"],
Cell[417197, 9239, 5376, 110, 645, "Code",ExpressionUUID->"8ba28e66-8ae5-4978-946c-696e0e0a953d"],
Cell[422576, 9351, 1915, 44, 267, "Code",ExpressionUUID->"4a181981-918b-483a-abe1-c9f4a4987c51"],
Cell[424494, 9397, 7406, 153, 753, "Code",ExpressionUUID->"e84192ca-ea66-4ec7-b63d-2eaad66e9069"],
Cell[431903, 9552, 4841, 100, 591, "Code",ExpressionUUID->"4c37662c-38f8-44b9-920d-9dbf7ce07e1b"],
Cell[436747, 9654, 3883, 83, 555, "Code",ExpressionUUID->"cbe72cac-bc13-4bf7-8a53-fccf48d66d47"],
Cell[440633, 9739, 3855, 83, 555, "Code",ExpressionUUID->"7e6ab4d2-a6b2-489a-a94b-148f2199fa39"],
Cell[444491, 9824, 9727, 195, 988, "Code",ExpressionUUID->"80e0ab1c-432b-4bf4-94b8-df8d7d0e0631"],
Cell[454221, 10021, 7532, 150, 837, "Code",ExpressionUUID->"7ffa2dcf-1822-477b-b5d2-f92bd71b02f8"],
Cell[461756, 10173, 3253, 70, 447, "Code",ExpressionUUID->"7ba87a15-f6e1-442e-977c-5c1f44305563"],
Cell[465012, 10245, 9649, 193, 879, "Code",ExpressionUUID->"90be2653-1534-4ee2-846d-9e35889aa66a"],
Cell[474664, 10440, 3983, 88, 465, "Code",ExpressionUUID->"237ecb52-3b09-4530-b10c-0fec3c0392b6"]
}, Closed]],
Cell[CellGroupData[{
Cell[478684, 10533, 174, 3, 36, "Subsubsection",ExpressionUUID->"ad3bd094-ca62-41ca-a480-645d20cba0fb"],
Cell[478861, 10538, 17757, 348, 1149, "Code",ExpressionUUID->"2bb74e5a-4d4e-4b30-87d9-98f2b301df9f"],
Cell[496621, 10888, 6312, 129, 717, "Code",ExpressionUUID->"d5cb9310-fe06-4fc0-b224-1901f18c3311"],
Cell[502936, 11019, 3983, 85, 573, "Code",ExpressionUUID->"48ad4895-4a62-42a8-aa2f-8e1b2c3c6016"],
Cell[506922, 11106, 925, 22, 141, "Code",ExpressionUUID->"cb098e9f-81e2-4fbf-8e8a-54e2b07e46a1"],
Cell[507850, 11130, 5585, 121, 699, "Code",ExpressionUUID->"61862c58-8054-4162-96dc-426dcffaa262"],
Cell[513438, 11253, 735, 16, 141, "Code",ExpressionUUID->"48a11184-4dd2-4e29-adc9-fb5203e8da21"],
Cell[514176, 11271, 3986, 86, 591, "Code",ExpressionUUID->"dbc2d0a8-e4c2-4022-bfe7-88eac4f46a68"],
Cell[518165, 11359, 7244, 148, 879, "Code",ExpressionUUID->"1dfc7ad0-e224-4fd5-8af8-4dea98999b69"],
Cell[525412, 11509, 796, 17, 141, "Code",ExpressionUUID->"752ca179-2f8f-4e27-a39c-d4cbf6a9d542"],
Cell[526211, 11528, 6178, 131, 771, "Code",ExpressionUUID->"df58db14-ccaa-442f-bcc4-b72a8b34e487"],
Cell[532392, 11661, 4547, 97, 743, "Code",ExpressionUUID->"5d0b23db-e7dc-43bd-879c-f839f3a6cb44"],
Cell[536942, 11760, 6483, 133, 843, "Code",ExpressionUUID->"16bdb686-605f-45a0-b216-3e5ab5da0be7"]
}, Closed]],
Cell[CellGroupData[{
Cell[543462, 11898, 176, 3, 36, "Subsubsection",ExpressionUUID->"e6169358-8236-45d6-be1f-40643c165d93"],
Cell[543641, 11903, 12737, 261, 897, "Code",ExpressionUUID->"7fb7d6ac-4a27-4696-a709-7e0493d5a10d"]
}, Closed]],
Cell[CellGroupData[{
Cell[556415, 12169, 234, 4, 36, "Subsubsection",ExpressionUUID->"f42724b7-e198-4778-b9ca-26f14dbf875d"],
Cell[556652, 12175, 2509, 51, 231, "Code",ExpressionUUID->"a75e652a-f22a-41a3-b31c-da4bd4cdc553"],
Cell[559164, 12228, 1884, 41, 292, "Input",ExpressionUUID->"e7fa5944-c407-42ec-86a8-a2e1fde9b2be",
 InitializationCell->True],
Cell[561051, 12271, 7213, 154, 881, "Input",ExpressionUUID->"faf78421-726b-4751-a577-e2d7d422bf5b",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[568301, 12430, 169, 3, 36, "Subsubsection",ExpressionUUID->"2ef1216e-634e-4865-a240-caf4299e1f10"],
Cell[568473, 12435, 580, 14, 105, "Code",ExpressionUUID->"bac59cf1-4ed5-4c65-891f-93692501e3bf"]
}, Closed]],
Cell[CellGroupData[{
Cell[569090, 12454, 171, 3, 36, "Subsubsection",ExpressionUUID->"152383dc-ed69-416f-bfcb-a6c978029ad9"],
Cell[569264, 12459, 1156, 26, 195, "Code",ExpressionUUID->"adf2b488-81fc-4b42-bd63-69d1977c94ad"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[570469, 12491, 167, 3, 37, "Subsection",ExpressionUUID->"8d4cb298-2dd1-4572-a970-1299af0ff1a3"],
Cell[570639, 12496, 11993, 241, 1375, "Input",ExpressionUUID->"dd26cb8a-1b57-4358-a4cd-00b84b947ea1",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[582681, 12743, 155, 3, 53, "Section",ExpressionUUID->"13c10002-c77b-426f-b4b8-3b892f3d74d2"],
Cell[582839, 12748, 896, 23, 124, "Input",ExpressionUUID->"941aa16a-a0bb-4188-a002-29102fdabd6c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

